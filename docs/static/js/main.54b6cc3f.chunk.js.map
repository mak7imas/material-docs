{"version":3,"sources":["serviceWorker.js","docs-app/pages/Components/DocsPageDemo/index.js","lib/stylesheets/commonStyles.js","lib/components/Headers/styles.js","lib/hooks/useTags/useTags.js","lib/components/Headers/Headers.js","lib/utils/createRouteFromName.js","lib/utils/getTextFromChildren.js","lib/utils/getElementOffsetSum.js","lib/components/List/styles.js","lib/components/List/List.js","lib/components/ListItemContained/ListItemContained.js","lib/components/ListItem/styles.js","lib/components/ListItem/ListItem.js","lib/components/Code/styles.js","lib/components/Code/Code.js","lib/components/Bold/styles.js","lib/components/Bold/Bold.js","lib/components/Italic/styles.js","lib/components/Italic/Italic.js","lib/components/Image/styles.js","lib/components/Image/Image.js","lib/components/Table/styles.js","lib/components/Table/Table.js","lib/components/Block/styles.js","lib/components/Block/Block.js","lib/components/CodeSpan/styles.js","lib/components/CodeSpan/CodeSpan.js","lib/components/Markdown/styles.js","lib/components/Markdown/Markdown.js","lib/utils/generateMaterialDocsFromMarkdown.js","docs-app/components/ApiPage.js","docs-app/pages/APIs/DocsPageAPI/index.js","docs-app/pages/APIs/DemoWithCodeAPI/index.js","docs-app/pages/APIs/CodeAPI/index.js","docs-app/pages/APIs/PagesGroupAPI/index.js","docs-app/pages/APIs/ImageAPI/index.js","docs-app/pages/APIs/ListItemAPI/index.js","docs-app/pages/APIs/ExpansionCodeAPI/index.js","docs-app/pages/APIs/BlockAPI/index.js","docs-app/pages/APIs/CodeSpanAPI/index.js","docs-app/pages/APIs/ItalicAPI/index.js","docs-app/pages/APIs/ListAPI/index.js","docs-app/pages/APIs/DocsMenuItemAPI/index.js","docs-app/pages/APIs/MarkdownAPI/index.js","docs-app/pages/APIs/TableAPI/index.js","docs-app/pages/APIs/TableRowAPI/index.js","docs-app/pages/APIs/TableCellAPI/index.js","docs-app/pages/APIs/TableBodyAPI/index.js","docs-app/pages/APIs/TableHeadAPI/index.js","docs-app/pages/APIs/BoldAPI/index.js","docs-app/pages/APIs/ListItemContainedAPI/index.js","docs-app/pages/APIs/DocsPagesAPI/index.js","docs-app/pages/APIs/DocsMenuAPI/index.js","docs-app/pages/APIs/DocsLayoutAPI/index.js","docs-app/pages/APIs/AutoDocsMenuAPI/index.js","docs-app/pages/APIs/LanguageSelectorAPI/index.js","docs-app/pages/APIs/SearchFieldAPI/index.js","docs-app/examples/Lists/SimpleList.js","docs-app/examples/Lists/ListWithNestedItems.js","docs-app/examples/Lists/DecoratedList.js","docs-app/pages/Components/ListsDemo/index.js","docs-app/pages/GettingStarted/Installation/index.js","docs-app/pages/Components/LayoutDemo/index.js","docs-app/Documentation.js","index.js"],"names":["Boolean","window","location","hostname","match","DocsPageDemo","name","searchDescription","noDivider","useCommonStyles","makeStyles","theme","pageBlock","marginBottom","spacing","paddingTop","useStyles","root","maxWidth","container","position","tagHook","left","top","color","grey","display","padding","paddingLeft","anchor","marginTop","divider","h1","fontSize","h2","h3","h4","h5","h6","typography","overflowWrap","anchorIcon","transform","TaggingContext","React","createContext","setTag","key","value","ReferenceError","removeTag","tags","useTags","useContext","TagableF","forwardRef","ref","children","noTag","variant","style","className","props","classes","commonClasses","useState","topOffset","setTopOffset","id","useRef","TypeError","replace","toLowerCase","createRouteFromName","getTextFromChildren","depth","text","Children","map","child","isValidElement","join","trim","aref","typographyClasses","useEffect","current","label","elem","parseFloat","offsetTop","offsetLeft","offsetParent","parentElement","Math","round","getElementOffsetSum","clsx","undefined","Typography","Divider","href","displayName","defaultProps","Tagable","H1","H2","H3","H4","H5","H6","HeaderF","heading","Header","stylePositionInside","listStylePosition","stylePositionOutside","stylePositionInherit","stylePositionRevert","stylePositionUnset","List","image","ListItemContained","this","Component","paddingBottom","fontWeight","letterSpacing","typeCircle","listStyleType","typeSquare","typeRoman","typeAlpha","typeNone","listStyle","list","dense","ListItem","type","containers","length","console","error","containedItems","content","listTypeClass","overflowX","highlighterContainer","Code","language","height","setHeight","codeRef","rootRef","onResize","event","scrollbar","offsetHeight","clientHeight","fixStyle","hljs","background","addEventListener","removeEventListener","codeStyles","light","highlight","docco","dark","darcula","blueGrey","codeStyle","Paper","backgroundColor","elevation","element","bold","Bold","italic","fontStyle","Italic","fullWidth","width","flexGrow","Image","src","alt","Fragment","placeholder","CircularProgress","table","right","minWidth","Table","containerRef","tableRef","borderLeft","colorLight","colorDark","Block","square","borderRadius","colorDefault","yellow","colorPrimary","palette","primary","colorSecondary","secondary","colorGrey","font","fontFamily","textInherit","textWhite","common","white","textBlack","black","CodeSpan","Markdown","inline","setContent","String","generateMaterialDocsFromMarkdown","input","tokens","marked","lexer","token","items","lang","Link","header","cells","TableHead","TableRow","cell","TableCell","TableBody","row","log","datatype","purple","code","underlined","textDecoration","ApiPage","localeName","importCode","searchTags","Error","locale","pages","localeSpells","spells","componentAPILocale","ComponentAPI","showProps","enableProps","noPropsText","showCss","enableCss","noCssText","pageSearchDescription","pageAbout","Import","importDifferenceText","ComponentNameHeader","ComponentNameText","propName","propType","propDefault","propDescription","prop","default","description","ruleName","ruleDescription","Object","keys","css","customization","DocsPageAPI","useLang","DemoWithCodeAPI","CodeAPI","PagesGroupAPI","ImageAPI","ListItemAPI","ExpansionCodeAPI","BlockAPI","CodeSpanAPI","ItalicAPI","ListAPI","DocsMenuItemAPI","MarkdownAPI","TableAPI","TableRowAPI","TableCellAPI","TableBodyAPI","TableHeadAPI","BoldAPI","ListItemContainedAPI","DocsPagesAPI","DocsMenuAPI","DocsLayoutAPI","AutoDocsMenuAPI","LanguageSelectorAPI","SearchFieldAPI","SimpleList","ListWithNestedItems","DecoratedList","SimpleListCode","ListWithNestedItemsCode","DecoratedListCode","ListsDemo","searchLabel","paperContainer","defaultExpanded","Box","p","installCode","MUIInstallationCode","MUIIconsInstallationCode","Installation","SimpleLayout","LayoutWithAutoMenu","LayoutDemo","Documentation","defaultLang","EN","langs","RU","basename","process","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.54b6cc3f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {DocsPage, H1, H2, H3, Markdown} from \"@danilandreev/material-docs\";\n\nconst pageMarkdown = `\n# Hello, i ___italic text___ am header 1\n## And me is header 2\n# heading no 1\n##### heading no 5\n> tip field  \n> sdfsf  \n> sdafaf  \n\nI am a simple text \n\n* list lol1 \\`\\`\\`import lol from lol\\`\\`\\` hello darkness\n* list lol2\n  * list nested1\n  * list nested2\n  \n\\`\\`\\`javascript\n//I am the code\nexport default function Lol(1) {\n    return null;\n}\n\n\\`\\`\\`\n\n\\`\\`\\` I am inline code \\`\\`\\`\n\n[I am link __sdfsf__](https://sdfsf.com.ua)  \n[I am an another link](https://sdfsf.com.ua)\n\n__bold text__  \n___bold italic___  \n_italic_\n\n![I am picture](https://static01.nyt.com/images/2018/10/04/magazine/04blackhole1/04blackhole1-articleLarge-v3.jpg?quality=75&auto=webp&disable=upscale)\n\n---\n\n| Name          | Type     | Default | Description                             |\n|---------------|----------|---------|-----------------------------------------|\n| button        | boolean  |         | if __true__, row will be clickable.     |\n| onClick       | function |         | callback, called on click event.        |\n| onDoubleClick | function |         | callback, called on double click event. |\n| children      | node     |         | The content of element                  |\n\n`;\n\nconst pageMarkdown2 = `\n# FlexibleTable API\n### The API documentation of the FlexibleTable React component. Learn more about the props and the CSS customization points.\n\n## Import\n\\`\\`\\`jsx\nimport {FlexibleTable} from \"@danilandreev/mui-table-flexible\";\n//or \nimport FlexibleTable from \"@danilandreev/mui-table-flexible/dist/organizms/FlexibleTable\";\n\\`\\`\\`\nYou can learn more about the difference by [reading this guide](https://material-ui.com/guides/minimizing-bundle-size/).\n## Props\n| Name          | Type     | Default | Description                             |\n|---------------|----------|---------|-----------------------------------------|\n| button        | boolean  |         | if true, row will be clickable.         |\n| onClick       | function |         | callback, called on click event.        |\n| onDoubleClick | function |         | callback, called on double click event. |\n| children      | node     |         | The content of element                  |\n\n\nThe __ref__ is forwarded to the root element.\n\nAny other props supplied will be provided to the root element (native element).\n\n## CSS\n| Rule name      | Description                                  |\n|----------------|----------------------------------------------|\n| root           | Styles applied to the root element.          |\n| tableContainer | Styles applied to the inner table container. |\n| head           | Styles applied to the table head element.    |\n| body           | Styles applied to the table body element.    |\n\nYou can override the style of the component thanks to one of these customization points:\n* With a rule name of the [__classes__ object prop](https://material-ui.com/customization/components/#overriding-styles-with-classes).\n* With a [global class name](https://material-ui.com/customization/components/#overriding-styles-with-global-class-names).\n\nIf that's not sufficient, you can check the [implementation of the component](https://github.com/DanilAndreev/mui-table-flexible/blob/master/src/lib/organizms/FlexibleTable/FlexibleTable.tsx) for more detail.\n## Demos\n* [FlexibleTable](/DanilAndreev/mui-table-flexible/wiki/FlexibleTable)\n`;\n\nexport default function DocsPageDemo() {\n    return(\n        <DocsPage name={\"DocsPages\"} searchDescription={\"Docs pages sdfsfs\"}>\n            <H1 noDivider>DocsPages</H1>\n            <H3>DocsPages description</H3>\n            <Markdown>{pageMarkdown2}</Markdown>\n\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport const useCommonStyles = makeStyles(theme => ({\n    pageBlock: {\n        marginBottom: theme.spacing(1),\n        paddingTop: theme.spacing(1),\n    }\n}));","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {grey} from \"@material-ui/core/colors\";\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        //TODO: Fix problem with text no text wrapping.\n        maxWidth: `calc(100vw - ${theme.spacing(12)}px)`,\n    },\n    container: {\n        position: \"relative\",\n    },\n    tagHook: {\n        position: \"absolute\",\n        left: -25,\n        top: \"10%\",\n        color: grey[600],\n        display: \"none\",\n        padding: 20,\n        paddingTop: 0,\n        paddingLeft: 0,\n        \"&:hover\": {\n            color: grey[700],\n            display: \"block\",\n        },\n    },\n    anchor: {\n        \"&:target\": {\n            paddingTop: 64,\n            marginTop: -64,\n        },\n        \"&:hover $tagHook\": {\n            display: \"block\",\n        }\n    },\n    divider: {\n        marginBottom: theme.spacing(1),\n    },\n    h1: {\n        fontSize: \"2.8rem\",\n    },\n    h2: {\n        fontSize: \"2rem\",\n    },\n    h3: {\n        fontSize: \"1.5rem\",\n    },\n    h4: {\n        fontSize: \"1.2rem\",\n    },\n    h5: {\n        fontSize: \"0.9rem\",\n    },\n    h6: {\n        fontSize: \"0.6rem\",\n    },\n    typography: {\n        overflowWrap: \"break-word\",\n    },\n    anchorIcon: {\n        transform: \"rotate(45deg)\",\n    },\n}));\n","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nexport const TaggingContext = React.createContext({\n    setTag: (key, value) => {\n        throw new ReferenceError(\"MaterialDocs: This function (setTag) hasn't been initialized yet. Maybe, you forget to call hook useTags() inside TaggingContext.Provider\")\n    },\n    removeTag: (key) => {\n        throw new ReferenceError(\"MaterialDocs: This function (removeTag) hasn't been initialized yet. Maybe, you forget to call hook useTags() inside TaggingContext.Provider\")\n    },\n    tags: {},\n});\n\nconst useTags = () => React.useContext(TaggingContext);\nexport default useTags;","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React, {Children} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport createRouteFromName from \"../../utils/createRouteFromName\";\nimport {useStyles} from \"./styles\";\nimport LinkIcon from '@material-ui/icons/Link';\nimport clsx from \"clsx\";\nimport useTags from \"../../hooks/useTags\";\nimport {useCommonStyles} from \"../../stylesheets/commonStyles\";\nimport getElementOffsetSum from \"../../utils/getElementOffsetSum\";\nimport PropTypes from \"prop-types\";\nimport getTextFromChildren from \"../../utils/getTextFromChildren\";\n\n\nconst TagableF = React.forwardRef(function TagableF({children, noTag = false, variant, style, className, noDivider = false, ...props}, ref) {\n    const classes = {...useStyles(), ...props.classes};\n    const commonClasses = useCommonStyles();\n    const {setTag, removeTag} = useTags();\n    const [topOffset, setTopOffset] = React.useState(0);\n    const id = React.useRef(props.id || createRouteFromName(getTextFromChildren(children, 6)));\n    const aref = React.useRef(null);\n    const typographyClasses = {h1: classes.h1, h2: classes.h2, h3: classes.h3, h4: classes.h4, h5: classes.h5}\n\n    React.useEffect(() => {\n        !noTag && setTag(id.current, {label: children, ref: aref, topOffset});\n        return () => {\n            if (!noTag) {\n                removeTag(id.current);\n            }\n        };\n    }, [children, aref, topOffset]);\n\n    React.useEffect(() => {\n        const {top} = getElementOffsetSum(aref.current);\n        setTopOffset(top);\n    }, [aref]);\n\n    return (\n        <div\n            className={clsx(commonClasses.pageBlock, classes.root, className)}\n\n            style={style}\n            ref={ref}\n        >\n            <div\n                className={classes.anchor}\n                id={noTag ? undefined : id.current}\n            >\n                <div className={classes.container}>\n                    <Typography variant={variant} classes={typographyClasses} className={classes.typography}>\n                        {children}\n                        {!noDivider && <Divider className={classes.divider}/>}\n                    </Typography>\n                    {!noTag &&\n                    <a href={`#${id.current}`} className={classes.tagHook} ref={aref}>\n                        <LinkIcon className={classes.anchorIcon}/>\n                    </a>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n});\n\nTagableF.displayName = \"Tagable\";\n\nTagableF.defaultProps = {\n    noTag: false,\n    noDivider: false,\n}\n\nTagableF.propTypes = {\n    // Stylable\n    style: PropTypes.object,\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    // Containerable\n    children: PropTypes.node,\n}\n\nexport const Tagable = TagableF;\n\n\nfunction H1F({children, ...props}, ref) {\n    return <Tagable variant={\"h1\"} {...props} ref={ref}>{children}</Tagable>\n}\n\nexport const H1 = React.forwardRef(H1F);\n\n\nfunction H2F({children, ...props}, ref) {\n    return <Tagable variant={\"h2\"} {...props} ref={ref}>{children}</Tagable>\n}\n\nexport const H2 = React.forwardRef(H2F);\n\n\nfunction H3F({children, ...props}, ref) {\n    return <Tagable variant={\"h3\"} {...props} ref={ref}>{children}</Tagable>\n}\n\nexport const H3 = React.forwardRef(H3F);\n\n\nfunction H4F({children, noDivider = true, noTag = true, ...props}, ref) {\n    return <Tagable variant={\"h4\"} {...props} noTag={noTag} noDivider={noDivider} ref={ref}>{children}</Tagable>\n}\n\nexport const H4 = React.forwardRef(H4F);\n\n\nfunction H5F({children, noDivider = true, noTag = true, ...props}, ref) {\n    return <Tagable variant={\"h5\"} {...props} noTag={noTag} noDivider={noDivider} ref={ref}>{children}</Tagable>\n}\n\nexport const H5 = React.forwardRef(H5F);\n\n\nfunction H6F({children, noDivider = true, noTag = true, ...props}, ref) {\n    return <Tagable variant={\"h6\"} {...props} noTag={noTag} noDivider={noDivider} ref={ref}>{children}</Tagable>\n}\n\nexport const H6 = React.forwardRef(H6F);\n\n\nconst HeaderF = React.forwardRef(function HeaderF({children, heading = 1, ...props}, ref) {\n    switch (heading) {\n        case 1:\n            return <H1 {...props} ref={ref}>{children}</H1>;\n        case 2:\n            return <H2 {...props} ref={ref}>{children}</H2>;\n        case 3:\n            return <H3 {...props} ref={ref}>{children}</H3>;\n        case 4:\n            return <H4 {...props} ref={ref}>{children}</H4>;\n        case 5:\n            return <H5 {...props} ref={ref}>{children}</H5>;\n        default:\n            return <H6 {...props} ref={ref}>{children}</H6>;\n    }\n});\n\nHeaderF.displayName = \"Header\";\n\nHeaderF.defaultProps = {\n    heading: 1,\n}\n\nHeaderF.propTypes = {\n    heading: PropTypes.oneOf([1, 2, 3, 4, 5, 6]),\n}\n\nexport const Header = HeaderF;","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\n/**\n * createRouteFromName - generates route without extra symbols from string name\n * @param {string} name\n * @example \"Hello it's me\" -> \"hello-its-me\"\n */\nexport default function createRouteFromName(name) {\n    if (typeof name !== \"string\") throw new TypeError(\"MaterialDocs: name must be string type\");\n    const route = name.replace(/\\s+/g, \" \")\n        .replace(/\\ +/g, \"-\")\n        .replace(/'+/g, \"\")\n        .replace(/\\?+/g, \"\").toLowerCase();\n    return route;\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\n/**\n * getTextFromChildren - returns deep text from children.\n * @param {any} children\n * @param {number} depth\n * @return {string}\n */\nexport default function getTextFromChildren(children, depth = 1) {\n    if (depth < 1) return \"\";\n    const text = React.Children.map(children, child => {\n        if (React.isValidElement(child)) return getTextFromChildren(child.props.children, depth - 1);\n        if (typeof child === \"string\") return child;\n        return \"\";\n    }).join(\" \").trim();\n    return text || \"\";\n}\n","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nexport default function getElementOffsetSum(elem) {\n    let top = 0;\n    let left = 0;\n    while (elem) {\n        top = top + parseFloat(elem.offsetTop);\n        left = left + parseFloat(elem.offsetLeft);\n        elem = elem.offsetParent || elem.parentElement;\n    }\n\n    return {top: Math.round(top), left: Math.round(left)}\n}\n","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n    },\n    stylePositionInside: {\n        listStylePosition: \"inside\",\n    },\n    stylePositionOutside: {\n        listStylePosition: \"outside\",\n    },\n    stylePositionInherit: {\n        listStylePosition: \"inherit\",\n    },\n    stylePositionRevert: {\n        listStylePosition: \"revert\",\n    },\n    stylePositionUnset: {\n        listStylePosition: \"unset\",\n    },\n}));","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {useStyles} from \"./styles\";\nimport clsx from \"clsx\";\nimport {useCommonStyles} from \"../../stylesheets/commonStyles\";\nimport PropTypes from \"prop-types\";\n\nconst List = React.forwardRef(function List({children, className, style, image, ...props}, ref) {\n    const classes = {...useStyles(), ...props.classes};\n    const commonClasses = useCommonStyles();\n\n    return (\n        <ul {...props} ref={ref} className={clsx(commonClasses.pageBlock, classes.root, className)} style={style}>\n            {children}\n        </ul>\n    );\n});\n\nList.displayName = \"List\";\n\nList.defaultProps = {\n}\n\nList.propTypes = {\n    // ListProps\n    image: PropTypes.string,\n    styling: PropTypes.oneOf([\"inside\", \"outside\", \"inherit\", \"revert\", \"unset\"]),\n    // Stylable\n    style: PropTypes.object,\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    // Containerable\n    children: PropTypes.node,\n}\n\nexport default List;\n","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ListItemContained extends React.Component {\n    render() {\n        return this.props.children;\n    }\n}\n\nListItemContained.displayName = \"ListItemContained\";\n\nListItemContained.defaultProps = {\n}\n\nListItemContained.propTypes = {\n    // Containerable\n    children: PropTypes.node,\n}\n\nexport default ListItemContained;\n","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {grey} from \"@material-ui/core/colors\";\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(0.5),\n        paddingBottom: 0,\n        paddingTop: theme.spacing(1),\n        fontSize: \"1rem\",\n        fontWeight: 400,\n        letterSpacing: \"0.00938em\",\n    },\n    typeCircle: {\n        listStyleType: \"circle\",\n    },\n    typeSquare: {\n        listStyleType: \"square\",\n    },\n    typeRoman: {\n        listStyleType: \"upper-roman\",\n    },\n    typeAlpha: {\n        listStyleType: \"lower-alpha\",\n    },\n    typeNone: {\n        listStyle: \"none\",\n    },\n    list: {\n        paddingLeft: theme.spacing(2),\n    },\n    dense: {\n        padding: theme.spacing(0.3),\n        paddingLeft: theme.spacing(0.5),\n        paddingTop: theme.spacing(0.4),\n    }\n}));","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport ListItemContained from \"../ListItemContained\";\nimport {useStyles} from \"./styles\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\nconst ListItem = React.forwardRef(function ListItem({children, type = \"circle\", dense = false, style, className, ...props}, ref) {\n    const classes = {...useStyles(), ...props.classes};\n    const containers = React.Children.map(children, child => child.type === ListItemContained ? child : null);\n    if (containers.length > 1) console.error(\"MaterialDocs: List item can contain only one ListItemContained element\");\n\n    const containedItems = containers[0] && containers[0].props && containers[0].props.children;\n    const content = React.Children.map(children, child => child.type === ListItemContained ? null : child);\n\n    let listTypeClass = classes.typeCircle;\n    switch (type) {\n        case \"square\":\n            listTypeClass = classes.typeSquare;\n            break;\n        case \"upper-roman\":\n            listTypeClass = classes.typeRoman;\n            break;\n        case \"lower-alpha\":\n            listTypeClass = classes.typeAlpha;\n            break;\n        case \"none\":\n            listTypeClass = classes.typeNone;\n            break;\n    }\n\n    return (\n        <li\n            className={clsx(classes.root, dense && classes.dense, listTypeClass, className)}\n            {...props}\n            ref={ref}\n            style={style}\n        >\n            <div>\n                <div>\n                    {content}\n                </div>\n                {containedItems &&\n                <ul className={classes.list}>\n                    {containedItems}\n                </ul>\n                }\n            </div>\n        </li>\n    );\n});\n\nListItem.displayName = \"ListItem\";\n\nListItem.defaultProps = {\n    type: \"circle\",\n    dense: false,\n}\n\nListItem.propTypes = {\n    // ListItemProps\n    type: PropTypes.oneOf([\"circle\", \"square\", \"upper-roman\", \"lower-alpha\", \"none\"]),\n    dense: PropTypes.bool,\n    // Stylable\n    style: PropTypes.object,\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    // Containerable\n    children: PropTypes.node,\n}\n\nexport default ListItem;","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        overflowX: \"auto\",\n        position: \"relative\",\n    },\n    highlighterContainer: {\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n    }\n}));\n","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {darcula, dark, docco} from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport {blueGrey, grey} from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\nimport {useStyles} from \"./styles\";\nimport {useCommonStyles} from \"../../stylesheets/commonStyles\";\nimport PropTypes from \"prop-types\";\n\n\nconst Code = React.forwardRef(function Code({children, language = \"javascript\", theme = \"light\", style, className}, ref) {\n    const classes = useStyles();\n    const commonClasses = useCommonStyles();\n    const [height, setHeight] = React.useState(0);\n    const codeRef = React.useRef(null);\n    const rootRef = React.useRef(null);\n\n    React.useEffect(() => {\n        onResize();\n        window.addEventListener(\"resize\", onResize);\n        return () => window.removeEventListener(\"resize\", onResize);\n    }, [children, codeRef.current, rootRef.current]);\n\n    function onResize(event) {\n        const scrollbar = rootRef.current ? rootRef.current.offsetHeight - rootRef.current.clientHeight : 0;\n        if (codeRef.current) {\n            setHeight(codeRef.current.clientHeight + scrollbar);\n        } else {\n            setHeight(0);\n        }\n    }\n\n    function fixStyle(style) {\n        return {...style, hljs: {...style.hljs, background: 'none'}};\n    }\n\n    const codeStyles = {\n        light: {\n            highlight: fixStyle(docco),\n            background: grey[200],\n        },\n        dark: {\n            highlight: fixStyle(dark),\n            background: grey[900],\n        },\n        darcula: {\n            highlight: fixStyle(darcula),\n            background: blueGrey[900],\n        },\n    };\n\n    let codeStyle = codeStyles.light;\n    switch (theme) {\n        case 'dark':\n            codeStyle = codeStyles.dark;\n            break;\n        case 'darcula':\n            codeStyle = codeStyles.darcula;\n            break;\n        default:\n            codeStyle = codeStyles.light;\n    }\n\n//    console.log(SyntaxHighlighter.supportedLanguages.map(item => `\"${item}\"`).join(\" | \"));\n    return (\n        <Paper\n            style={{backgroundColor: codeStyle.background, height, ...style}}\n            className={clsx(commonClasses.pageBlock, classes.root, className)}\n            elevation={0}\n            ref={element => {rootRef.current = element; if (ref) ref.current = element}}\n        >\n            <div className={classes.highlighterContainer} ref={codeRef}>\n                <SyntaxHighlighter language={language} style={codeStyle.highlight}>\n                    {children}\n                </SyntaxHighlighter>\n            </div>\n        </Paper>\n    );\n});\n\nCode.displayName = \"Code\";\n\nCode.defaultProps = {\n    language: \"javascript\",\n    theme: \"light\",\n}\n\nCode.propTypes = {\n    // CodeProps\n    theme: PropTypes.oneOf([\"light\", \"dark\", \"darcula\"]),\n    language: PropTypes.oneOf([\n        \"1c\", \"abnf\", \"accesslog\", \"actionscript\", \"ada\", \"angelscript\", \"apache\", \"applescript\", \"arcade\",\n        \"arduino\", \"armasm\", \"asciidoc\", \"aspectj\", \"autohotkey\", \"autoit\", \"avrasm\", \"awk\", \"axapta\", \"bash\",\n        \"basic\", \"bnf\", \"brainfuck\", \"c-like\", \"c\", \"cal\", \"capnproto\", \"ceylon\", \"clean\", \"clojure-repl\", \"clojure\",\n        \"cmake\", \"coffeescript\", \"coq\", \"cos\", \"cpp\", \"crmsh\", \"crystal\", \"csharp\", \"csp\", \"css\", \"d\", \"dart\",\n        \"delphi\", \"diff\", \"django\", \"dns\", \"dockerfile\", \"dos\", \"dsconfig\", \"dts\", \"dust\", \"ebnf\", \"elixir\",\n        \"elm\", \"erb\", \"erlang-repl\", \"erlang\", \"excel\", \"fix\", \"flix\", \"fortran\", \"fsharp\", \"gams\", \"gauss\",\n        \"gcode\", \"gherkin\", \"glsl\", \"gml\", \"go\", \"golo\", \"gradle\", \"groovy\", \"haml\", \"handlebars\", \"haskell\",\n        \"haxe\", \"hsp\", \"htmlbars\", \"http\", \"hy\", \"inform7\", \"ini\", \"irpf90\", \"isbl\", \"java\", \"javascript\",\n        \"jboss-cli\", \"json\", \"julia-repl\", \"julia\", \"kotlin\", \"lasso\", \"latex\", \"ldif\", \"leaf\", \"less\", \"lisp\",\n        \"livecodeserver\", \"livescript\", \"llvm\", \"lsl\", \"lua\", \"makefile\", \"markdown\", \"mathematica\", \"matlab\",\n        \"maxima\", \"mel\", \"mercury\", \"mipsasm\", \"mizar\", \"mojolicious\", \"monkey\", \"moonscript\", \"n1ql\", \"nginx\",\n        \"nim\", \"nix\", \"nsis\", \"objectivec\", \"ocaml\", \"openscad\", \"oxygene\", \"parser3\", \"perl\", \"pf\", \"pgsql\",\n        \"php-template\", \"php\", \"plaintext\", \"pony\", \"powershell\", \"processing\", \"profile\", \"prolog\", \"properties\",\n        \"protobuf\", \"puppet\", \"purebasic\", \"python-repl\", \"python\", \"q\", \"qml\", \"r\", \"reasonml\", \"rib\", \"roboconf\",\n        \"routeros\", \"rsl\", \"ruby\", \"ruleslanguage\", \"rust\", \"sas\", \"scala\", \"scheme\", \"scilab\", \"scss\", \"shell\",\n        \"smali\", \"smalltalk\", \"sml\", \"sqf\", \"sql\", \"stan\", \"stata\", \"step21\", \"stylus\", \"subunit\", \"swift\",\n        \"taggerscript\", \"tap\", \"tcl\", \"thrift\", \"tp\", \"twig\", \"typescript\", \"vala\", \"vbnet\", \"vbscript-html\",\n        \"vbscript\", \"verilog\", \"vhdl\", \"vim\", \"x86asm\", \"xl\", \"xml\", \"xquery\", \"yaml\", \"zephir\"\n    ]),\n    children: PropTypes.string,\n    // Stylable\n    style: PropTypes.object,\n    className: PropTypes.string,\n    classes: PropTypes.object,\n}\n\nexport default Code;","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {},\n    bold: {\n        fontWeight: \"bold\",\n    },\n}));","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {useStyles} from \"./styles\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\nconst Bold =  React.forwardRef(function Bold({children, className, style, ...props}, ref) {\n    const classes = {...useStyles(), ...props.classes};\n    return (\n        <span className={clsx(classes.root, classes.bold, className)} ref={ref} style={style}>\n            {children}\n        </span>\n    )\n\n});\n\nBold.displayName = \"Bold\";\n\nBold.propTypes = {\n    // Stylable\n    style: PropTypes.object,\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    // Containerable\n    children: PropTypes.node,\n}\n\nexport default Bold;","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {},\n    italic: {\n        fontStyle: \"italic\",\n    },\n}));","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {useStyles} from \"./styles\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\nconst Italic = React.forwardRef(function Italic({children, className, style, ...props}, ref) {\n    const classes = {...useStyles(), ...props.classes};\n    return (\n        <span className={clsx(classes.root, classes.italic, className)} ref={ref} style={style}>\n            {children}\n        </span>\n    )\n});\n\nItalic.displayName = \"Italic\";\n\nItalic.defaultProps = {\n}\n\nItalic.propTypes = {\n    // Stylable\n    style: PropTypes.object,\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    // Containerable\n    children: PropTypes.node,\n}\n\nexport default Italic;","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {grey} from \"@material-ui/core/colors\";\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {},\n    fullWidth: {\n        width: \"100%\",\n        flexGrow: 1,\n    }\n}));","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {LazyLoadImage} from 'react-lazy-load-image-component';\nimport {useStyles} from \"./styles\";\nimport clsx from \"clsx\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport PropTypes from \"prop-types\";\n\nconst Image = React.forwardRef(function Image({src = \"\", alt = \"\", style, className, children, fullWidth = false, ...props}, ref) {\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <div style={style} className={clsx(fullWidth && classes.fullWidth, className)} ref={ref}>\n                <LazyLoadImage\n                    alt={alt}\n                    style={{width: \"100%\"}}\n                    src={src}\n                    placeholder={<CircularProgress/>}\n                />\n            </div>\n            {children && <Typography color={\"textSecondary\"} variant={\"subtitle2\"}>{children}</Typography>}\n        </React.Fragment>\n    );\n});\n\nImage.displayName = \"Image\";\n\nImage.defaultProps = {\n    src: \"\",\n    alt: \"\",\n    fullWidth: false\n}\n\nImage.propTypes = {\n    // ImageProps\n    src: PropTypes.string,\n    alt: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    // Stylable\n    style: PropTypes.object,\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    // Containerable\n    children: PropTypes.node,\n}\n\nexport default Image;","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {grey} from \"@material-ui/core/colors\";\n\n//TODO:  finish tables horizontal scrolling\nexport const useStyles = makeStyles((theme) => ({\n    container: {\n        width: \"100%\",\n        overflowX: \"auto\",\n        position: \"relative\",\n    },\n    table: {\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        top: 0,\n        minWidth: 650,\n    }\n}));","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Table as MUITable} from \"@material-ui/core\";\nimport {useCommonStyles} from \"../../stylesheets/commonStyles\";\nimport clsx from \"clsx\";\nimport {useStyles} from \"./styles\";\nimport PropTypes from \"prop-types\";\n\nconst Table = React.forwardRef(function Table({children, className, style, ...props}, ref) {\n    const commonClasses = useCommonStyles();\n    const classes = {...useStyles(), ...props.classes};\n    const [height, setHeight] = React.useState(0);\n    const containerRef = React.useRef(null);\n    const tableRef = React.useRef(null);\n\n    React.useEffect(() => {\n        onResize();\n        window.addEventListener(\"resize\", onResize);\n        return () => window.removeEventListener(\"resize\", onResize);\n    }, [children, tableRef.current, containerRef.current]);\n\n    function onResize() {\n        const scrollbar = containerRef.current ? containerRef.current.offsetHeight - containerRef.current.clientHeight : 0;\n        if (tableRef.current) {\n            setHeight(tableRef.current.clientHeight + scrollbar);\n        } else {\n            setHeight(0);\n        }\n    }\n\n    return (\n        <div\n            className={clsx(classes.container, commonClasses.pageBlock, className)}\n            style={{height, ...style}}\n            ref={containerRef}\n        >\n            <MUITable\n                {...props}\n                className={classes.table}\n                ref={element => {tableRef.current = element; if (ref) ref.current = element}}\n            >\n                {children}\n            </MUITable>\n        </div>\n    );\n});\n\nTable.displayName = \"Table\";\n\nTable.defaultProps = {\n}\n\nTable.propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    children: PropTypes.node,\n}\n\nexport default Table;\n","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {grey} from \"@material-ui/core/colors\";\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        borderLeft: `5px solid ${grey[400]}`,\n        backgroundColor: grey[200],\n        padding: theme.spacing(1),\n        paddingLeft: theme.spacing(2),\n    },\n    colorLight: {\n        backgroundColor: grey[200],\n    },\n    colorDark: {\n        backgroundColor: grey[400],\n    }\n}));","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {useStyles} from \"./styles\";\nimport clsx from \"clsx\";\nimport {useCommonStyles} from \"../../stylesheets/commonStyles\";\nimport PropTypes from \"prop-types\";\n\nconst Block = React.forwardRef(function Block({className, style, children, color = \"light\", ...props}, ref) {\n    const commonClasses = useCommonStyles();\n    const classes = {...useStyles(), ...props.classes};\n    return (\n        <Paper\n            ref={ref}\n            square\n            className={clsx(\n                classes.root,\n                commonClasses.pageBlock,\n                color === \"light\" && classes.colorLight,\n                color === \"dark\" && classes.colorDark,\n                className\n            )}\n            style={style}\n            elevation={0}\n        >\n            {children}\n        </Paper>\n    );\n});\n\nBlock.displayName = \"Block\";\n\nBlock.defaultProps = {\n    color: \"light\",\n}\n\nBlock.propTypes = {\n    // BlockProps\n    color: PropTypes.string,\n    // Stylable\n    style: PropTypes.object,\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    // Containerable\n    children: PropTypes.node,\n}\n\nexport default Block;","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {grey, yellow} from \"@material-ui/core/colors\";\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(0.4),\n        borderRadius: theme.spacing(0.4),\n    },\n    colorDefault: {\n        backgroundColor: yellow[100],\n    },\n    colorPrimary: {\n        backgroundColor: theme.palette.primary.light,\n    },\n    colorSecondary: {\n        backgroundColor: theme.palette.secondary.light,\n    },\n    colorGrey: {\n        backgroundColor: grey[200],\n    },\n    font: {\n        fontFamily: \"monospace\",\n        fontWeight: 500,\n        fontSize: \"inherit\",\n    },\n    textInherit: {\n        color: \"inherit\",\n    },\n    textWhite: {\n        color: theme.palette.common.white,\n    },\n    textBlack: {\n        color: theme.palette.common.black,\n    },\n}));\n","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport {useStyles} from \"./styles\";\nimport PropTypes from \"prop-types\";\n\nconst CodeSpan = React.forwardRef(function CodeSpan({className, style, children, color = \"default\", text = \"inherit\", ...props}, ref) {\n    const classes = {...useStyles(), ...props.classes};\n    return (\n        <span\n            ref={ref}\n            className={clsx(\n                classes.root,\n                classes.font,\n                color === \"default\" && classes.colorDefault,\n                color === \"primary\" && classes.colorPrimary,\n                color === \"secondary\" && classes.colorSecondary,\n                color === \"grey\" && classes.colorGrey,\n                text === \"inherit\" && classes.textInherit,\n                text === \"black\" && classes.textBlack,\n                text === \"white\" && classes.textWhite,\n                className\n            )}\n            style={style}\n        >\n            {children}\n        </span>\n    );\n});\n\nCodeSpan.displayName = \"CodeSpan\";\n\nCodeSpan.defaultProps = {\n    color: \"default\",\n    text: \"inherit\",\n}\n\nCodeSpan.propTypes = {\n    // CodeSpanProps\n    color: PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"grey\"]),\n    text: PropTypes.oneOf([\"white\", \"black\", \"inherit\"]),\n    // Stylable\n    style: PropTypes.object,\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    // Containerable\n    children: PropTypes.node,\n}\n\nexport default CodeSpan;","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {grey} from \"@material-ui/core/colors\";\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {},\n}));","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport marked from \"marked\";\nimport {useCommonStyles} from \"../../stylesheets/commonStyles\";\nimport generateMaterialDocsFromMarkdown from \"../../utils/generateMaterialDocsFromMarkdown\";\nimport clsx from \"clsx\";\nimport {useStyles} from \"./styles\";\nimport PropTypes from \"prop-types\";\n\nconst Markdown = React.forwardRef(function Markdown({children, className, style, inline = false, ...props}, ref) {\n    const commonClasses = useCommonStyles();\n    const classes = useStyles();\n    const [content, setContent] = React.useState([]);\n\n    React.useEffect(() => {\n        try {\n            const child = React.Children.map(children, String).join(\"\");\n            setContent(generateMaterialDocsFromMarkdown(child));\n        } catch (error) {\n            setContent(null);\n            console.log(error);\n        }\n    }, [children]);\n\n    if (inline) {\n        return (\n            <span ref={ref} className={clsx(commonClasses.pageBlock, classes.root, className)} style={style}>\n                {content}\n            </span>\n        );\n    }\n\n    return (\n        <div ref={ref} className={clsx(commonClasses.pageBlock, classes.root, className)} style={style}>\n            {content}\n        </div>\n    );\n});\n\nMarkdown.displayName = \"Markdown\";\n\nMarkdown.defaultProps = {\n    inline: false,\n}\n\nMarkdown.propTypes = {\n    // MarkdownProps\n    inline: PropTypes.bool,\n    children: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n    // Stylable\n    style: PropTypes.object,\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    // Containerable\n}\n\nexport default Markdown;","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport marked from \"marked\";\nimport React from \"react\";\nimport {Header} from \"../components/Headers\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"../components/List/List\";\nimport ListItem from \"../components/ListItem/ListItem\";\nimport Code from \"../components/Code/Code\";\nimport {Link} from \"@material-ui/core\";\nimport Bold from \"../components/Bold/Bold\";\nimport Italic from \"../components/Italic/Italic\";\nimport Image from \"../components/Image/Image\";\nimport Table from \"../components/Table\";\nimport TableHead from \"../components/TableHead\";\nimport TableBody from \"../components/TableBody\";\nimport TableRow from \"../components/TableRow\";\nimport TableCell from \"../components/TableCell\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Block from \"../components/Block/Block\";\nimport CodeSpan from \"../components/CodeSpan/CodeSpan\";\n\nexport default function generateMaterialDocsFromMarkdown(input) {\n    if (!(typeof input === \"string\" || typeof input === \"object\"))\n        throw new TypeError(`MaterialDocs: incorrect type of input param, expected object | string, got ${typeof input}`);\n    let tokens = input;\n    if (typeof input === \"string\") {\n        tokens = marked.lexer(input);\n    }\n    return (\n        <React.Fragment>\n            {tokens.map(token => {\n                switch (token.type) {\n                    case \"heading\":\n                       return <Header heading={token.depth}>{token.tokens && generateMaterialDocsFromMarkdown(token.tokens)}</Header>\n                    case \"text\":\n                        return token.tokens ? generateMaterialDocsFromMarkdown(token.tokens) : token.text;\n                    case \"paragraph\":\n                        return <Typography>{token.tokens && generateMaterialDocsFromMarkdown(token.tokens)}</Typography>\n                    case \"list\":\n                        return <List>{token.items && generateMaterialDocsFromMarkdown(token.items)}</List>;\n                    case \"list_item\":\n                        return <ListItem>{token.tokens && generateMaterialDocsFromMarkdown(token.tokens)}</ListItem>;\n                    case \"code\":\n                        return <Code language={token.lang}>{token.text}</Code>\n                    case \"codespan\":\n                        return <CodeSpan>{token.text}</CodeSpan>\n                    case \"link\":\n                        return <Link\n                            href={token.href}>{token.tokens && generateMaterialDocsFromMarkdown(token.tokens)}</Link>\n                    case \"br\":\n                        return <br/>\n                    case \"hr\":\n                        return <Divider/>\n                    case \"strong\":\n                        return <Bold>{token.tokens && generateMaterialDocsFromMarkdown(token.tokens)}</Bold>\n                    case \"em\":\n                        return <Italic>{token.tokens && generateMaterialDocsFromMarkdown(token.tokens)}</Italic>\n                    case \"image\":\n                        return <Image src={token.href} alt={token.text}/>\n                    case \"table\":\n                        const header = token.tokens.header;\n                        const cells = token.tokens.cells;\n                        return (\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        {header.map(cell => (\n                                            <TableCell>\n                                                <Bold>\n                                                    {cell && generateMaterialDocsFromMarkdown(cell)}\n                                                </Bold>\n                                            </TableCell>\n                                        ))}\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {cells.map(row => (\n                                        <TableRow>\n                                            {row.map(cell =>\n                                                <TableCell>{cell && generateMaterialDocsFromMarkdown(cell)}</TableCell>)}\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        );\n                    case \"blockquote\":\n                        return <Block>{token.tokens && generateMaterialDocsFromMarkdown(token.tokens)}</Block>\n                    default:\n                        break;\n                }\n\n            })}\n        </React.Fragment>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\n/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {\n    Code,\n    DocsPage,\n    H1,\n    H2,\n    H3,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow\n} from \"@danilandreev/material-docs\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {grey, purple} from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\nimport Markdown from \"../../lib/components/Markdown/Markdown\";\n\n\nconst useStyles = makeStyles(theme => ({\n    datatype: {\n        color: purple[800],\n    },\n    code: {\n        fontFamily: \"monospace\",\n        fontSize: \"14px\",\n    },\n    underlined: {\n        textDecoration: `underline dotted ${grey[500]}`,\n    }\n}));\n\nexport default function ApiPage({lang, localeName, importCode, name, searchTags, children, ...props}) {\n    const classes = useStyles();\n    if (!lang) throw new Error(`Documentation: lang is required prop`);\n    if (!localeName) throw new Error(`Documentation: localeName is required prop`);\n\n    const locale = lang.locale.pages[localeName];\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    const showProps = !!locale.enableProps || !!locale.noPropsText;\n    const showCss = !!locale.enableCss || !!locale.noCssText;\n    return (\n        <DocsPage\n            name={name}\n            searchTags={searchTags || locale.searchTags}\n            searchDescription={locale.pageSearchDescription}\n        >\n            <H1 noDivider>{name}</H1>\n            <H3 noDivider noTag>{locale.pageAbout}</H3>\n            <H2>{localeSpells.Import}</H2>\n            <Code language={\"javascript\"} theme={\"darcula\"}>\n                {importCode}\n            </Code>\n            <Markdown>{componentAPILocale.importDifferenceText}</Markdown>\n            <H2>{componentAPILocale.ComponentNameHeader}</H2>\n            <Markdown>{locale.ComponentNameText}</Markdown>\n            {showProps && <H2>Props</H2>}\n            {locale.enableProps &&\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{componentAPILocale.propName}</TableCell>\n                        <TableCell>{componentAPILocale.propType}</TableCell>\n                        <TableCell>{componentAPILocale.propDefault}</TableCell>\n                        <TableCell>{componentAPILocale.propDescription}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {locale.props.map(prop => (\n                        <TableRow key={prop.name}>\n                            <TableCell className={classes.code}>{prop.name}</TableCell>\n                            <TableCell className={clsx(classes.datatype, classes.code)}>{prop.type}</TableCell>\n                            <TableCell className={clsx(classes.code, classes.underlined)}>{prop.default}</TableCell>\n                            <TableCell>{prop.description}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            }\n            {!locale.enableProps && <Markdown>{locale.noPropsText}</Markdown>}\n            {locale.forwardRef && <Markdown>{componentAPILocale.ref}</Markdown>}\n            {showCss && <H2>CSS</H2>}\n            {locale.enableCss &&\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{componentAPILocale.ruleName}</TableCell>\n                        <TableCell>{componentAPILocale.ruleDescription}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {Object.keys(locale.css).map(key => (\n                        <TableRow key={key}>\n                            <TableCell className={classes.code}>{key}</TableCell>\n                            <TableCell>{locale.css[key]}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            }\n            {!locale.enableCss && <Markdown>{locale.noCssText}</Markdown>}\n            {locale.enableCss &&\n            <Markdown>{componentAPILocale.customization}</Markdown>\n            }\n            {children}\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {DocsPage} from \"@danilandreev/material-docs\";\n// or\nimport DocsPage from \"@danilandreev/material-docs/components/DocsPage\";\n`.trim();\n\nexport default function DocsPageAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.DocsPageAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"DocsPageAPI\"}\n            searchTags={[\"docs\", \"page\", \"api\"]}\n            name={\"DocsPageAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Pages</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {DemoWithCode} from \"@danilandreev/material-docs\";\n// or\nimport DemoWithCode from \"@danilandreev/material-docs/components/DemoWithCode\";\n`.trim();\n\nexport default function DemoWithCodeAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.DemoWithCodeAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"DemoWithCodeAPI\"}\n            searchTags={[\"demo\", \"with\", \"code\", \"api\", \"showing\", \"code\"]}\n            name={\"DemoWithCodeAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Code showing</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {Code} from \"@danilandreev/material-docs\";\n// or\nimport Code from \"@danilandreev/material-docs/components/Code\";\n`.trim();\n\nexport default function CodeAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.CodeAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"CodeAPI\"}\n            searchTags={[\"code\", \"highlight\", \"language\", \"api\"]}\n            name={\"CodeAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Code showing</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {PagesGroup} from \"@danilandreev/material-docs\";\n// or\nimport PagesGroup from \"@danilandreev/material-docs/components/PagesGroup\";\n`.trim();\n\nexport default function PagesGroupAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.PagesGroupAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"PagesGroupAPI\"}\n            searchTags={[\"page\", \"group\", \"gather\", \"container\"]}\n            name={\"PagesGroupAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Lists</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {Image} from \"@danilandreev/material-docs\";\n// or\nimport Image from \"@danilandreev/material-docs/components/Image\";\n`.trim();\n\nexport default function ImageAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.ImageAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"ImageAPI\"}\n            searchTags={[\"image\", \"lazy\", \"load\", \"picture\", \"card\", \"banner\", \"logo\"]}\n            name={\"ImageAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Images</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {ListItemAPI} from \"@danilandreev/material-docs\";\n// or\nimport ListItemAPI from \"@danilandreev/material-docs/components/ListItemAPI\";\n`.trim();\n\nexport default function ListItemAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.ListItemAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"ListItemAPI\"}\n            searchTags={[\"list\", \"item\", \"api\"]}\n            name={\"ListItemAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Lists</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {ExpansionCode} from \"@danilandreev/material-docs\";\n// or\nimport ExpansionCode from \"@danilandreev/material-docs/components/ExpansionCode\";\n`.trim();\n\nexport default function ExpansionCodeAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.ExpansionCodeAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"ExpansionCodeAPI\"}\n            searchTags={[\"demo\", \"with\", \"code\", \"api\"]}\n            name={\"ExpansionCodeAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Code showing</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {Block} from \"@danilandreev/material-docs\";\n// or\nimport Block from \"@danilandreev/material-docs/components/Block\";\n`.trim();\n\nexport default function BlockAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.BlockAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"BlockAPI\"}\n            searchTags={[\"block\", \"tip\", \"slided\", \"separated\", \"blockquote\", \"quote\"]}\n            name={\"BlockAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Pages</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {CodeSpan} from \"@danilandreev/material-docs\";\n// or\nimport CodeSpan from \"@danilandreev/material-docs/components/CodeSpan\";\n`.trim();\n\nexport default function CodeSpanAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.CodeSpanAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"CodeSpanAPI\"}\n            searchTags={[\"code\", \"span\", \"inline\", \"component\", \"block\"]}\n            name={\"CodeSpanAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Code showing</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {Italic} from \"@danilandreev/material-docs\";\n// or\nimport Italic from \"@danilandreev/material-docs/components/Italic\";\n`.trim();\n\nexport default function ItalicAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.ItalicAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"ItalicAPI\"}\n            searchTags={[\"italic\", \"font\", \"text\", \"styling\", \"api\"]}\n            name={\"ItalicAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Text styling</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {List} from \"@danilandreev/material-docs\";\n// or\nimport List from \"@danilandreev/material-docs/components/List\";\n`.trim();\n\nexport default function ListAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.ListAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"ListAPI\"}\n            searchTags={[\"list\", \"image\", \"styling\", \"api\"]}\n            name={\"ListAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Lists</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {DocsMenuItem} from \"@danilandreev/material-docs\";\n// or\nimport DocsMenuItem from \"@danilandreev/material-docs/components/DocsMenuItem\";\n`.trim();\n\nexport default function DocsMenuItemAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.DocsMenuItemAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"DocsMenuItemAPI\"}\n            searchTags={[\"docs\", \"menu\", \"item\", \"api\", \"layout\"]}\n            name={\"DocsMenuItemAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Layout</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {Markdown} from \"@danilandreev/material-docs\";\n// or\nimport Markdown from \"@danilandreev/material-docs/components/Markdown\";\n`.trim();\n\nexport default function MarkdownAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.MarkdownAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"MarkdownAPI\"}\n            searchTags={[\"mark\", \"down\", \"parser\", \"interpret\", \"layout\", \"api\"]}\n            name={\"MarkdownAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Markdown</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {Table} from \"@danilandreev/material-docs\";\n// or\nimport Table from \"@danilandreev/material-docs/components/Table\";\n`.trim();\n\nexport default function TableAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.TableAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"TableAPI\"}\n            searchTags={[\"table\", \"cell\", \"row\", \"header\", \"api\"]}\n            name={\"TableAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Tables</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {TableRow} from \"@danilandreev/material-docs\";\n// or\nimport TableRow from \"@danilandreev/material-docs/components/TableRow\";\n`.trim();\n\nexport default function TableRowAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.TableRowAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"TableRowAPI\"}\n            searchTags={[\"table\", \"cell\", \"row\", \"header\", \"api\"]}\n            name={\"TableRowAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Tables</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {TableCell} from \"@danilandreev/material-docs\";\n// or\nimport TableCell from \"@danilandreev/material-docs/components/TableCell\";\n`.trim();\n\nexport default function TableCellAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.TableCellAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"TableCellAPI\"}\n            searchTags={[\"table\", \"cell\", \"row\", \"header\", \"api\"]}\n            name={\"TableCellAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Tables</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {TableBody} from \"@danilandreev/material-docs\";\n// or\nimport TableBody from \"@danilandreev/material-docs/components/TableBody\";\n`.trim();\n\nexport default function TableBodyAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.TableBodyAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"TableBodyAPI\"}\n            searchTags={[\"table\", \"cell\", \"row\", \"header\", \"api\", \"body\"]}\n            name={\"TableBodyAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Tables</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {TableHead} from \"@danilandreev/material-docs\";\n// or\nimport TableHead from \"@danilandreev/material-docs/components/TableHead\";\n`.trim();\n\nexport default function TableHeadAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.TableHeadAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"TableHeadAPI\"}\n            searchTags={[\"table\", \"cell\", \"row\", \"header\", \"api\", \"head\"]}\n            name={\"TableHeadAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Tables</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {Bold} from \"@danilandreev/material-docs\";\n// or\nimport Bold from \"@danilandreev/material-docs/components/Bold\";\n`.trim();\n\nexport default function BoldAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.BoldAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"BoldAPI\"}\n            searchTags={[\"bold\", \"font\", \"text\", \"styling\", \"api\"]}\n            name={\"BoldAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Text styling</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {ListItemContained} from \"@danilandreev/material-docs\";\n// or\nimport ListItemContained from \"@danilandreev/material-docs/components/ListItemContained\";\n`.trim();\n\nexport default function ListItemContainedAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.ListItemContainedAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"ListItemContainedAPI\"}\n            searchTags={[\"list\", \"item\", \"contain\", \"api\"]}\n            name={\"ListItemContainedAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Lists</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {DocsPages} from \"@danilandreev/material-docs\";\n// or\nimport DocsPages from \"@danilandreev/material-docs/components/DocsPages\";\n`.trim();\n\nexport default function DocsPagesAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.DocsPagesAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"DocsPagesAPI\"}\n            searchTags={[\"docs\", \"pages\", \"container\", \"api\"]}\n            name={\"DocsPagesAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Layout</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {DocsMenu} from \"@danilandreev/material-docs\";\n// or\nimport DocsMenu from \"@danilandreev/material-docs/components/DocsMenu\";\n`.trim();\n\nexport default function DocsMenuAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.DocsMenuAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"DocsMenuAPI\"}\n            searchTags={[\"docs\", \"menu\", \"container\", \"api\"]}\n            name={\"DocsMenuAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Layout</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {DocsLayout} from \"@danilandreev/material-docs\";\n// or\nimport DocsLayout from \"@danilandreev/material-docs/components/DocsLayout\";\n`.trim();\n\nexport default function DocsLayoutAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.DocsLayoutAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"DocsLayoutAPI\"}\n            searchTags={[\"docs\", \"layout\", \"main\", \"component\", \"api\"]}\n            name={\"DocsLayoutAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Layout</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {AutoDocsMenu} from \"@danilandreev/material-docs\";\n// or\nimport AutoDocsMenu from \"@danilandreev/material-docs/components/AutoDocsMenu\";\n`.trim();\n\nexport default function AutoDocsMenuAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.AutoDocsMenuAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"AutoDocsMenuAPI\"}\n            searchTags={[\"auto\", \"menu\", \"docs\", \"system\", \"api\"]}\n            name={\"AutoDocsMenuAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Auto menu</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {LanguageSelector} from \"@danilandreev/material-docs\";\n// or\nimport LanguageSelector from \"@danilandreev/material-docs/components/LanguageSelector\";\n`.trim();\n\nexport default function LanguageSelectorAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.LanguageSelectorAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"LanguageSelectorAPI\"}\n            searchTags={[\"language\", \"locale\", \"select\", \"api\"]}\n            name={\"LanguageSelectorAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Locales</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {SearchField} from \"@danilandreev/material-docs\";\n// or\nimport SearchField from \"@danilandreev/material-docs/components/SearchField\";\n`.trim();\n\nexport default function SearchFieldAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.SearchFieldAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"SearchFieldAPI\"}\n            searchTags={[\"search\", \"engine\", \"selector\", \"results\", \"api\"]}\n            name={\"SearchFieldAPI\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Search</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport List from \"@danilandreev/material-docs/components/List\";\nimport ListItem from \"@danilandreev/material-docs/components/ListItem\";\nimport {H4} from \"@danilandreev/material-docs/components/Headers\";\n\nexport default function SimpleList() {\n    return (\n        <React.Fragment>\n            <H4 noTag>Buy</H4>\n            <List>\n                <ListItem>Carrot x3</ListItem>\n                <ListItem>Potato 3kg</ListItem>\n                <ListItem>Apples 1kg</ListItem>\n                <ListItem>Strawberry 1kg</ListItem>\n            </List>\n        </React.Fragment>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport List from \"@danilandreev/material-docs/components/List\";\nimport ListItem from \"@danilandreev/material-docs/components/ListItem\";\nimport ListItemContained from \"@danilandreev/material-docs/components/ListItemContained/ListItemContained\";\n\nexport default function ListWithNestedItems() {\n    return (\n        <React.Fragment>\n            <List>\n                <ListItem>\n                    Web\n                    <ListItemContained>\n                        <ListItem>Front-end</ListItem>\n                        <ListItem>Back-end</ListItem>\n                    </ListItemContained>\n                </ListItem>\n                <ListItem>\n                    <ListItemContained>\n                        <ListItem>Engine programmer</ListItem>\n                        <ListItem>Level designer</ListItem>\n                        <ListItem>Character artist</ListItem>\n                    </ListItemContained>\n                    Gamedev\n                </ListItem>\n                <ListItem>Data science</ListItem>\n            </List>\n        </React.Fragment>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport List from \"@danilandreev/material-docs/components/List\";\nimport ListItem from \"@danilandreev/material-docs/components/ListItem\";\n\nexport default function DecoratedList() {\n    return (\n        <React.Fragment>\n            <List>\n                <ListItem type={\"circle\"}>I am list item with circle styling</ListItem>\n                <ListItem type={\"square\"}>I am list item with square styling</ListItem>\n                <ListItem type={\"upper-roman\"}>I am list item with upper-roman styling</ListItem>\n                <ListItem type={\"lower-alpha\"}>I am list item with lower-alpha styling</ListItem>\n                <ListItem type={\"none\"}>I am list item without styling</ListItem>\n            </List>\n        </React.Fragment>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport DocsPage from \"@danilandreev/material-docs/components/DocsPage/DocsPage\";\nimport {H1, H2, H3, H4, H5, H6} from \"@danilandreev/material-docs/components/Headers\";\nimport DemoWithCode from \"@danilandreev/material-docs/components/DemoWithCode/DemoWithCode\";\nimport SimpleList from \"../../../examples/Lists/SimpleList\";\nimport Box from \"@material-ui/core/Box\";\nimport ListWithNestedItems from \"../../../examples/Lists/ListWithNestedItems\";\nimport DecoratedList from \"../../../examples/Lists/DecoratedList\";\nimport List from \"@danilandreev/material-docs/components/List/List\";\nimport ListItem from \"@danilandreev/material-docs/components/ListItem/ListItem\";\nimport Link from \"@material-ui/core/Link\";\nimport Markdown from \"@danilandreev/material-docs/components/Markdown/Markdown\";\n\nconst SimpleListCode = `\nimport React from \"react\";\nimport List from \"@danilandreev/material-docs/components/List\";\nimport ListItem from \"@danilandreev/material-docs/components/ListItem\";\nimport {H4} from \"@danilandreev/material-docs/components/Headers\";\n\nexport default function SimpleList() {\n    return (\n        <React.Fragment>\n            <H4 noTag>Buy</H4>\n            <List>\n                <ListItem>Carrot x3</ListItem>\n                <ListItem>Potato 3kg</ListItem>\n                <ListItem>Apples 1kg</ListItem>\n                <ListItem>Strawberry 1kg</ListItem>\n            </List>\n        </React.Fragment>\n    );\n}\n`.trim();\n\nconst ListWithNestedItemsCode = `\nimport React from \"react\";\nimport List from \"@danilandreev/material-docs/components/List\";\nimport ListItem from \"@danilandreev/material-docs/components/ListItem\";\nimport ListItemContained from \"@danilandreev/material-docs/components/ListItemContained/ListItemContained\";\n\nexport default function ListWithNestedItems() {\n    return (\n        <React.Fragment>\n            <List>\n                <ListItem>\n                    Web\n                    <ListItemContained>\n                        <ListItem>Front-end</ListItem>\n                        <ListItem>Back-end</ListItem>\n                    </ListItemContained>\n                </ListItem>\n                <ListItem>\n                    <ListItemContained>\n                        <ListItem>Engine programmer</ListItem>\n                        <ListItem>Level designer</ListItem>\n                        <ListItem>Character artist</ListItem>\n                    </ListItemContained>\n                    Gamedev\n                </ListItem>\n                <ListItem>Data science</ListItem>\n            </List>\n        </React.Fragment>\n    );\n}\n`.trim();\n\nconst DecoratedListCode = `\nimport React from \"react\";\nimport List from \"@danilandreev/material-docs/components/List\";\nimport ListItem from \"@danilandreev/material-docs/components/ListItem\";\n\nexport default function DecoratedList() {\n    return (\n        <React.Fragment>\n            <List>\n                <ListItem type={\"circle\"}>I am list item with circle styling</ListItem>\n                <ListItem type={\"square\"}>I am list item with square styling</ListItem>\n                <ListItem type={\"upper-roman\"}>I am list item with upper-roman styling</ListItem>\n                <ListItem type={\"lower-alpha\"}>I am list item with lower-alpha styling</ListItem>\n                <ListItem type={\"none\"}>I am list item without styling</ListItem>\n            </List>\n        </React.Fragment>\n    );\n}\n`.trim();\n\nexport default function ListsDemo() {\n    return (\n        <DocsPage\n            name={\"Lists\"}\n            searchDescription={\"Demonstration page of lists functional.\"}\n            searchLabel={\"Lists\"}\n            searchTags={[\"lists\", \"demo\", \"tutorial\"]}\n        >\n            <H1>Lists</H1>\n            <H3 noTag noDivider>Lists can be used to show structured information with list items.</H3>\n            <Markdown>\n                For example, you want to show people your TO DO list or list of programs you use. Each ```ListItem``` can contain\n                its content and nested list items inside ```ListItemContained``` component.\n            </Markdown>\n            <DemoWithCode code={SimpleListCode} paperContainer theme={\"darcula\"} name={\"Simple list\"} defaultExpanded>\n                <Box p={2}>\n                    <SimpleList/>\n                </Box>\n            </DemoWithCode>\n\n            <Markdown>\n                You can create __nested lists__ inside ```ListItem``` component. Just place __nested items__ inside ```ListItemContained``` component in ```ListItem```.\n            </Markdown>\n            <DemoWithCode code={ListWithNestedItemsCode} paperContainer theme={\"darcula\"} name={\"List with nested items\"}>\n                <Box p={2}>\n                    <ListWithNestedItems/>\n                </Box>\n            </DemoWithCode>\n\n            <Markdown>Lists can be __decorated__ with several points type.</Markdown>\n            <DemoWithCode code={DecoratedListCode} paperContainer theme={\"darcula\"} name={\"List with items decoration\"}>\n                <Box p={2}>\n                    <DecoratedList/>\n                </Box>\n            </DemoWithCode>\n\n            <H2>API</H2>\n            <List>\n                <ListItem><Link>ListItem</Link></ListItem>\n                <ListItem><Link>List</Link></ListItem>\n                <ListItem><Link>ListItemContained</Link></ListItem>\n            </List>\n\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport DocsPage from \"@danilandreev/material-docs/components/DocsPage/DocsPage\";\nimport {H1, H2, H3, H4, H5, H6} from \"@danilandreev/material-docs/components/Headers\";\nimport DemoWithCode from \"@danilandreev/material-docs/components/DemoWithCode/DemoWithCode\";\nimport SimpleList from \"../../../examples/Lists/SimpleList\";\nimport Box from \"@material-ui/core/Box\";\nimport ListWithNestedItems from \"../../../examples/Lists/ListWithNestedItems\";\nimport DecoratedList from \"../../../examples/Lists/DecoratedList\";\nimport List from \"@danilandreev/material-docs/components/List/List\";\nimport ListItem from \"@danilandreev/material-docs/components/ListItem/ListItem\";\nimport Link from \"@material-ui/core/Link\";\nimport Markdown from \"@danilandreev/material-docs/components/Markdown/Markdown\";\nimport Code from \"@danilandreev/material-docs/components/Code/Code\";\nimport Bold from \"@danilandreev/material-docs/components/Bold/Bold\";\n\nconst installCode = `\n// with npm\nnpm install @danilandreev/material-docs\n\n// with yarn\nyarn add @danilandreev/material-docs\n`.trim();\n\nconst MUIInstallationCode = `\n// with npm\nnpm install @material-ui/core\n\n// with yarn\nyarn add @material-ui/core\n`.trim();\n\nconst MUIIconsInstallationCode = `\n// with npm\nnpm install @material-ui/icons\n\n// with yarn\nyarn add @material-ui/icons\n`.trim();\n\nexport default function Installation() {\n    return (\n        <DocsPage\n            name={\"Installation\"}\n            searchDescription={\"Installation page for MaterialDocs.\"}\n            searchLabel={\"Installation\"}\n            searchTags={[\"installation\", \"getting\", \"started\"]}\n        >\n            <H1>Installation</H1>\n            <H3 noTag noDivider>Install MaterialDocs - framework for creating documentation.</H3>\n            <Markdown>MaterialDocs is available as an [nmp package]()</Markdown>\n            <H2>npm</H2>\n            <Markdown>To install and save in your ```package.json``` dependencies, run:</Markdown>\n            <Code theme={\"darcula\"}>{installCode}</Code>\n            <H2>Material-UI</H2>\n            <Markdown>Note, that __MaterialDocs__ based on [__Material-UI__]() framework. If you want to deeply customize UI, install:</Markdown>\n            <Code theme={\"darcula\"}>{MUIInstallationCode}</Code>\n            <H3>Material-UI Icons</H3>\n            <Markdown>You can access [__Material-UI__]() svg icons by adding to your ```package.json``` next ___package___:</Markdown>\n            <Code theme={\"darcula\"}>{MUIIconsInstallationCode}</Code>\n            <H2>Info</H2>\n            <Markdown>You can start using MaterialDocs with minimal front-end infrastructure. Package providing a lot of components to create great documentation site.</Markdown>\n            <H4>Some steps tu get started</H4>\n            <List>\n                <ListItem>Read <Bold>Components</Bold> tab and get access to demonstration source code.</ListItem>\n                <ListItem>Read <Bold>Component APIs</Bold> tab and get to know how to manipulate with components.</ListItem>\n                <ListItem>Read <Bold>Tutorials</Bold> tab to get instructions on different topics.</ListItem>\n                <ListItem>Check <Link><Bold>source code on GitHub</Bold></Link> for best code understanding.</ListItem>\n            </List>\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport DocsPage from \"@danilandreev/material-docs/components/DocsPage/DocsPage\";\nimport {H1, H2, H3, H4, H5, H6} from \"@danilandreev/material-docs/components/Headers\";\nimport DemoWithCode from \"@danilandreev/material-docs/components/DemoWithCode/DemoWithCode\";\nimport SimpleList from \"../../../examples/Lists/SimpleList\";\nimport Box from \"@material-ui/core/Box\";\nimport ListWithNestedItems from \"../../../examples/Lists/ListWithNestedItems\";\nimport DecoratedList from \"../../../examples/Lists/DecoratedList\";\nimport List from \"@danilandreev/material-docs/components/List/List\";\nimport ListItem from \"@danilandreev/material-docs/components/ListItem/ListItem\";\nimport Link from \"@material-ui/core/Link\";\nimport Markdown from \"@danilandreev/material-docs/components/Markdown/Markdown\";\nimport Code from \"@danilandreev/material-docs/components/Code/Code\";\n\nconst SimpleLayout = `\nimport React from \"react\";\nimport {DocsLayout, DocsPages, DocsPage, DocsMenu, DocsMenuItem} from \"@danilandreev/material-docs\";\n\nexport default function Documentation() {\n    return (\n        <DocsLayout>\n            <DocsMenu>\n                <DocsMenuItem textPrimary=\"First Page\" name=\"My first page\"/>\n                <DocsMenuItem textPrimary=\"Second Page\" name=\"This page is cooler than first.\"/>\n            </DocsMenu>\n            <DocsPages>\n                <DocsPage name=\"My first page\">Page content...</DocsPage>\n                <DocsPage name=\"This page is cooler than first.\">Page content...</DocsPage>\n            </DocsPages>\n        </DocsLayout>\n    );\n}\n`.trim();\n\nconst LayoutWithAutoMenu = `\nimport React from \"react\";\nimport {DocsLayout, DocsPages, DocsPage, DocsMenu, DocsMenuItem, PagesGroup} from \"@danilandreev/material-docs\";\n\nexport default function Documentation() {\n    return (\n        <DocsLayout autoMenu>\n            <DocsPages>\n                <PagesGroup name=\"My page group\">\n                    <DocsPage name=\"My first page\">Page content...</DocsPage>\n                    <DocsPage name=\"This page is cooler than first.\">Page content...</DocsPage>                \n                </PagesGroup>\n                <PagesGroup name=\"Another page group\">\n                    <DocsPage name=\"Here we are\">Page content...</DocsPage>\n                    <DocsPage name=\"Riding the sky\">Page content...</DocsPage>                \n                </PagesGroup>\n                <DocsPage name=\"I am in the root group\">Page content...</DocsPage>                \n            </DocsPages>\n        </DocsLayout>\n    );\n}\n`.trim();\n\nexport default function LayoutDemo() {\n    return (\n        <DocsPage\n            name={\"Layout\"}\n            searchDescription={\"Demonstration page of layout functional.\"}\n            searchLabel={\"Layout\"}\n            searchTags={[\"docs\", \"layout\", \"tutorial\", \"page\", \"menu\", \"search\", \"locale\", \"lang\"]}\n        >\n            <H1>Layout</H1>\n            <H3 noTag noDivider>Layout - is a core of MaterialDocs.</H3>\n            <Markdown>\n                ```DocsLayout``` component contains _locale_ information, _search_ context and lot of technical data. __Material Docs__ starts here.\n            </Markdown>\n            <H3 noDivider>Simple layout</H3>\n            <Code theme={\"darcula\"}>{SimpleLayout}</Code>\n            <Markdown>\n                This code shows how to create simple layout. __Page names__ will be automatically converted to __routes__, so give normal name for pages.\n                ```DocsMenuItem``` prop ___name___ is a page identifier.\n            </Markdown>\n            <H3 noDivider>Layout with auto menu</H3>\n            <Code theme={\"darcula\"}>{LayoutWithAutoMenu}</Code>\n            <Markdown>\n                Here is ```DocsLayout``` with automated menu. You can add __pages__ and __groups__ in other __groups__ to create\n                hierarchical menu structure.\n            </Markdown>\n\n\n\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport DocsPageDemo from \"./pages/Components/DocsPageDemo\";\n\n// API pages\nimport DocsPageAPI from \"./pages/APIs/DocsPageAPI\";\nimport DemoWithCodeAPI from \"./pages/APIs/DemoWithCodeAPI\";\nimport CodeAPI from \"./pages/APIs/CodeAPI\";\nimport PagesGroupAPI from \"./pages/APIs/PagesGroupAPI\";\nimport ImageAPI from \"./pages/APIs/ImageAPI\";\nimport ListItemAPI from \"./pages/APIs/ListItemAPI\";\nimport ExpansionCodeAPI from \"./pages/APIs/ExpansionCodeAPI\";\nimport BlockAPI from \"./pages/APIs/BlockAPI\";\nimport CodeSpanAPI from \"./pages/APIs/CodeSpanAPI\";\nimport ItalicAPI from \"./pages/APIs/ItalicAPI\";\nimport ListAPI from \"./pages/APIs/ListAPI\";\nimport DocsMenuItemAPI from \"./pages/APIs/DocsMenuItemAPI\";\nimport MarkdownAPI from \"./pages/APIs/MarkdownAPI\";\nimport TableAPI from \"./pages/APIs/TableAPI\";\nimport TableRowAPI from \"./pages/APIs/TableRowAPI\";\nimport TableCellAPI from \"./pages/APIs/TableCellAPI\";\nimport TableBodyAPI from \"./pages/APIs/TableBodyAPI\";\nimport TableHeadAPI from \"./pages/APIs/TableHeadAPI\";\nimport BoldAPI from \"./pages/APIs/BoldAPI\";\nimport ListItemContainedAPI from \"./pages/APIs/ListItemContainedAPI\";\nimport DocsPagesAPI from \"./pages/APIs/DocsPagesAPI\";\nimport DocsMenuAPI from \"./pages/APIs/DocsMenuAPI\";\nimport DocsLayoutAPI from \"./pages/APIs/DocsLayoutAPI\";\n\nimport AutoDocsMenuAPI from \"./pages/APIs/AutoDocsMenuAPI\";\nimport LanguageSelectorAPI from \"./pages/APIs/LanguageSelectorAPI\";\nimport SearchFieldAPI from \"./pages/APIs/SearchFieldAPI\";\n\n\nimport {DocsLayout, DocsPages, PagesGroup} from \"@danilandreev/material-docs\";\n\nimport RU from \"./locale/RU.json\";\nimport EN from \"./locale/EN.json\";\nimport ListsDemo from \"./pages/Components/ListsDemo\";\nimport Installation from \"./pages/GettingStarted/Installation\";\nimport LayoutDemo from \"./pages/Components/LayoutDemo\";\nimport DocsMenu from \"@danilandreev/material-docs/components/DocsMenu/DocsMenu\";\nimport AutoDocsMenu from \"@danilandreev/material-docs/components/AutoDocsMenu/AutoDocsMenu\";\n\n\nexport default function Documentation() {\n    return (\n        <DocsLayout defaultLang={EN} langs={[EN, RU]} basename={process.env.PUBLIC_URL}>\n            <DocsMenu dense>\n                <AutoDocsMenu/>\n            </DocsMenu>\n            <DocsPages>\n                <PagesGroup name={\"Getting started\"}>\n                    <Installation/>\n                </PagesGroup>\n                <PagesGroup name={\"Components\"}>\n                    <DocsPageDemo/>\n                    <ListsDemo/>\n                    <LayoutDemo/>\n                </PagesGroup>\n                <PagesGroup name={\"Component APIs\"}>\n                    <DocsLayoutAPI/>\n                    <DocsPageAPI/>\n                    <DemoWithCodeAPI/>\n                    <CodeAPI />\n                    <PagesGroupAPI/>\n                    <ImageAPI/>\n                    <ListItemAPI/>\n                    <ExpansionCodeAPI/>\n                    <BlockAPI/>\n                    <CodeSpanAPI/>\n                    <ItalicAPI/>\n                    <BoldAPI/>\n                    <ListAPI/>\n                    <DocsMenuItemAPI/>\n                    <MarkdownAPI/>\n                    <TableAPI/>\n                    <TableRowAPI/>\n                    <TableCellAPI/>\n                    <TableBodyAPI/>\n                    <TableHeadAPI/>\n                    <ListItemContainedAPI/>\n                    <DocsPagesAPI/>\n                    <DocsMenuAPI/>\n                    <PagesGroup name={\"System components\"}>\n                        <AutoDocsMenuAPI/>\n                        <LanguageSelectorAPI/>\n                        <SearchFieldAPI/>\n                    </PagesGroup>\n                </PagesGroup>\n                <PagesGroup name={\"Tutorials\"}>\n\n                </PagesGroup>\n            </DocsPages>\n        </DocsLayout>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Documentation from \"./docs-app/Documentation\";\n// import ExampleDocumentation from \"./example/ExampleDocumentation\";\n\nReactDOM.render(\n  <React.StrictMode>\n      {/*<ExampleDocumentation/>*/}\n      <Documentation/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}