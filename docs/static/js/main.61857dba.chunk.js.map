{"version":3,"sources":["serviceWorker.js","docs-app/pages/Components/DocsPageDemo/index.js","lib/stylesheets/commonStyles.js","lib/components/Headers/styles.js","lib/hooks/useTags/useTags.js","lib/components/Headers/Headers.js","lib/utils/createRouteFromName.js","lib/utils/getTextFromChildren.js","lib/utils/getElementOffsetSum.js","lib/components/List/styles.js","lib/components/List/List.js","lib/components/ListItemContained/ListItemContained.js","lib/components/ListItem/styles.js","lib/components/ListItem/ListItem.js","lib/components/Code/styles.js","lib/components/Code/Code.js","lib/components/Bold/styles.js","lib/components/Bold/Bold.js","lib/components/Italic/styles.js","lib/components/Italic/Italic.js","lib/components/Image/styles.js","lib/components/Image/Image.js","lib/components/Table/styles.js","lib/components/Table/Table.js","lib/components/Block/styles.js","lib/components/Block/Block.js","lib/components/CodeSpan/styles.js","lib/components/CodeSpan/CodeSpan.js","lib/components/Markdown/styles.js","lib/components/Markdown/Markdown.js","lib/utils/generateMaterialDocsFromMarkdown.js","docs-app/components/ApiPage.js","docs-app/pages/APIs/DocsPageAPI/index.js","docs-app/pages/APIs/DemoWithCodeAPI/index.js","docs-app/pages/APIs/CodeAPI/index.js","docs-app/pages/APIs/PagesGroupAPI/index.js","docs-app/pages/APIs/ImageAPI/index.js","docs-app/pages/APIs/ListItemAPI/index.js","docs-app/pages/APIs/ExpansionCodeAPI/index.js","docs-app/pages/APIs/BlockAPI/index.js","docs-app/pages/APIs/CodeSpanAPI/index.js","docs-app/pages/APIs/ItalicAPI/index.js","docs-app/pages/APIs/ListAPI/index.js","docs-app/pages/APIs/DocsMenuItemAPI/index.js","docs-app/pages/APIs/MarkdownAPI/index.js","docs-app/pages/APIs/TableAPI/index.js","docs-app/pages/APIs/TableRowAPI/index.js","docs-app/pages/APIs/TableCellAPI/index.js","docs-app/pages/APIs/TableBodyAPI/index.js","docs-app/pages/APIs/TableHeadAPI/index.js","docs-app/pages/APIs/BoldAPI/index.js","docs-app/pages/APIs/ListItemContainedAPI/index.js","docs-app/pages/APIs/DocsPagesAPI/index.js","docs-app/pages/APIs/DocsMenuAPI/index.js","docs-app/pages/APIs/DocsLayoutAPI/index.js","docs-app/pages/APIs/AutoDocsMenuAPI/index.js","docs-app/pages/APIs/LanguageSelectorAPI/index.js","docs-app/pages/APIs/SearchFieldAPI/index.js","docs-app/examples/Lists/SimpleList.js","docs-app/examples/Lists/ListWithNestedItems.js","docs-app/examples/Lists/DecoratedList.js","docs-app/pages/Components/ListsDemo/index.js","docs-app/pages/GettingStarted/Installation/index.js","docs-app/pages/Components/LayoutDemo/index.js","docs-app/Documentation.js","index.js"],"names":["Boolean","window","location","hostname","match","DocsPageDemo","name","searchDescription","noDivider","useCommonStyles","makeStyles","theme","pageBlock","marginBottom","spacing","paddingTop","useStyles","root","container","position","tagHook","left","top","color","grey","display","padding","paddingLeft","anchor","marginTop","divider","h1","fontSize","h2","h3","h4","h5","h6","anchorIcon","transform","TaggingContext","React","createContext","setTag","key","value","ReferenceError","removeTag","tags","useTags","useContext","Tagable","forwardRef","ref","children","noTag","variant","style","className","props","classes","commonClasses","useState","topOffset","setTopOffset","id","useRef","TypeError","replace","toLowerCase","createRouteFromName","getTextFromChildren","depth","text","Children","map","child","isValidElement","join","trim","aref","typographyClasses","useEffect","current","label","elem","parseFloat","offsetTop","offsetLeft","offsetParent","parentElement","Math","round","getElementOffsetSum","clsx","undefined","Typography","Divider","href","H1","H2","H3","H4","H5","H6","Header","heading","stylePositionInside","listStylePosition","stylePositionOutside","stylePositionInherit","stylePositionRevert","stylePositionUnset","List","image","ListItemContained","this","Component","paddingBottom","fontWeight","letterSpacing","typeCircle","listStyleType","typeSquare","typeRoman","typeAlpha","typeNone","listStyle","list","dense","ListItem","type","containers","length","console","error","containedItems","content","listTypeClass","overflowX","highlighterContainer","Code","language","height","setHeight","codeRef","fixStyle","hljs","background","clientHeight","codeStyles","light","highlight","docco","dark","darcula","blueGrey","codeStyle","Paper","backgroundColor","elevation","bold","Bold","italic","fontStyle","Italic","fullWidth","width","flexGrow","Image","src","alt","Fragment","placeholder","CircularProgress","Table","borderLeft","colorLight","colorDark","Block","square","borderRadius","colorDefault","yellow","colorPrimary","palette","primary","colorSecondary","secondary","colorGrey","font","fontFamily","textInherit","textWhite","common","white","textBlack","black","CodeSpan","Markdown","inline","setContent","String","generateMaterialDocsFromMarkdown","input","tokens","marked","lexer","token","items","lang","Link","header","cells","TableHead","TableRow","cell","TableCell","TableBody","row","log","datatype","purple","code","underlined","textDecoration","ApiPage","localeName","importCode","searchTags","Error","locale","pages","localeSpells","spells","componentAPILocale","ComponentAPI","showProps","enableProps","noPropsText","showCss","enableCss","noCssText","pageSearchDescription","pageAbout","Import","importDifferenceText","ComponentNameHeader","ComponentNameText","propName","propType","propDefault","propDescription","prop","default","description","ruleName","ruleDescription","Object","keys","css","customization","DocsPageAPI","useLang","DemoWithCodeAPI","CodeAPI","PagesGroupAPI","ImageAPI","ListItemAPI","ExpansionCodeAPI","BlockAPI","CodeSpanAPI","ItalicAPI","ListAPI","DocsMenuItemAPI","MarkdownAPI","TableAPI","TableRowAPI","TableCellAPI","TableBodyAPI","TableHeadAPI","BoldAPI","ListItemContainedAPI","DocsPagesAPI","DocsMenuAPI","DocsLayoutAPI","AutoDocsMenuAPI","LanguageSelectorAPI","SearchFieldAPI","SimpleList","ListWithNestedItems","DecoratedList","SimpleListCode","ListWithNestedItemsCode","DecoratedListCode","ListsDemo","searchLabel","paperContainer","defaultExpanded","Box","p","installCode","MUIInstallationCode","MUIIconsInstallationCode","Installation","SimpleLayout","LayoutWithAutoMenu","LayoutDemo","Documentation","autoMenu","defaultLang","EN","langs","RU","basename","process","autoMenuDense","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"26nCAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,WC6ES,SAASC,IACpB,OACI,kBAAC,WAAD,CAAUC,KAAM,YAAaC,kBAAmB,qBAC5C,kBAAC,KAAD,CAAIC,WAAS,GAAb,aACA,kBAAC,KAAD,8BACA,kBAAC,WAAD,KA9CO,inE,iFC/CNC,EAAkBC,aAAW,SAAAC,GAAK,MAAK,CAChDC,UAAW,CACPC,aAAcF,EAAMG,QAAQ,GAC5BC,WAAYJ,EAAMG,QAAQ,Q,yBCF3B,IAAME,EAAYN,aAAW,SAACC,GAAD,MAAY,CAC5CM,KAAM,GACNC,UAAW,CACPC,SAAU,YAEdC,QAAS,CACLD,SAAU,WACVE,MAAO,GACPC,IAAK,MACLC,MAAOC,IAAK,KACZC,QAAS,OACTC,QAAS,GACTX,WAAY,EACZY,YAAa,EACb,UAAW,CACPJ,MAAOC,IAAK,KACZC,QAAS,UAGjBG,OAAQ,CACJ,WAAY,CACRb,WAAY,GACZc,WAAY,IAEhB,mBAAoB,CAChBJ,QAAS,UAGjBK,QAAS,CACLjB,aAAcF,EAAMG,QAAQ,IAEhCiB,GAAI,CACAC,SAAU,UAEdC,GAAI,CACAD,SAAU,QAEdE,GAAI,CACAF,SAAU,UAEdG,GAAI,CACAH,SAAU,UAEdI,GAAI,CACAJ,SAAU,UAEdK,GAAI,CACAL,SAAU,UAEdM,WAAY,CACRC,UAAW,qB,kBCnDNC,EAAiBC,IAAMC,cAAc,CAC9CC,OAAQ,SAACC,EAAKC,GACV,MAAM,IAAIC,eAAe,8IAE7BC,UAAW,SAACH,GACR,MAAM,IAAIE,eAAe,iJAE7BE,KAAM,KAIKC,EADC,kBAAMR,IAAMS,WAAWV,ICEvC,IA2DaW,EA3DIV,IAAMW,YAAW,WAAqGC,GAAM,IAAxFC,EAAuF,EAAvFA,SAAuF,IAA7EC,aAA6E,SAA9DC,EAA8D,EAA9DA,QAASC,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,UAA8C,IAAnClD,iBAAmC,SAAbmD,EAAa,8EAClIC,EAAO,eAAO5C,IAAP,GAAuB2C,EAAMC,SACpCC,EAAgBpD,IAFkH,EAG5GwC,IAArBN,EAHiI,EAGjIA,OAAQI,EAHyH,EAGzHA,UAHyH,EAItGN,IAAMqB,SAAS,GAJuF,mBAIjIC,EAJiI,KAItHC,EAJsH,KAKlIC,EAAKxB,IAAMyB,OAAOP,EAAMM,ICdnB,SAA6B3D,GACxC,GAAoB,kBAATA,EAAmB,MAAM,IAAI6D,UAAU,0CAKlD,OAJc7D,EAAK8D,QAAQ,OAAQ,KAC9BA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,IACfA,QAAQ,OAAQ,IAAIC,cDSWC,CEXzB,SAASC,EAAoBjB,GAAsB,IAAZkB,EAAW,uDAAH,EAC1D,GAAIA,EAAQ,EAAG,MAAO,GACtB,IAAMC,EAAOhC,IAAMiC,SAASC,IAAIrB,GAAU,SAAAsB,GACtC,OAAInC,IAAMoC,eAAeD,GAAeL,EAAoBK,EAAMjB,MAAML,SAAUkB,EAAQ,GACrE,kBAAVI,EAA2BA,EAC/B,MACRE,KAAK,KAAKC,OACb,OAAON,GAAQ,GFIyCF,CAAoBjB,EAAU,KAChF0B,EAAOvC,IAAMyB,OAAO,MACpBe,EAAoB,CAAClD,GAAI6B,EAAQ7B,GAAIE,GAAI2B,EAAQ3B,GAAIC,GAAI0B,EAAQ1B,GAAIC,GAAIyB,EAAQzB,GAAIC,GAAIwB,EAAQxB,IAgBvG,OAdAK,IAAMyC,WAAU,WAEZ,OADC3B,GAASZ,EAAOsB,EAAGkB,QAAS,CAACC,MAAO9B,EAAUD,IAAK2B,EAAMjB,cACnD,WACER,GACDR,EAAUkB,EAAGkB,YAGtB,CAAC7B,EAAU0B,EAAMjB,IAEpBtB,IAAMyC,WAAU,WAAO,IACZ5D,EGjCA,SAA6B+D,GAGxC,IAFA,IAAI/D,EAAM,EACND,EAAO,EACJgE,GACH/D,GAAYgE,WAAWD,EAAKE,WAC5BlE,GAAciE,WAAWD,EAAKG,YAC9BH,EAAOA,EAAKI,cAAgBJ,EAAKK,cAGrC,MAAO,CAACpE,IAAKqE,KAAKC,MAAMtE,GAAMD,KAAMsE,KAAKC,MAAMvE,IHwB7BwE,CAAoBb,EAAKG,SAAhC7D,IACP0C,EAAa1C,KACd,CAAC0D,IAGA,yBACItB,UAAWoC,kBAAKjC,EAAcjD,UAAWgD,EAAQ3C,KAAMyC,GAEvDD,MAAOA,EACPJ,IAAKA,GAEL,yBACIK,UAAWE,EAAQhC,OACnBqC,GAAIV,OAAQwC,EAAY9B,EAAGkB,SAE3B,yBAAKzB,UAAWE,EAAQ1C,WACpB,kBAAC8E,EAAA,EAAD,CAAYxC,QAASA,EAASI,QAASqB,GAClC3B,GACC9C,GAAa,kBAACyF,EAAA,EAAD,CAASvC,UAAWE,EAAQ9B,YAE7CyB,GACF,uBAAG2C,KAAI,WAAMjC,EAAGkB,SAAWzB,UAAWE,EAAQxC,QAASiC,IAAK2B,GACxD,kBAAC,IAAD,CAAUtB,UAAWE,EAAQtB,oBAyB9C,IAAM6D,EAAK1D,IAAMW,YAJxB,WAAmCC,GAAM,IAA3BC,EAA0B,EAA1BA,SAAaK,EAAa,4BACpC,OAAO,kBAACR,EAAD,eAASK,QAAS,MAAUG,EAA5B,CAAmCN,IAAKA,IAAMC,MAUlD,IAAM8C,EAAK3D,IAAMW,YAJxB,WAAmCC,GAAM,IAA3BC,EAA0B,EAA1BA,SAAaK,EAAa,4BACpC,OAAO,kBAACR,EAAD,eAASK,QAAS,MAAUG,EAA5B,CAAmCN,IAAKA,IAAMC,MAUlD,IAAM+C,EAAK5D,IAAMW,YAJxB,WAAmCC,GAAM,IAA3BC,EAA0B,EAA1BA,SAAaK,EAAa,4BACpC,OAAO,kBAACR,EAAD,eAASK,QAAS,MAAUG,EAA5B,CAAmCN,IAAKA,IAAMC,MAUlD,IAAMgD,EAAK7D,IAAMW,YAJxB,WAAmEC,GAAM,IAA3DC,EAA0D,EAA1DA,SAA0D,IAAhD9C,iBAAgD,aAA9B+C,aAA8B,SAAbI,EAAa,gDACpE,OAAO,kBAACR,EAAD,eAASK,QAAS,MAAUG,EAA5B,CAAmCJ,MAAOA,EAAO/C,UAAWA,EAAW6C,IAAKA,IAAMC,MAUtF,IAAMiD,EAAK9D,IAAMW,YAJxB,WAAmEC,GAAM,IAA3DC,EAA0D,EAA1DA,SAA0D,IAAhD9C,iBAAgD,aAA9B+C,aAA8B,SAAbI,EAAa,gDACpE,OAAO,kBAACR,EAAD,eAASK,QAAS,MAAUG,EAA5B,CAAmCJ,MAAOA,EAAO/C,UAAWA,EAAW6C,IAAKA,IAAMC,MAUtF,IAAMkD,EAAK/D,IAAMW,YAJxB,WAAmEC,GAAM,IAA3DC,EAA0D,EAA1DA,SAA0D,IAAhD9C,iBAAgD,aAA9B+C,aAA8B,SAAbI,EAAa,gDACpE,OAAO,kBAACR,EAAD,eAASK,QAAS,MAAUG,EAA5B,CAAmCJ,MAAOA,EAAO/C,UAAWA,EAAW6C,IAAKA,IAAMC,MA2BhFmD,EArBGhE,IAAMW,YAAW,WAAoDC,GAAM,IAAxCC,EAAuC,EAAvCA,SAAuC,IAA7BoD,eAA6B,MAAnB,EAAmB,EAAb/C,EAAa,sCACtF,OAAQ+C,GACJ,KAAK,EACD,OAAO,kBAACP,EAAD,iBAAQxC,EAAR,CAAeN,IAAKA,IAAMC,GACrC,KAAK,EACD,OAAO,kBAAC8C,EAAD,iBAAQzC,EAAR,CAAeN,IAAKA,IAAMC,GACrC,KAAK,EACD,OAAO,kBAAC+C,EAAD,iBAAQ1C,EAAR,CAAeN,IAAKA,IAAMC,GACrC,KAAK,EACD,OAAO,kBAACgD,EAAD,iBAAQ3C,EAAR,CAAeN,IAAKA,IAAMC,GACrC,KAAK,EACD,OAAO,kBAACiD,EAAD,iBAAQ5C,EAAR,CAAeN,IAAKA,IAAMC,GACrC,QACI,OAAO,kBAACkD,EAAD,iBAAQ7C,EAAR,CAAeN,IAAKA,IAAMC,OIjIhCtC,EAAYN,aAAW,SAACC,GAAD,MAAY,CAC5CM,KAAM,GAEN0F,oBAAqB,CACjBC,kBAAmB,UAEvBC,qBAAsB,CAClBD,kBAAmB,WAEvBE,qBAAsB,CAClBF,kBAAmB,WAEvBG,oBAAqB,CACjBH,kBAAmB,UAEvBI,mBAAoB,CAChBJ,kBAAmB,aCWZK,EAvBFxE,IAAMW,YAAW,WAA6DC,GAAM,IAApDC,EAAmD,EAAnDA,SAAUI,EAAyC,EAAzCA,UAAWD,EAA8B,EAA9BA,MAAiBE,GAAa,EAAvBuD,MAAuB,yDACtFtD,EAAO,eAAO5C,IAAP,GAAuB2C,EAAMC,SACpCC,EAAgBpD,IAEtB,OACI,wCAAQkD,EAAR,CAAeN,IAAKA,EAAKK,UAAWoC,kBAAKjC,EAAcjD,UAAWgD,EAAQ3C,KAAMyC,GAAYD,MAAOA,IAC9FH,M,oCCEE6D,E,uKATP,OAAOC,KAAKzD,MAAML,a,GAFMb,IAAM4E,WCAzBrG,EAAYN,aAAW,SAACC,GAAD,MAAY,CAC5CM,KAAM,CACFS,QAASf,EAAMG,QAAQ,IACvBwG,cAAe,EACfvG,WAAYJ,EAAMG,QAAQ,GAC1BkB,SAAU,OACVuF,WAAY,IACZC,cAAe,aAEnBC,WAAY,CACRC,cAAe,UAEnBC,WAAY,CACRD,cAAe,UAEnBE,UAAW,CACPF,cAAe,eAEnBG,UAAW,CACPH,cAAe,eAEnBI,SAAU,CACNC,UAAW,QAEfC,KAAM,CACFrG,YAAahB,EAAMG,QAAQ,IAE/BmH,MAAO,CACHvG,QAASf,EAAMG,QAAQ,IACvBa,YAAahB,EAAMG,QAAQ,IAC3BC,WAAYJ,EAAMG,QAAQ,SC8BnBoH,EAzDEzF,IAAMW,YAAW,WAA0FC,GAAM,IAA7EC,EAA4E,EAA5EA,SAA4E,IAAlE6E,YAAkE,MAA3D,SAA2D,MAAjDF,aAAiD,SAAlCxE,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UAAcC,EAAa,+DACvHC,EAAO,eAAO5C,IAAP,GAAuB2C,EAAMC,SACpCwE,EAAa3F,IAAMiC,SAASC,IAAIrB,GAAU,SAAAsB,GAAK,OAAIA,EAAMuD,OAAShB,EAAoBvC,EAAQ,QAChGwD,EAAWC,OAAS,GAAGC,QAAQC,MAAM,0EAEzC,IAAMC,EAAiBJ,EAAW,IAAMA,EAAW,GAAGzE,OAASyE,EAAW,GAAGzE,MAAML,SAC7EmF,EAAUhG,IAAMiC,SAASC,IAAIrB,GAAU,SAAAsB,GAAK,OAAIA,EAAMuD,OAAShB,EAAoB,KAAOvC,KAE5F8D,EAAgB9E,EAAQ6D,WAC5B,OAAQU,GACJ,IAAK,SACDO,EAAgB9E,EAAQ+D,WACxB,MACJ,IAAK,cACDe,EAAgB9E,EAAQgE,UACxB,MACJ,IAAK,cACDc,EAAgB9E,EAAQiE,UACxB,MACJ,IAAK,OACDa,EAAgB9E,EAAQkE,SAIhC,OACI,sCACIpE,UAAWoC,kBAAKlC,EAAQ3C,KAAMgH,GAASrE,EAAQqE,MAAOS,EAAehF,IACjEC,EAFR,CAGIN,IAAKA,EACLI,MAAOA,IAEP,6BACI,6BACKgF,GAEJD,GACD,wBAAI9E,UAAWE,EAAQoE,MAClBQ,Q,oCCzCRxH,EAAYN,aAAW,SAAAC,GAAK,MAAK,CAC1CM,KAAM,CACF0H,UAAW,OACXxH,SAAU,YAEdyH,qBAAsB,CAClBzH,SAAU,WACVE,KAAM,EACNC,IAAK,OC6FEuH,EA5FFpG,IAAMW,YAAW,WAAsFC,GAAM,IAA7EC,EAA4E,EAA5EA,SAA4E,IAAlEwF,gBAAkE,MAAvD,aAAuD,MAAzCnI,aAAyC,MAAjC,QAAiC,EAAxB8C,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,UAC9FE,EAAU5C,IACV6C,EAAgBpD,IAF+F,EAGzFgC,IAAMqB,SAAS,GAH0E,mBAG9GiF,EAH8G,KAGtGC,EAHsG,KAI/GC,EAAUxG,IAAMyB,OAAO,MAU7B,SAASgF,EAASzF,GACd,OAAO,eAAIA,EAAX,CAAkB0F,KAAK,eAAK1F,EAAM0F,KAAZ,CAAkBC,WAAY,WATxD3G,IAAMyC,WAAU,WACR+D,EAAQ9D,QACR6D,EAAUC,EAAQ9D,QAAQkE,cAE1BL,EAAU,KAEf,CAACC,EAAQ9D,QAAS7B,IAMrB,IAAMgG,EAAa,CACfC,MAAO,CACHC,UAAWN,EAASO,SACpBL,WAAY5H,IAAK,MAErBkI,KAAM,CACFF,UAAWN,EAASQ,QACpBN,WAAY5H,IAAK,MAErBmI,QAAS,CACLH,UAAWN,EAASS,WACpBP,WAAYQ,IAAS,OAIzBC,EAAYP,EAAWC,MAC3B,OAAQ5I,GACJ,IAAK,OACDkJ,EAAYP,EAAWI,KACvB,MACJ,IAAK,UACDG,EAAYP,EAAWK,QACvB,MACJ,QACIE,EAAYP,EAAWC,MAI/B,OACI,kBAACO,EAAA,EAAD,CACIrG,MAAK,aAAGsG,gBAAiBF,EAAUT,WAAYL,UAAWtF,GAC1DC,UAAWoC,kBAAKjC,EAAcjD,UAAWgD,EAAQ3C,KAAMyC,GACvDsG,UAAW,EACX3G,IAAKA,GAEL,yBAAKK,UAAWE,EAAQgF,qBAAsBvF,IAAK4F,GAC/C,kBAAC,IAAD,CAAmBH,SAAUA,EAAUrF,MAAOoG,EAAUL,WACnDlG,QChERtC,EAAYN,aAAW,SAACC,GAAD,MAAY,CAC5CM,KAAM,GACNgJ,KAAM,CACF1C,WAAY,YCmBL2C,EAnBDzH,IAAMW,YAAW,WAAsDC,GAAM,IAA7CC,EAA4C,EAA5CA,SAAUI,EAAkC,EAAlCA,UAAWD,EAAuB,EAAvBA,MAAUE,EAAa,gDAChFC,EAAO,eAAO5C,IAAP,GAAuB2C,EAAMC,SAC1C,OACI,0BAAMF,UAAWoC,kBAAKlC,EAAQ3C,KAAM2C,EAAQqG,KAAMvG,GAAYL,IAAKA,EAAKI,MAAOA,GAC1EH,MCPAtC,EAAYN,aAAW,SAACC,GAAD,MAAY,CAC5CM,KAAM,GACNkJ,OAAQ,CACJC,UAAW,cCkBJC,EAlBA5H,IAAMW,YAAW,WAAwDC,GAAM,IAA7CC,EAA4C,EAA5CA,SAAUI,EAAkC,EAAlCA,UAAWD,EAAuB,EAAvBA,MAAUE,EAAa,gDACnFC,EAAO,eAAO5C,IAAP,GAAuB2C,EAAMC,SAC1C,OACI,0BAAMF,UAAWoC,kBAAKlC,EAAQ3C,KAAM2C,EAAQuG,OAAQzG,GAAYL,IAAKA,EAAKI,MAAOA,GAC5EH,M,UCNAtC,GAAYN,aAAW,SAACC,GAAD,MAAY,CAC5CM,KAAM,GACNqJ,UAAW,CACPC,MAAO,OACPC,SAAU,O,UC+BHC,GA9BDhI,IAAMW,YAAW,WAA8FC,GAAM,IAAD,IAAnFqH,WAAmF,MAA7E,GAA6E,MAAzEC,WAAyE,MAAnE,GAAmE,EAA/DlH,EAA+D,EAA/DA,MAAOC,EAAwD,EAAxDA,UAAWJ,EAA6C,EAA7CA,SAA6C,IAAnCgH,iBAAmC,SACxH1G,GADwH,wEAC9G5C,MAChB,OACI,kBAAC,IAAM4J,SAAP,KACI,yBAAKnH,MAAOA,EAAOC,UAAWoC,kBAAKwE,GAAa1G,EAAQ0G,UAAW5G,GAAYL,IAAKA,GAChF,kBAAC,iBAAD,CACIsH,IAAKA,EACLlH,MAAO,CAAC8G,MAAO,QACfG,IAAKA,EACLG,YAAa,kBAACC,GAAA,EAAD,SAGpBxH,GAAY,kBAAC0C,EAAA,EAAD,CAAYzE,MAAO,gBAAiBiC,QAAS,aAAcF,O,WChBvEtC,GAAYN,aAAW,SAACC,GAAD,MAAY,CAC5CO,UAAW,CACPqJ,MAAO,OACP5B,UAAW,YCmBJoC,GAnBDtI,IAAMW,YAAW,WAAuDC,GAAM,IAA7CC,EAA4C,EAA5CA,SAAUI,EAAkC,EAAlCA,UAAWD,EAAuB,EAAvBA,MAAUE,EAAa,gDACjFE,EAAgBpD,IAChBmD,EAAO,eAAO5C,KAAP,GAAuB2C,EAAMC,SAC1C,OACI,yBAAKF,UAAWoC,kBAAKlC,EAAQ1C,UAAWwC,GAAYD,MAAOA,GACvD,kBAAC,KAAD,iBAAcE,EAAd,CAAqBD,UAAWG,EAAcjD,UAAWyC,IAAKA,IACzDC,O,4CCVJtC,GAAYN,aAAW,SAACC,GAAD,MAAY,CAC5CM,KAAM,CACF+J,WAAW,aAAD,OAAexJ,IAAK,MAC9BuI,gBAAiBvI,IAAK,KACtBE,QAASf,EAAMG,QAAQ,GACvBa,YAAahB,EAAMG,QAAQ,IAE/BmK,WAAY,CACRlB,gBAAiBvI,IAAK,MAE1B0J,UAAW,CACPnB,gBAAiBvI,IAAK,UC0Bf2J,GAjCD1I,IAAMW,YAAW,WAAwEC,GAAM,IAA9DK,EAA6D,EAA7DA,UAAWD,EAAkD,EAAlDA,MAAOH,EAA2C,EAA3CA,SAA2C,IAAjC/B,aAAiC,MAAzB,QAAyB,EAAboC,EAAa,wDAClGE,EAAgBpD,IAChBmD,EAAO,eAAO5C,KAAP,GAAuB2C,EAAMC,SAC1C,OACI,kBAACkG,EAAA,EAAD,CACIzG,IAAKA,EACL+H,QAAM,EACN1H,UAAWoC,kBACPlC,EAAQ3C,KACR4C,EAAcjD,UACJ,UAAVW,GAAqBqC,EAAQqH,WACnB,SAAV1J,GAAoBqC,EAAQsH,UAC5BxH,GAEJD,MAAOA,EACPuG,UAAW,GAEV1G,M,UCrBAtC,GAAYN,aAAW,SAAAC,GAAK,MAAK,CAC1CM,KAAM,CACFS,QAASf,EAAMG,QAAQ,IACvBuK,aAAc1K,EAAMG,QAAQ,KAEhCwK,aAAc,CACVvB,gBAAiBwB,KAAO,MAE5BC,aAAc,CACVzB,gBAAiBpJ,EAAM8K,QAAQC,QAAQnC,OAE3CoC,eAAgB,CACZ5B,gBAAiBpJ,EAAM8K,QAAQG,UAAUrC,OAE7CsC,UAAW,CACP9B,gBAAiBvI,IAAK,MAE1BsK,KAAM,CACFC,WAAY,YACZxE,WAAY,IACZvF,SAAU,WAEdgK,YAAa,CACTzK,MAAO,WAEX0K,UAAW,CACP1K,MAAOZ,EAAM8K,QAAQS,OAAOC,OAEhCC,UAAW,CACP7K,MAAOZ,EAAM8K,QAAQS,OAAOG,WCSrBC,GApCE7J,IAAMW,YAAW,WAA+FC,GAAM,IAAlFK,EAAiF,EAAjFA,UAAWD,EAAsE,EAAtEA,MAAOH,EAA+D,EAA/DA,SAA+D,IAArD/B,aAAqD,MAA7C,UAA6C,MAAlCkD,YAAkC,MAA3B,UAA2B,EAAbd,EAAa,+DAC5HC,EAAO,eAAO5C,KAAP,GAAuB2C,EAAMC,SAC1C,OACI,0BACIP,IAAKA,EACLK,UAAWoC,kBACPlC,EAAQ3C,KACR2C,EAAQkI,KACE,YAAVvK,GAAuBqC,EAAQ0H,aACrB,YAAV/J,GAAuBqC,EAAQ4H,aACrB,cAAVjK,GAAyBqC,EAAQ+H,eACvB,SAAVpK,GAAoBqC,EAAQiI,UACnB,YAATpH,GAAsBb,EAAQoI,YACrB,UAATvH,GAAoBb,EAAQwI,UACnB,UAAT3H,GAAoBb,EAAQqI,UAC5BvI,GAEJD,MAAOA,GAENH,MCrBN,IAAMtC,GAAYN,aAAW,SAACC,GAAD,MAAY,CAC5CM,KAAM,OC6CKsL,GAzCE9J,IAAMW,YAAW,WAA0EC,GAAM,IAA7DC,EAA4D,EAA5DA,SAAUI,EAAkD,EAAlDA,UAAWD,EAAuC,EAAvCA,MAAuC,IAAhC+I,cAAgC,SACvG3I,GADuG,yDACvFpD,KAChBmD,EAAU5C,KAF6F,EAG/EyB,IAAMqB,SAAS,IAHgE,mBAGtG2E,EAHsG,KAG7FgE,EAH6F,KAe7G,OAVAhK,IAAMyC,WAAU,WACZ,IACI,IAAMN,EAAQnC,IAAMiC,SAASC,IAAIrB,EAAUoJ,QAAQ5H,KAAK,IACxD2H,ECIG,SAASE,EAAiCC,GACrD,GAAuB,kBAAVA,GAAuC,kBAAVA,EACtC,MAAM,IAAIzI,UAAJ,4FAAmGyI,IAC7G,IAAIC,EAASD,EAIb,MAHqB,kBAAVA,IACPC,EAASC,IAAOC,MAAMH,IAGtB,kBAAC,IAAMhC,SAAP,KACKiC,EAAOlI,KAAI,SAAAqI,GACR,OAAQA,EAAM7E,MACV,IAAK,UACF,OAAO,kBAAC1B,EAAD,CAAQC,QAASsG,EAAMxI,OAAQwI,EAAMH,QAAUF,EAAiCK,EAAMH,SAChG,IAAK,OACD,OAAOG,EAAMH,OAASF,EAAiCK,EAAMH,QAAUG,EAAMvI,KACjF,IAAK,YACD,OAAO,kBAACuB,EAAA,EAAD,KAAagH,EAAMH,QAAUF,EAAiCK,EAAMH,SAC/E,IAAK,OACD,OAAO,kBAAC,EAAD,KAAOG,EAAMC,OAASN,EAAiCK,EAAMC,QACxE,IAAK,YACD,OAAO,kBAAC,EAAD,KAAWD,EAAMH,QAAUF,EAAiCK,EAAMH,SAC7E,IAAK,OACD,OAAO,kBAAC,EAAD,CAAM/D,SAAUkE,EAAME,MAAOF,EAAMvI,MAC9C,IAAK,WACD,OAAO,kBAAC,GAAD,KAAWuI,EAAMvI,MAC5B,IAAK,OACD,OAAO,kBAAC0I,EAAA,EAAD,CACHjH,KAAM8G,EAAM9G,MAAO8G,EAAMH,QAAUF,EAAiCK,EAAMH,SAClF,IAAK,KACD,OAAO,6BACX,IAAK,KACD,OAAO,kBAAC5G,EAAA,EAAD,MACX,IAAK,SACD,OAAO,kBAAC,EAAD,KAAO+G,EAAMH,QAAUF,EAAiCK,EAAMH,SACzE,IAAK,KACD,OAAO,kBAAC,EAAD,KAASG,EAAMH,QAAUF,EAAiCK,EAAMH,SAC3E,IAAK,QACD,OAAO,kBAAC,GAAD,CAAOnC,IAAKsC,EAAM9G,KAAMyE,IAAKqC,EAAMvI,OAC9C,IAAK,QACD,IAAM2I,EAASJ,EAAMH,OAAOO,OACtBC,EAAQL,EAAMH,OAAOQ,MAC3B,OACI,kBAAC,GAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACKH,EAAOzI,KAAI,SAAA6I,GAAI,OACZ,kBAACC,GAAA,EAAD,KACI,kBAAC,EAAD,KACKD,GAAQb,EAAiCa,UAM9D,kBAACE,GAAA,EAAD,KACKL,EAAM1I,KAAI,SAAAgJ,GAAG,OACV,kBAACJ,GAAA,EAAD,KACKI,EAAIhJ,KAAI,SAAA6I,GAAI,OACT,kBAACC,GAAA,EAAD,KAAYD,GAAQb,EAAiCa,aAMjF,IAAK,aACD,OAAO,kBAAC,GAAD,KAAQR,EAAMH,QAAUF,EAAiCK,EAAMH,cDrEvEF,CAAiC/H,IAC9C,MAAO2D,GACLkE,EAAW,MACXnE,QAAQsF,IAAIrF,MAEjB,CAACjF,IAEAkJ,EAEI,0BAAMnJ,IAAKA,EAAKK,UAAWoC,kBAAKjC,EAAcjD,UAAWgD,EAAQ3C,KAAMyC,GAAYD,MAAOA,GACrFgF,GAMT,yBAAKpF,IAAKA,EAAKK,UAAWoC,kBAAKjC,EAAcjD,UAAWgD,EAAQ3C,KAAMyC,GAAYD,MAAOA,GACpFgF,METPzH,GAAYN,aAAW,SAAAC,GAAK,MAAK,CACnCkN,SAAU,CACNtM,MAAOuM,IAAO,MAElBC,KAAM,CACFhC,WAAY,YACZ/J,SAAU,QAEdgM,WAAY,CACRC,eAAe,oBAAD,OAAsBzM,IAAK,WAIlC,SAAS0M,GAAT,GAAwF,IAAtEhB,EAAqE,EAArEA,KAAMiB,EAA+D,EAA/DA,WAAYC,EAAmD,EAAnDA,WAAY9N,EAAuC,EAAvCA,KAAM+N,EAAiC,EAAjCA,WAAY/K,EAAqB,EAArBA,SACvEM,GAD4F,iFAClF5C,MAChB,IAAKkM,EAAM,MAAM,IAAIoB,MAAJ,wCACjB,IAAKH,EAAY,MAAM,IAAIG,MAAJ,8CAEvB,IAAMC,EAASrB,EAAKqB,OAAOC,MAAML,GAC3BM,EAAevB,EAAKqB,OAAOrC,OAAOwC,OAClCC,EAAqBzB,EAAKqB,OAAOrC,OAAO0C,aAExCC,IAAcN,EAAOO,eAAiBP,EAAOQ,YAC7CC,IAAYT,EAAOU,aAAeV,EAAOW,UAC/C,OACI,kBAAC,WAAD,CACI5O,KAAMA,EACN+N,WAAYA,GAAcE,EAAOF,WACjC9N,kBAAmBgO,EAAOY,uBAE1B,kBAAC,KAAD,CAAI3O,WAAS,GAAEF,GACf,kBAAC,KAAD,CAAIE,WAAS,EAAC+C,OAAK,GAAEgL,EAAOa,WAC5B,kBAAC,KAAD,KAAKX,EAAaY,QAClB,kBAAC,OAAD,CAAMvG,SAAU,aAAcnI,MAAO,WAChCyN,GAEL,kBAAC,GAAD,KAAWO,EAAmBW,sBAC9B,kBAAC,KAAD,KAAKX,EAAmBY,qBACxB,kBAAC,GAAD,KAAWhB,EAAOiB,mBACjBX,GAAa,kBAAC,KAAD,cACbN,EAAOO,aACR,kBAAC,QAAD,KACI,kBAAC,YAAD,KACI,kBAAC,WAAD,KACI,kBAAC,YAAD,KAAYH,EAAmBc,UAC/B,kBAAC,YAAD,KAAYd,EAAmBe,UAC/B,kBAAC,YAAD,KAAYf,EAAmBgB,aAC/B,kBAAC,YAAD,KAAYhB,EAAmBiB,mBAGvC,kBAAC,YAAD,KACKrB,EAAO5K,MAAMgB,KAAI,SAAAkL,GAAI,OAClB,kBAAC,WAAD,CAAUjN,IAAKiN,EAAKvP,MAChB,kBAAC,YAAD,CAAWoD,UAAWE,EAAQmK,MAAO8B,EAAKvP,MAC1C,kBAAC,YAAD,CAAWoD,UAAWoC,kBAAKlC,EAAQiK,SAAUjK,EAAQmK,OAAQ8B,EAAK1H,MAClE,kBAAC,YAAD,CAAWzE,UAAWoC,kBAAKlC,EAAQmK,KAAMnK,EAAQoK,aAAc6B,EAAKC,SACpE,kBAAC,YAAD,KAAYD,EAAKE,oBAM/BxB,EAAOO,aAAe,kBAAC,GAAD,KAAWP,EAAOQ,aACzCR,EAAOnL,YAAc,kBAAC,GAAD,KAAWuL,EAAmBtL,KACnD2L,GAAW,kBAAC,KAAD,YACXT,EAAOU,WACR,kBAAC,QAAD,KACI,kBAAC,YAAD,KACI,kBAAC,WAAD,KACI,kBAAC,YAAD,KAAYN,EAAmBqB,UAC/B,kBAAC,YAAD,KAAYrB,EAAmBsB,mBAGvC,kBAAC,YAAD,KACKC,OAAOC,KAAK5B,EAAO6B,KAAKzL,KAAI,SAAA/B,GAAG,OAC5B,kBAAC,WAAD,CAAUA,IAAKA,GACX,kBAAC,YAAD,CAAWc,UAAWE,EAAQmK,MAAOnL,GACrC,kBAAC,YAAD,KAAY2L,EAAO6B,IAAIxN,WAMrC2L,EAAOU,WAAa,kBAAC,GAAD,KAAWV,EAAOW,WACvCX,EAAOU,WACR,kBAAC,GAAD,KAAWN,EAAmB0B,eAE7B/M,GCzGb,IAAM8K,GAAa,4IAIjBrJ,OAEa,SAASuL,KAAe,IAC5BpD,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAM8B,YACZpD,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,cACZE,WAAY,CAAC,OAAQ,OAAQ,OAC7B/N,KAAM,cACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,iBCtB1B,IAAMiB,GAAa,wJAIjBrJ,OAEa,SAASyL,KAAmB,IAChCtD,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMgC,gBACZtD,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,kBACZE,WAAY,CAAC,OAAQ,OAAQ,OAAQ,MAAO,UAAW,QACvD/N,KAAM,kBACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,wBCtB1B,IAAMiB,GAAa,gIAIjBrJ,OAEa,SAAS0L,KAAW,IACxBvD,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMiC,QACZvD,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,UACZE,WAAY,CAAC,OAAQ,YAAa,WAAY,OAC9C/N,KAAM,UACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,wBCtB1B,IAAMiB,GAAa,kJAIjBrJ,OAEa,SAAS2L,KAAiB,IAC9BxD,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMkC,cACZxD,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,gBACZE,WAAY,CAAC,OAAQ,QAAS,SAAU,aACxC/N,KAAM,gBACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,iBCP1B,IAAMiB,GAAa,mIAIjBrJ,OAEa,SAAS4L,KAAY,IACzBzD,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMmC,SACZzD,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,WACZE,WAAY,CAAC,QAAS,OAAQ,OAAQ,UAAW,OAAQ,SAAU,QACnE/N,KAAM,WACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,kBCrC1B,IAAMiB,GAAa,qJAIjBrJ,OAEa,SAAS6L,KAAe,IAC5B1D,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMoC,YACZ1D,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,cACZE,WAAY,CAAC,OAAQ,OAAQ,OAC7B/N,KAAM,cACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,iBCtB1B,IAAMiB,GAAa,2JAIjBrJ,OAEa,SAAS8L,KAAoB,IACjC3D,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMqC,iBACZ3D,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,mBACZE,WAAY,CAAC,OAAQ,OAAQ,OAAQ,OACrC/N,KAAM,mBACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,wBCtB1B,IAAMiB,GAAa,mIAIjBrJ,OAEa,SAAS+L,KAAY,IACzB5D,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMsC,SACZ5D,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,WACZE,WAAY,CAAC,QAAS,MAAO,SAAU,YAAa,aAAc,SAClE/N,KAAM,WACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,iBCtB1B,IAAMiB,GAAa,4IAIjBrJ,OAEa,SAASgM,KAAe,IAC5B7D,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMuC,YACZ7D,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,cACZE,WAAY,CAAC,OAAQ,OAAQ,SAAU,YAAa,SACpD/N,KAAM,cACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,wBCtB1B,IAAMiB,GAAa,sIAIjBrJ,OAEa,SAASiM,KAAa,IAC1B9D,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMwC,UACZ9D,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,YACZE,WAAY,CAAC,SAAU,OAAQ,OAAQ,UAAW,OAClD/N,KAAM,YACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,wBCtB1B,IAAMiB,GAAa,gIAIjBrJ,OAEa,SAASkM,KAAW,IACxB/D,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMyC,QACZ/D,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,UACZE,WAAY,CAAC,OAAQ,QAAS,UAAW,OACzC/N,KAAM,UACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,iBCtB1B,IAAMiB,GAAa,wJAIjBrJ,OAEa,SAASmM,KAAmB,IAChChE,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAM0C,gBACZhE,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,kBACZE,WAAY,CAAC,OAAQ,OAAQ,OAAQ,MAAO,UAC5C/N,KAAM,kBACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,kBCP1B,IAAMiB,GAAa,4IAIjBrJ,OAEa,SAASoM,KAAe,IAC5BjE,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAM2C,YACZjE,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,cACZE,WAAY,CAAC,OAAQ,OAAQ,SAAU,YAAa,SAAU,OAC9D/N,KAAM,cACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,oBCtB1B,IAAMiB,GAAa,mIAIjBrJ,OAEa,SAASqM,KAAY,IACzBlE,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAM4C,SACZlE,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,WACZE,WAAY,CAAC,QAAS,OAAQ,MAAO,SAAU,OAC/C/N,KAAM,WACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,kBCtB1B,IAAMiB,GAAa,4IAIjBrJ,OAEa,SAASsM,KAAe,IAC5BnE,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAM6C,YACZnE,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,cACZE,WAAY,CAAC,QAAS,OAAQ,MAAO,SAAU,OAC/C/N,KAAM,cACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,kBCtB1B,IAAMiB,GAAa,+IAIjBrJ,OAEa,SAASuM,KAAgB,IAC7BpE,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAM8C,aACZpE,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,eACZE,WAAY,CAAC,QAAS,OAAQ,MAAO,SAAU,OAC/C/N,KAAM,eACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,kBCtB1B,IAAMiB,GAAa,+IAIjBrJ,OAEa,SAASwM,KAAgB,IAC7BrE,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAM+C,aACZrE,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,eACZE,WAAY,CAAC,QAAS,OAAQ,MAAO,SAAU,MAAO,QACtD/N,KAAM,eACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,kBCtB1B,IAAMiB,GAAa,+IAIjBrJ,OAEa,SAASyM,KAAgB,IAC7BtE,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMgD,aACZtE,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,eACZE,WAAY,CAAC,QAAS,OAAQ,MAAO,SAAU,MAAO,QACtD/N,KAAM,eACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,kBCtB1B,IAAMiB,GAAa,gIAIjBrJ,OAEa,SAAS0M,KAAW,IACxBvE,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMiD,QACZvE,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,UACZE,WAAY,CAAC,OAAQ,OAAQ,OAAQ,UAAW,OAChD/N,KAAM,UACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,wBCtB1B,IAAMiB,GAAa,uKAIjBrJ,OAEa,SAAS2M,KAAwB,IACrCxE,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMkD,qBACZxE,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,uBACZE,WAAY,CAAC,OAAQ,OAAQ,UAAW,OACxC/N,KAAM,uBACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,iBCtB1B,IAAMiB,GAAa,+IAIjBrJ,OAEa,SAAS4M,KAAgB,IAC7BzE,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMmD,aACZzE,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,eACZE,WAAY,CAAC,OAAQ,QAAS,YAAa,OAC3C/N,KAAM,eACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,kBCtB1B,IAAMiB,GAAa,4IAIjBrJ,OAEa,SAAS6M,KAAe,IAC5B1E,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMoD,YACZ1E,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,cACZE,WAAY,CAAC,OAAQ,OAAQ,YAAa,OAC1C/N,KAAM,cACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,kBCtB1B,IAAMiB,GAAa,kJAIjBrJ,OAEa,SAAS8M,KAAiB,IAC9B3E,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMqD,cACZ3E,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,gBACZE,WAAY,CAAC,OAAQ,SAAU,OAAQ,YAAa,OACpD/N,KAAM,gBACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,kBCrC1B,IAAMiB,GAAa,wJAIjBrJ,OAEa,SAAS+M,KAAmB,IAChC5E,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMsD,gBACZ5E,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,kBACZE,WAAY,CAAC,OAAQ,OAAQ,OAAQ,SAAU,OAC/C/N,KAAM,kBACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,qBCP1B,IAAMiB,GAAa,oKAIjBrJ,OAEa,SAASgN,KAAuB,IACpC7E,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMuD,oBACZ7E,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,sBACZE,WAAY,CAAC,WAAY,SAAU,SAAU,OAC7C/N,KAAM,sBACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,mBCtB1B,IAAMiB,GAAa,qJAIjBrJ,OAEa,SAASiN,KAAkB,IAC/B9E,EAAQqD,oBAARrD,KACQA,EAAKqB,OAAOC,MAAMwD,eACZ9E,EAAKqB,OAAOrC,OAAOwC,OACbxB,EAAKqB,OAAOrC,OAAO0C,aAE9C,OACI,kBAACV,GAAD,CACIhB,KAAMA,EACNiB,WAAY,iBACZE,WAAY,CAAC,SAAU,SAAU,WAAY,UAAW,OACxD/N,KAAM,iBACN8N,WAAYA,IAEZ,kBAAC,KAAD,cACA,kBAAC,OAAD,KACI,kBAAC,WAAD,KAAU,kBAACjB,EAAA,EAAD,kB,iHCtCX,SAAS8E,KACpB,OACI,kBAAC,IAAMrH,SAAP,KACI,kBAAC,MAAD,CAAIrH,OAAK,GAAT,OACA,kBAAC,KAAD,KACI,kBAAC,KAAD,kBACA,kBAAC,KAAD,mBACA,kBAAC,KAAD,mBACA,kBAAC,KAAD,yB,mCCRD,SAAS2O,KACpB,OACI,kBAAC,IAAMtH,SAAP,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,WAEI,kBAAC,KAAD,KACI,kBAAC,KAAD,kBACA,kBAAC,KAAD,mBAGR,kBAAC,KAAD,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,0BACA,kBAAC,KAAD,uBACA,kBAAC,KAAD,0BAJR,WAQA,kBAAC,KAAD,uBCpBD,SAASuH,KACpB,OACI,kBAAC,IAAMvH,SAAP,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAUzC,KAAM,UAAhB,sCACA,kBAAC,KAAD,CAAUA,KAAM,UAAhB,sCACA,kBAAC,KAAD,CAAUA,KAAM,eAAhB,2CACA,kBAAC,KAAD,CAAUA,KAAM,eAAhB,2CACA,kBAAC,KAAD,CAAUA,KAAM,QAAhB,oC,gECCViK,GAAiB,unBAmBrBrN,OAEIsN,GAA0B,8mCA8B9BtN,OAEIuN,GAAoB,0xBAkBxBvN,OAEa,SAASwN,KACpB,OACI,kBAAC,KAAD,CACIjS,KAAM,QACNC,kBAAmB,0CACnBiS,YAAa,QACbnE,WAAY,CAAC,QAAS,OAAQ,aAE9B,kBAAC,MAAD,cACA,kBAAC,MAAD,CAAI9K,OAAK,EAAC/C,WAAS,GAAnB,qEACA,kBAAC,KAAD,sMAIA,kBAAC,KAAD,CAAcuN,KAAMqE,GAAgBK,gBAAc,EAAC9R,MAAO,UAAWL,KAAM,cAAeoS,iBAAe,GACrG,kBAACC,GAAA,EAAD,CAAKC,EAAG,GACJ,kBAACX,GAAD,QAIR,kBAAC,KAAD,iKAGA,kBAAC,KAAD,CAAclE,KAAMsE,GAAyBI,gBAAc,EAAC9R,MAAO,UAAWL,KAAM,0BAChF,kBAACqS,GAAA,EAAD,CAAKC,EAAG,GACJ,kBAACV,GAAD,QAIR,kBAAC,KAAD,6DACA,kBAAC,KAAD,CAAcnE,KAAMuE,GAAmBG,gBAAc,EAAC9R,MAAO,UAAWL,KAAM,8BAC1E,kBAACqS,GAAA,EAAD,CAAKC,EAAG,GACJ,kBAACT,GAAD,QAIR,kBAAC,MAAD,YACA,kBAAC,KAAD,KACI,kBAAC,KAAD,KAAU,kBAAChF,EAAA,EAAD,kBACV,kBAAC,KAAD,KAAU,kBAACA,EAAA,EAAD,cACV,kBAAC,KAAD,KAAU,kBAACA,EAAA,EAAD,6B,4CC/GpB0F,GAAc,iHAMlB9N,OAEI+N,GAAsB,6FAM1B/N,OAEIgO,GAA2B,+FAM/BhO,OAEa,SAASiO,KACpB,OACI,kBAAC,KAAD,CACI1S,KAAM,eACNC,kBAAmB,sCACnBiS,YAAa,eACbnE,WAAY,CAAC,eAAgB,UAAW,YAExC,kBAAC,MAAD,qBACA,kBAAC,MAAD,CAAI9K,OAAK,EAAC/C,WAAS,GAAnB,gEACA,kBAAC,KAAD,wDACA,kBAAC,MAAD,YACA,kBAAC,KAAD,0EACA,kBAAC,KAAD,CAAMG,MAAO,WAAYkS,IACzB,kBAAC,MAAD,oBACA,kBAAC,KAAD,yHACA,kBAAC,KAAD,CAAMlS,MAAO,WAAYmS,IACzB,kBAAC,MAAD,0BACA,kBAAC,KAAD,8GACA,kBAAC,KAAD,CAAMnS,MAAO,WAAYoS,IACzB,kBAAC,MAAD,aACA,kBAAC,KAAD,0JACA,kBAAC,MAAD,kCACA,kBAAC,KAAD,KACI,kBAAC,KAAD,aAAe,kBAAC,KAAD,mBAAf,qDACA,kBAAC,KAAD,aAAe,kBAAC,KAAD,uBAAf,2DACA,kBAAC,KAAD,aAAe,kBAAC,KAAD,kBAAf,iDACA,kBAAC,KAAD,cAAgB,kBAAC5F,EAAA,EAAD,KAAM,kBAAC,KAAD,+BAAtB,mCCpDhB,IAAM8F,GAAe,urBAkBnBlO,OAEImO,GAAqB,47BAqBzBnO,OAEa,SAASoO,KACpB,OACI,kBAAC,KAAD,CACI7S,KAAM,SACNC,kBAAmB,2CACnBiS,YAAa,SACbnE,WAAY,CAAC,OAAQ,SAAU,WAAY,OAAQ,OAAQ,SAAU,SAAU,SAE/E,kBAAC,MAAD,eACA,kBAAC,MAAD,CAAI9K,OAAK,EAAC/C,WAAS,GAAnB,uCACA,kBAAC,KAAD,6IAGA,kBAAC,MAAD,CAAIA,WAAS,GAAb,iBACA,kBAAC,KAAD,CAAMG,MAAO,WAAYsS,IACzB,kBAAC,KAAD,2MAIA,kBAAC,MAAD,CAAIzS,WAAS,GAAb,yBACA,kBAAC,KAAD,CAAMG,MAAO,WAAYuS,IACzB,kBAAC,KAAD,uJCnCG,SAASE,KACpB,OACI,kBAAC,aAAD,CAAYC,UAAQ,EAACC,YAAaC,GAAIC,MAAO,CAACD,GAAIE,IAAKC,SAAUC,iBAAwBC,eAAa,GAClG,kBAAC,YAAD,KACI,kBAAC,aAAD,CAAYtT,KAAM,mBACd,kBAAC0S,GAAD,OAEJ,kBAAC,aAAD,CAAY1S,KAAM,cACd,kBAACD,EAAD,MACA,kBAACkS,GAAD,MACA,kBAACY,GAAD,OAEJ,kBAAC,aAAD,CAAY7S,KAAM,kBACd,kBAACuR,GAAD,MACA,kBAACvB,GAAD,MACA,kBAACE,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MACA,kBAACS,GAAD,MACA,kBAACR,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MACA,kBAACE,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MACA,kBAAC,aAAD,CAAYtR,KAAM,qBACd,kBAACwR,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,QAGR,kBAAC,aAAD,CAAY1R,KAAM,gBCnFlCuT,IAASC,OACP,kBAAC,IAAMC,WAAP,KAEI,kBAACX,GAAD,OAEJY,SAASC,eAAe,SjEuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAjM,GACLD,QAAQC,MAAMA,EAAMkM,c","file":"static/js/main.61857dba.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {DocsPage, H1, H2, H3, Markdown} from \"@danilandreev/material-docs\";\r\n\r\nconst pageMarkdown = `\r\n# Hello, i ___italic text___ am header 1\r\n## And me is header 2\r\n# heading no 1\r\n##### heading no 5\r\n> tip field  \r\n> sdfsf  \r\n> sdafaf  \r\n\r\nI am a simple text \r\n\r\n* list lol1 \\`\\`\\`import lol from lol\\`\\`\\` hello darkness\r\n* list lol2\r\n  * list nested1\r\n  * list nested2\r\n  \r\n\\`\\`\\`javascript\r\n//I am the code\r\nexport default function Lol(1) {\r\n    return null;\r\n}\r\n\r\n\\`\\`\\`\r\n\r\n\\`\\`\\` I am inline code \\`\\`\\`\r\n\r\n[I am link __sdfsf__](https://sdfsf.com.ua)  \r\n[I am an another link](https://sdfsf.com.ua)\r\n\r\n__bold text__  \r\n___bold italic___  \r\n_italic_\r\n\r\n![I am picture](https://static01.nyt.com/images/2018/10/04/magazine/04blackhole1/04blackhole1-articleLarge-v3.jpg?quality=75&auto=webp&disable=upscale)\r\n\r\n---\r\n\r\n| Name          | Type     | Default | Description                             |\r\n|---------------|----------|---------|-----------------------------------------|\r\n| button        | boolean  |         | if __true__, row will be clickable.     |\r\n| onClick       | function |         | callback, called on click event.        |\r\n| onDoubleClick | function |         | callback, called on double click event. |\r\n| children      | node     |         | The content of element                  |\r\n\r\n`;\r\n\r\nconst pageMarkdown2 = `\r\n# FlexibleTable API\r\n### The API documentation of the FlexibleTable React component. Learn more about the props and the CSS customization points.\r\n\r\n## Import\r\n\\`\\`\\`jsx\r\nimport {FlexibleTable} from \"@danilandreev/mui-table-flexible\";\r\n//or \r\nimport FlexibleTable from \"@danilandreev/mui-table-flexible/dist/organizms/FlexibleTable\";\r\n\\`\\`\\`\r\nYou can learn more about the difference by [reading this guide](https://material-ui.com/guides/minimizing-bundle-size/).\r\n## Props\r\n| Name          | Type     | Default | Description                             |\r\n|---------------|----------|---------|-----------------------------------------|\r\n| button        | boolean  |         | if true, row will be clickable.         |\r\n| onClick       | function |         | callback, called on click event.        |\r\n| onDoubleClick | function |         | callback, called on double click event. |\r\n| children      | node     |         | The content of element                  |\r\n\r\n\r\nThe __ref__ is forwarded to the root element.\r\n\r\nAny other props supplied will be provided to the root element (native element).\r\n\r\n## CSS\r\n| Rule name      | Description                                  |\r\n|----------------|----------------------------------------------|\r\n| root           | Styles applied to the root element.          |\r\n| tableContainer | Styles applied to the inner table container. |\r\n| head           | Styles applied to the table head element.    |\r\n| body           | Styles applied to the table body element.    |\r\n\r\nYou can override the style of the component thanks to one of these customization points:\r\n* With a rule name of the [__classes__ object prop](https://material-ui.com/customization/components/#overriding-styles-with-classes).\r\n* With a [global class name](https://material-ui.com/customization/components/#overriding-styles-with-global-class-names).\r\n\r\nIf that's not sufficient, you can check the [implementation of the component](https://github.com/DanilAndreev/mui-table-flexible/blob/master/src/lib/organizms/FlexibleTable/FlexibleTable.tsx) for more detail.\r\n## Demos\r\n* [FlexibleTable](/DanilAndreev/mui-table-flexible/wiki/FlexibleTable)\r\n`;\r\n\r\nexport default function DocsPageDemo() {\r\n    return(\r\n        <DocsPage name={\"DocsPages\"} searchDescription={\"Docs pages sdfsfs\"}>\r\n            <H1 noDivider>DocsPages</H1>\r\n            <H3>DocsPages description</H3>\r\n            <Markdown>{pageMarkdown2}</Markdown>\r\n\r\n        </DocsPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const useCommonStyles = makeStyles(theme => ({\r\n    pageBlock: {\r\n        marginBottom: theme.spacing(1),\r\n        paddingTop: theme.spacing(1),\r\n    }\r\n}));","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {grey} from \"@material-ui/core/colors\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    container: {\r\n        position: \"relative\",\r\n    },\r\n    tagHook: {\r\n        position: \"absolute\",\r\n        left: -25,\r\n        top: \"10%\",\r\n        color: grey[600],\r\n        display: \"none\",\r\n        padding: 20,\r\n        paddingTop: 0,\r\n        paddingLeft: 0,\r\n        \"&:hover\": {\r\n            color: grey[700],\r\n            display: \"block\",\r\n        },\r\n    },\r\n    anchor: {\r\n        \"&:target\": {\r\n            paddingTop: 64,\r\n            marginTop: -64,\r\n        },\r\n        \"&:hover $tagHook\": {\r\n            display: \"block\",\r\n        }\r\n    },\r\n    divider: {\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    h1: {\r\n        fontSize: \"2.8rem\",\r\n    },\r\n    h2: {\r\n        fontSize: \"2rem\",\r\n    },\r\n    h3: {\r\n        fontSize: \"1.5rem\",\r\n    },\r\n    h4: {\r\n        fontSize: \"1.2rem\",\r\n    },\r\n    h5: {\r\n        fontSize: \"0.9rem\",\r\n    },\r\n    h6: {\r\n        fontSize: \"0.6rem\",\r\n    },\r\n    anchorIcon: {\r\n        transform: \"rotate(45deg)\",\r\n    },\r\n}));\r\n","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\n\r\nexport const TaggingContext = React.createContext({\r\n    setTag: (key, value) => {\r\n        throw new ReferenceError(\"MaterialDocs: This function (setTag) hasn't been initialized yet. Maybe, you forget to call hook useTags() inside TaggingContext.Provider\")\r\n    },\r\n    removeTag: (key) => {\r\n        throw new ReferenceError(\"MaterialDocs: This function (removeTag) hasn't been initialized yet. Maybe, you forget to call hook useTags() inside TaggingContext.Provider\")\r\n    },\r\n    tags: {},\r\n});\r\n\r\nconst useTags = () => React.useContext(TaggingContext);\r\nexport default useTags;","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React, {Children} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport createRouteFromName from \"../../utils/createRouteFromName\";\r\nimport {useStyles} from \"./styles\";\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport clsx from \"clsx\";\r\nimport useTags from \"../../hooks/useTags\";\r\nimport {useCommonStyles} from \"../../stylesheets/commonStyles\";\r\nimport getElementOffsetSum from \"../../utils/getElementOffsetSum\";\r\nimport PropTypes from \"prop-types\";\r\nimport getTextFromChildren from \"../../utils/getTextFromChildren\";\r\n\r\n\r\nconst TagableF = React.forwardRef(function TagableF({children, noTag = false, variant, style, className, noDivider = false, ...props}, ref) {\r\n    const classes = {...useStyles(), ...props.classes};\r\n    const commonClasses = useCommonStyles();\r\n    const {setTag, removeTag} = useTags();\r\n    const [topOffset, setTopOffset] = React.useState(0);\r\n    const id = React.useRef(props.id || createRouteFromName(getTextFromChildren(children, 6)));\r\n    const aref = React.useRef(null);\r\n    const typographyClasses = {h1: classes.h1, h2: classes.h2, h3: classes.h3, h4: classes.h4, h5: classes.h5}\r\n\r\n    React.useEffect(() => {\r\n        !noTag && setTag(id.current, {label: children, ref: aref, topOffset});\r\n        return () => {\r\n            if (!noTag) {\r\n                removeTag(id.current);\r\n            }\r\n        };\r\n    }, [children, aref, topOffset]);\r\n\r\n    React.useEffect(() => {\r\n        const {top} = getElementOffsetSum(aref.current);\r\n        setTopOffset(top);\r\n    }, [aref]);\r\n\r\n    return (\r\n        <div\r\n            className={clsx(commonClasses.pageBlock, classes.root, className)}\r\n\r\n            style={style}\r\n            ref={ref}\r\n        >\r\n            <div\r\n                className={classes.anchor}\r\n                id={noTag ? undefined : id.current}\r\n            >\r\n                <div className={classes.container}>\r\n                    <Typography variant={variant} classes={typographyClasses}>\r\n                        {children}\r\n                        {!noDivider && <Divider className={classes.divider}/>}\r\n                    </Typography>\r\n                    {!noTag &&\r\n                    <a href={`#${id.current}`} className={classes.tagHook} ref={aref}>\r\n                        <LinkIcon className={classes.anchorIcon}/>\r\n                    </a>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nTagableF.propTypes = {\r\n    // Stylable\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    // Containerable\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport const Tagable = TagableF;\r\n\r\n\r\nfunction H1F({children, ...props}, ref) {\r\n    return <Tagable variant={\"h1\"} {...props} ref={ref}>{children}</Tagable>\r\n}\r\n\r\nexport const H1 = React.forwardRef(H1F);\r\n\r\n\r\nfunction H2F({children, ...props}, ref) {\r\n    return <Tagable variant={\"h2\"} {...props} ref={ref}>{children}</Tagable>\r\n}\r\n\r\nexport const H2 = React.forwardRef(H2F);\r\n\r\n\r\nfunction H3F({children, ...props}, ref) {\r\n    return <Tagable variant={\"h3\"} {...props} ref={ref}>{children}</Tagable>\r\n}\r\n\r\nexport const H3 = React.forwardRef(H3F);\r\n\r\n\r\nfunction H4F({children, noDivider = true, noTag = true, ...props}, ref) {\r\n    return <Tagable variant={\"h4\"} {...props} noTag={noTag} noDivider={noDivider} ref={ref}>{children}</Tagable>\r\n}\r\n\r\nexport const H4 = React.forwardRef(H4F);\r\n\r\n\r\nfunction H5F({children, noDivider = true, noTag = true, ...props}, ref) {\r\n    return <Tagable variant={\"h5\"} {...props} noTag={noTag} noDivider={noDivider} ref={ref}>{children}</Tagable>\r\n}\r\n\r\nexport const H5 = React.forwardRef(H5F);\r\n\r\n\r\nfunction H6F({children, noDivider = true, noTag = true, ...props}, ref) {\r\n    return <Tagable variant={\"h6\"} {...props} noTag={noTag} noDivider={noDivider} ref={ref}>{children}</Tagable>\r\n}\r\n\r\nexport const H6 = React.forwardRef(H6F);\r\n\r\n\r\nconst HeaderF = React.forwardRef(function HeaderF({children, heading = 1, ...props}, ref) {\r\n    switch (heading) {\r\n        case 1:\r\n            return <H1 {...props} ref={ref}>{children}</H1>;\r\n        case 2:\r\n            return <H2 {...props} ref={ref}>{children}</H2>;\r\n        case 3:\r\n            return <H3 {...props} ref={ref}>{children}</H3>;\r\n        case 4:\r\n            return <H4 {...props} ref={ref}>{children}</H4>;\r\n        case 5:\r\n            return <H5 {...props} ref={ref}>{children}</H5>;\r\n        default:\r\n            return <H6 {...props} ref={ref}>{children}</H6>;\r\n    }\r\n});\r\n\r\nHeaderF.propTypes = {\r\n    heading: PropTypes.oneOf([1, 2, 3, 4, 5, 6]),\r\n}\r\n\r\nexport const Header = HeaderF;","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\n/**\r\n * createRouteFromName - generates route without extra symbols from string name\r\n * @param {string} name\r\n * @example \"Hello it's me\" -> \"hello-its-me\"\r\n */\r\nexport default function createRouteFromName(name) {\r\n    if (typeof name !== \"string\") throw new TypeError(\"MaterialDocs: name must be string type\");\r\n    const route = name.replace(/\\s+/g, \" \")\r\n        .replace(/\\ +/g, \"-\")\r\n        .replace(/'+/g, \"\")\r\n        .replace(/\\?+/g, \"\").toLowerCase();\r\n    return route;\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\n\r\n/**\r\n * getTextFromChildren - returns deep text from children.\r\n * @param {any} children\r\n * @param {number} depth\r\n * @return {string}\r\n */\r\nexport default function getTextFromChildren(children, depth = 1) {\r\n    if (depth < 1) return \"\";\r\n    const text = React.Children.map(children, child => {\r\n        if (React.isValidElement(child)) return getTextFromChildren(child.props.children, depth - 1);\r\n        if (typeof child === \"string\") return child;\r\n        return \"\";\r\n    }).join(\" \").trim();\r\n    return text || \"\";\r\n}\r\n","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nexport default function getElementOffsetSum(elem) {\r\n    let top = 0;\r\n    let left = 0;\r\n    while (elem) {\r\n        top = top + parseFloat(elem.offsetTop);\r\n        left = left + parseFloat(elem.offsetLeft);\r\n        elem = elem.offsetParent || elem.parentElement;\r\n    }\r\n\r\n    return {top: Math.round(top), left: Math.round(left)}\r\n}\r\n","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    stylePositionInside: {\r\n        listStylePosition: \"inside\",\r\n    },\r\n    stylePositionOutside: {\r\n        listStylePosition: \"outside\",\r\n    },\r\n    stylePositionInherit: {\r\n        listStylePosition: \"inherit\",\r\n    },\r\n    stylePositionRevert: {\r\n        listStylePosition: \"revert\",\r\n    },\r\n    stylePositionUnset: {\r\n        listStylePosition: \"unset\",\r\n    },\r\n}));","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {useStyles} from \"./styles\";\r\nimport clsx from \"clsx\";\r\nimport {useCommonStyles} from \"../../stylesheets/commonStyles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst List = React.forwardRef(function List({children, className, style, image, ...props}, ref) {\r\n    const classes = {...useStyles(), ...props.classes};\r\n    const commonClasses = useCommonStyles();\r\n\r\n    return (\r\n        <ul {...props} ref={ref} className={clsx(commonClasses.pageBlock, classes.root, className)} style={style}>\r\n            {children}\r\n        </ul>\r\n    );\r\n});\r\n\r\nList.propTypes = {\r\n    // ListProps\r\n    image: PropTypes.string,\r\n    styling: PropTypes.oneOf([\"inside\", \"outside\", \"inherit\", \"revert\", \"unset\"]),\r\n    // Stylable\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    // Containerable\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default List;\r\n","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ListItemContained extends React.Component {\r\n    render() {\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nListItemContained.propTypes = {\r\n    // Containerable\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default ListItemContained;\r\n","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {grey} from \"@material-ui/core/colors\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(0.5),\r\n        paddingBottom: 0,\r\n        paddingTop: theme.spacing(1),\r\n        fontSize: \"1rem\",\r\n        fontWeight: 400,\r\n        letterSpacing: \"0.00938em\",\r\n    },\r\n    typeCircle: {\r\n        listStyleType: \"circle\",\r\n    },\r\n    typeSquare: {\r\n        listStyleType: \"square\",\r\n    },\r\n    typeRoman: {\r\n        listStyleType: \"upper-roman\",\r\n    },\r\n    typeAlpha: {\r\n        listStyleType: \"lower-alpha\",\r\n    },\r\n    typeNone: {\r\n        listStyle: \"none\",\r\n    },\r\n    list: {\r\n        paddingLeft: theme.spacing(2),\r\n    },\r\n    dense: {\r\n        padding: theme.spacing(0.3),\r\n        paddingLeft: theme.spacing(0.5),\r\n        paddingTop: theme.spacing(0.4),\r\n    }\r\n}));","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport ListItemContained from \"../ListItemContained\";\r\nimport {useStyles} from \"./styles\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ListItem = React.forwardRef(function ListItem({children, type = \"circle\", dense = false, style, className, ...props}, ref) {\r\n    const classes = {...useStyles(), ...props.classes};\r\n    const containers = React.Children.map(children, child => child.type === ListItemContained ? child : null);\r\n    if (containers.length > 1) console.error(\"MaterialDocs: List item can contain only one ListItemContained element\");\r\n\r\n    const containedItems = containers[0] && containers[0].props && containers[0].props.children;\r\n    const content = React.Children.map(children, child => child.type === ListItemContained ? null : child);\r\n\r\n    let listTypeClass = classes.typeCircle;\r\n    switch (type) {\r\n        case \"square\":\r\n            listTypeClass = classes.typeSquare;\r\n            break;\r\n        case \"upper-roman\":\r\n            listTypeClass = classes.typeRoman;\r\n            break;\r\n        case \"lower-alpha\":\r\n            listTypeClass = classes.typeAlpha;\r\n            break;\r\n        case \"none\":\r\n            listTypeClass = classes.typeNone;\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <li\r\n            className={clsx(classes.root, dense && classes.dense, listTypeClass, className)}\r\n            {...props}\r\n            ref={ref}\r\n            style={style}\r\n        >\r\n            <div>\r\n                <div>\r\n                    {content}\r\n                </div>\r\n                {containedItems &&\r\n                <ul className={classes.list}>\r\n                    {containedItems}\r\n                </ul>\r\n                }\r\n            </div>\r\n        </li>\r\n    );\r\n});\r\n\r\nListItem.propTypes = {\r\n    // ListItemProps\r\n    type: PropTypes.oneOf([\"circle\", \"square\", \"upper-roman\", \"lower-alpha\", \"none\"]),\r\n    dense: PropTypes.bool,\r\n    // Stylable\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    // Containerable\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default ListItem;","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    root: {\r\n        overflowX: \"auto\",\r\n        position: \"relative\",\r\n    },\r\n    highlighterContainer: {\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n    }\r\n}));\r\n","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {darcula, dark, docco} from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport {blueGrey, grey} from \"@material-ui/core/colors\";\r\nimport clsx from \"clsx\";\r\nimport {useStyles} from \"./styles\";\r\nimport {useCommonStyles} from \"../../stylesheets/commonStyles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Code = React.forwardRef(function Code({children, language = 'javascript', theme = 'light', style, className}, ref) {\r\n    const classes = useStyles();\r\n    const commonClasses = useCommonStyles();\r\n    const [height, setHeight] = React.useState(0);\r\n    const codeRef = React.useRef(null);\r\n\r\n    React.useEffect(() => {\r\n        if (codeRef.current) {\r\n            setHeight(codeRef.current.clientHeight);\r\n        } else {\r\n            setHeight(0);\r\n        }\r\n    }, [codeRef.current, children]);\r\n\r\n    function fixStyle(style) {\r\n        return {...style, hljs: {...style.hljs, background: 'none'}};\r\n    }\r\n\r\n    const codeStyles = {\r\n        light: {\r\n            highlight: fixStyle(docco),\r\n            background: grey[200],\r\n        },\r\n        dark: {\r\n            highlight: fixStyle(dark),\r\n            background: grey[900],\r\n        },\r\n        darcula: {\r\n            highlight: fixStyle(darcula),\r\n            background: blueGrey[900],\r\n        },\r\n    };\r\n\r\n    let codeStyle = codeStyles.light;\r\n    switch (theme) {\r\n        case 'dark':\r\n            codeStyle = codeStyles.dark;\r\n            break;\r\n        case 'darcula':\r\n            codeStyle = codeStyles.darcula;\r\n            break;\r\n        default:\r\n            codeStyle = codeStyles.light;\r\n    }\r\n\r\n//    console.log(SyntaxHighlighter.supportedLanguages.map(item => `\"${item}\"`).join(\" | \"));\r\n    return (\r\n        <Paper\r\n            style={{backgroundColor: codeStyle.background, height, ...style}}\r\n            className={clsx(commonClasses.pageBlock, classes.root, className)}\r\n            elevation={0}\r\n            ref={ref}\r\n        >\r\n            <div className={classes.highlighterContainer} ref={codeRef}>\r\n                <SyntaxHighlighter language={language} style={codeStyle.highlight}>\r\n                    {children}\r\n                </SyntaxHighlighter>\r\n            </div>\r\n        </Paper>\r\n    );\r\n});\r\n\r\nCode.propTypes = {\r\n    // CodeProps\r\n    theme: PropTypes.oneOf([\"light\", \"dark\", \"darcula\"]),\r\n    language: PropTypes.oneOf([\r\n        \"1c\", \"abnf\", \"accesslog\", \"actionscript\", \"ada\", \"angelscript\", \"apache\", \"applescript\", \"arcade\",\r\n        \"arduino\", \"armasm\", \"asciidoc\", \"aspectj\", \"autohotkey\", \"autoit\", \"avrasm\", \"awk\", \"axapta\", \"bash\",\r\n        \"basic\", \"bnf\", \"brainfuck\", \"c-like\", \"c\", \"cal\", \"capnproto\", \"ceylon\", \"clean\", \"clojure-repl\", \"clojure\",\r\n        \"cmake\", \"coffeescript\", \"coq\", \"cos\", \"cpp\", \"crmsh\", \"crystal\", \"csharp\", \"csp\", \"css\", \"d\", \"dart\",\r\n        \"delphi\", \"diff\", \"django\", \"dns\", \"dockerfile\", \"dos\", \"dsconfig\", \"dts\", \"dust\", \"ebnf\", \"elixir\",\r\n        \"elm\", \"erb\", \"erlang-repl\", \"erlang\", \"excel\", \"fix\", \"flix\", \"fortran\", \"fsharp\", \"gams\", \"gauss\",\r\n        \"gcode\", \"gherkin\", \"glsl\", \"gml\", \"go\", \"golo\", \"gradle\", \"groovy\", \"haml\", \"handlebars\", \"haskell\",\r\n        \"haxe\", \"hsp\", \"htmlbars\", \"http\", \"hy\", \"inform7\", \"ini\", \"irpf90\", \"isbl\", \"java\", \"javascript\",\r\n        \"jboss-cli\", \"json\", \"julia-repl\", \"julia\", \"kotlin\", \"lasso\", \"latex\", \"ldif\", \"leaf\", \"less\", \"lisp\",\r\n        \"livecodeserver\", \"livescript\", \"llvm\", \"lsl\", \"lua\", \"makefile\", \"markdown\", \"mathematica\", \"matlab\",\r\n        \"maxima\", \"mel\", \"mercury\", \"mipsasm\", \"mizar\", \"mojolicious\", \"monkey\", \"moonscript\", \"n1ql\", \"nginx\",\r\n        \"nim\", \"nix\", \"nsis\", \"objectivec\", \"ocaml\", \"openscad\", \"oxygene\", \"parser3\", \"perl\", \"pf\", \"pgsql\",\r\n        \"php-template\", \"php\", \"plaintext\", \"pony\", \"powershell\", \"processing\", \"profile\", \"prolog\", \"properties\",\r\n        \"protobuf\", \"puppet\", \"purebasic\", \"python-repl\", \"python\", \"q\", \"qml\", \"r\", \"reasonml\", \"rib\", \"roboconf\",\r\n        \"routeros\", \"rsl\", \"ruby\", \"ruleslanguage\", \"rust\", \"sas\", \"scala\", \"scheme\", \"scilab\", \"scss\", \"shell\",\r\n        \"smali\", \"smalltalk\", \"sml\", \"sqf\", \"sql\", \"stan\", \"stata\", \"step21\", \"stylus\", \"subunit\", \"swift\",\r\n        \"taggerscript\", \"tap\", \"tcl\", \"thrift\", \"tp\", \"twig\", \"typescript\", \"vala\", \"vbnet\", \"vbscript-html\",\r\n        \"vbscript\", \"verilog\", \"vhdl\", \"vim\", \"x86asm\", \"xl\", \"xml\", \"xquery\", \"yaml\", \"zephir\"\r\n    ]),\r\n    children: PropTypes.string,\r\n    // Stylable\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n}\r\n\r\nexport default Code;","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    bold: {\r\n        fontWeight: \"bold\",\r\n    },\r\n}));","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {useStyles} from \"./styles\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Bold =  React.forwardRef(function Bold({children, className, style, ...props}, ref) {\r\n    const classes = {...useStyles(), ...props.classes};\r\n    return (\r\n        <span className={clsx(classes.root, classes.bold, className)} ref={ref} style={style}>\r\n            {children}\r\n        </span>\r\n    )\r\n\r\n});\r\n\r\nBold.propTypes = {\r\n    // Stylable\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    // Containerable\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default Bold;","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    italic: {\r\n        fontStyle: \"italic\",\r\n    },\r\n}));","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {useStyles} from \"./styles\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Italic = React.forwardRef(function Italic({children, className, style, ...props}, ref) {\r\n    const classes = {...useStyles(), ...props.classes};\r\n    return (\r\n        <span className={clsx(classes.root, classes.italic, className)} ref={ref} style={style}>\r\n            {children}\r\n        </span>\r\n    )\r\n});\r\n\r\nItalic.propTypes = {\r\n    // Stylable\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    // Containerable\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default Italic;","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {grey} from \"@material-ui/core/colors\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    fullWidth: {\r\n        width: \"100%\",\r\n        flexGrow: 1,\r\n    }\r\n}));","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {LazyLoadImage} from 'react-lazy-load-image-component';\r\nimport {useStyles} from \"./styles\";\r\nimport clsx from \"clsx\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Image = React.forwardRef(function Image({src = \"\", alt = \"\", style, className, children, fullWidth = false, ...props}, ref) {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <div style={style} className={clsx(fullWidth && classes.fullWidth, className)} ref={ref}>\r\n                <LazyLoadImage\r\n                    alt={alt}\r\n                    style={{width: \"100%\"}}\r\n                    src={src}\r\n                    placeholder={<CircularProgress/>}\r\n                />\r\n            </div>\r\n            {children && <Typography color={\"textSecondary\"} variant={\"subtitle2\"}>{children}</Typography>}\r\n        </React.Fragment>\r\n    );\r\n});\r\n\r\nImage.propTypes = {\r\n    // ImageProps\r\n    src: PropTypes.string,\r\n    alt: PropTypes.string,\r\n    fullWidth: PropTypes.bool,\r\n    // Stylable\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    // Containerable\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default Image;","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {grey} from \"@material-ui/core/colors\";\r\n\r\n//TODO:  finish tables horizontal scrolling\r\nexport const useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        width: \"100%\",\r\n        overflowX: \"auto\",\r\n    },\r\n}));","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Table as MUITable} from \"@material-ui/core\";\r\nimport {useCommonStyles} from \"../../stylesheets/commonStyles\";\r\nimport clsx from \"clsx\";\r\nimport {useStyles} from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Table = React.forwardRef(function Table({children, className, style, ...props}, ref) {\r\n    const commonClasses = useCommonStyles();\r\n    const classes = {...useStyles(), ...props.classes};\r\n    return (\r\n        <div className={clsx(classes.container, className)} style={style}>\r\n            <MUITable {...props} className={commonClasses.pageBlock} ref={ref}>\r\n                {children}\r\n            </MUITable>\r\n        </div>\r\n    );\r\n});\r\n\r\nTable.propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default Table;\r\n","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {grey} from \"@material-ui/core/colors\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        borderLeft: `5px solid ${grey[400]}`,\r\n        backgroundColor: grey[200],\r\n        padding: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2),\r\n    },\r\n    colorLight: {\r\n        backgroundColor: grey[200],\r\n    },\r\n    colorDark: {\r\n        backgroundColor: grey[400],\r\n    }\r\n}));","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {useStyles} from \"./styles\";\r\nimport clsx from \"clsx\";\r\nimport {useCommonStyles} from \"../../stylesheets/commonStyles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Block = React.forwardRef(function Block({className, style, children, color = \"light\", ...props}, ref) {\r\n    const commonClasses = useCommonStyles();\r\n    const classes = {...useStyles(), ...props.classes};\r\n    return (\r\n        <Paper\r\n            ref={ref}\r\n            square\r\n            className={clsx(\r\n                classes.root,\r\n                commonClasses.pageBlock,\r\n                color === \"light\" && classes.colorLight,\r\n                color === \"dark\" && classes.colorDark,\r\n                className\r\n            )}\r\n            style={style}\r\n            elevation={0}\r\n        >\r\n            {children}\r\n        </Paper>\r\n    );\r\n});\r\n\r\nBlock.propTypes = {\r\n    // BlockProps\r\n    color: PropTypes.string,\r\n    // Stylable\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    // Containerable\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default Block;","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {grey, yellow} from \"@material-ui/core/colors\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(0.4),\r\n        borderRadius: theme.spacing(0.4),\r\n    },\r\n    colorDefault: {\r\n        backgroundColor: yellow[100],\r\n    },\r\n    colorPrimary: {\r\n        backgroundColor: theme.palette.primary.light,\r\n    },\r\n    colorSecondary: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n    },\r\n    colorGrey: {\r\n        backgroundColor: grey[200],\r\n    },\r\n    font: {\r\n        fontFamily: \"monospace\",\r\n        fontWeight: 500,\r\n        fontSize: \"inherit\",\r\n    },\r\n    textInherit: {\r\n        color: \"inherit\",\r\n    },\r\n    textWhite: {\r\n        color: theme.palette.common.white,\r\n    },\r\n    textBlack: {\r\n        color: theme.palette.common.black,\r\n    },\r\n}));\r\n","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {useStyles} from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CodeSpan = React.forwardRef(function CodeSpan({className, style, children, color = \"default\", text = \"inherit\", ...props}, ref) {\r\n    const classes = {...useStyles(), ...props.classes};\r\n    return (\r\n        <span\r\n            ref={ref}\r\n            className={clsx(\r\n                classes.root,\r\n                classes.font,\r\n                color === \"default\" && classes.colorDefault,\r\n                color === \"primary\" && classes.colorPrimary,\r\n                color === \"secondary\" && classes.colorSecondary,\r\n                color === \"grey\" && classes.colorGrey,\r\n                text === \"inherit\" && classes.textInherit,\r\n                text === \"black\" && classes.textBlack,\r\n                text === \"white\" && classes.textWhite,\r\n                className\r\n            )}\r\n            style={style}\r\n        >\r\n            {children}\r\n        </span>\r\n    );\r\n});\r\n\r\nCodeSpan.propTypes = {\r\n    // CodeSpanProps\r\n    color: PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"grey\"]),\r\n    text: PropTypes.oneOf([\"white\", \"black\", \"inherit\"]),\r\n    // Stylable\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    // Containerable\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default CodeSpan;","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {grey} from \"@material-ui/core/colors\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n}));","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport marked from \"marked\";\r\nimport {useCommonStyles} from \"../../stylesheets/commonStyles\";\r\nimport generateMaterialDocsFromMarkdown from \"../../utils/generateMaterialDocsFromMarkdown\";\r\nimport clsx from \"clsx\";\r\nimport {useStyles} from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Markdown = React.forwardRef(function Markdown({children, className, style, inline = false, ...props}, ref) {\r\n    const commonClasses = useCommonStyles();\r\n    const classes = useStyles();\r\n    const [content, setContent] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        try {\r\n            const child = React.Children.map(children, String).join(\"\");\r\n            setContent(generateMaterialDocsFromMarkdown(child));\r\n        } catch (error) {\r\n            setContent(null);\r\n            console.log(error);\r\n        }\r\n    }, [children]);\r\n\r\n    if (inline) {\r\n        return (\r\n            <span ref={ref} className={clsx(commonClasses.pageBlock, classes.root, className)} style={style}>\r\n                {content}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div ref={ref} className={clsx(commonClasses.pageBlock, classes.root, className)} style={style}>\r\n            {content}\r\n        </div>\r\n    );\r\n});\r\n\r\nMarkdown.propTypes = {\r\n    // MarkdownProps\r\n    inline: PropTypes.bool,\r\n    children: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\r\n    // Stylable\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    // Containerable\r\n}\r\n\r\nexport default Markdown;","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport marked from \"marked\";\r\nimport React from \"react\";\r\nimport {Header} from \"../components/Headers\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"../components/List/List\";\r\nimport ListItem from \"../components/ListItem/ListItem\";\r\nimport Code from \"../components/Code/Code\";\r\nimport {Link} from \"@material-ui/core\";\r\nimport Bold from \"../components/Bold/Bold\";\r\nimport Italic from \"../components/Italic/Italic\";\r\nimport Image from \"../components/Image/Image\";\r\nimport Table from \"../components/Table\";\r\nimport TableHead from \"../components/TableHead\";\r\nimport TableBody from \"../components/TableBody\";\r\nimport TableRow from \"../components/TableRow\";\r\nimport TableCell from \"../components/TableCell\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Block from \"../components/Block/Block\";\r\nimport CodeSpan from \"../components/CodeSpan/CodeSpan\";\r\n\r\nexport default function generateMaterialDocsFromMarkdown(input) {\r\n    if (!(typeof input === \"string\" || typeof input === \"object\"))\r\n        throw new TypeError(`MaterialDocs: incorrect type of input param, expected object | string, got ${typeof input}`);\r\n    let tokens = input;\r\n    if (typeof input === \"string\") {\r\n        tokens = marked.lexer(input);\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {tokens.map(token => {\r\n                switch (token.type) {\r\n                    case \"heading\":\r\n                       return <Header heading={token.depth}>{token.tokens && generateMaterialDocsFromMarkdown(token.tokens)}</Header>\r\n                    case \"text\":\r\n                        return token.tokens ? generateMaterialDocsFromMarkdown(token.tokens) : token.text;\r\n                    case \"paragraph\":\r\n                        return <Typography>{token.tokens && generateMaterialDocsFromMarkdown(token.tokens)}</Typography>\r\n                    case \"list\":\r\n                        return <List>{token.items && generateMaterialDocsFromMarkdown(token.items)}</List>;\r\n                    case \"list_item\":\r\n                        return <ListItem>{token.tokens && generateMaterialDocsFromMarkdown(token.tokens)}</ListItem>;\r\n                    case \"code\":\r\n                        return <Code language={token.lang}>{token.text}</Code>\r\n                    case \"codespan\":\r\n                        return <CodeSpan>{token.text}</CodeSpan>\r\n                    case \"link\":\r\n                        return <Link\r\n                            href={token.href}>{token.tokens && generateMaterialDocsFromMarkdown(token.tokens)}</Link>\r\n                    case \"br\":\r\n                        return <br/>\r\n                    case \"hr\":\r\n                        return <Divider/>\r\n                    case \"strong\":\r\n                        return <Bold>{token.tokens && generateMaterialDocsFromMarkdown(token.tokens)}</Bold>\r\n                    case \"em\":\r\n                        return <Italic>{token.tokens && generateMaterialDocsFromMarkdown(token.tokens)}</Italic>\r\n                    case \"image\":\r\n                        return <Image src={token.href} alt={token.text}/>\r\n                    case \"table\":\r\n                        const header = token.tokens.header;\r\n                        const cells = token.tokens.cells;\r\n                        return (\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        {header.map(cell => (\r\n                                            <TableCell>\r\n                                                <Bold>\r\n                                                    {cell && generateMaterialDocsFromMarkdown(cell)}\r\n                                                </Bold>\r\n                                            </TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {cells.map(row => (\r\n                                        <TableRow>\r\n                                            {row.map(cell =>\r\n                                                <TableCell>{cell && generateMaterialDocsFromMarkdown(cell)}</TableCell>)}\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        );\r\n                    case \"blockquote\":\r\n                        return <Block>{token.tokens && generateMaterialDocsFromMarkdown(token.tokens)}</Block>\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n            })}\r\n        </React.Fragment>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\n/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {\r\n    Code,\r\n    DocsPage,\r\n    H1,\r\n    H2,\r\n    H3,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow\r\n} from \"@danilandreev/material-docs\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {grey, purple} from \"@material-ui/core/colors\";\r\nimport clsx from \"clsx\";\r\nimport Markdown from \"../../lib/components/Markdown/Markdown\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    datatype: {\r\n        color: purple[800],\r\n    },\r\n    code: {\r\n        fontFamily: \"monospace\",\r\n        fontSize: \"14px\",\r\n    },\r\n    underlined: {\r\n        textDecoration: `underline dotted ${grey[500]}`,\r\n    }\r\n}));\r\n\r\nexport default function ApiPage({lang, localeName, importCode, name, searchTags, children, ...props}) {\r\n    const classes = useStyles();\r\n    if (!lang) throw new Error(`Documentation: lang is required prop`);\r\n    if (!localeName) throw new Error(`Documentation: localeName is required prop`);\r\n\r\n    const locale = lang.locale.pages[localeName];\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    const showProps = !!locale.enableProps || !!locale.noPropsText;\r\n    const showCss = !!locale.enableCss || !!locale.noCssText;\r\n    return (\r\n        <DocsPage\r\n            name={name}\r\n            searchTags={searchTags || locale.searchTags}\r\n            searchDescription={locale.pageSearchDescription}\r\n        >\r\n            <H1 noDivider>{name}</H1>\r\n            <H3 noDivider noTag>{locale.pageAbout}</H3>\r\n            <H2>{localeSpells.Import}</H2>\r\n            <Code language={\"javascript\"} theme={\"darcula\"}>\r\n                {importCode}\r\n            </Code>\r\n            <Markdown>{componentAPILocale.importDifferenceText}</Markdown>\r\n            <H2>{componentAPILocale.ComponentNameHeader}</H2>\r\n            <Markdown>{locale.ComponentNameText}</Markdown>\r\n            {showProps && <H2>Props</H2>}\r\n            {locale.enableProps &&\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>{componentAPILocale.propName}</TableCell>\r\n                        <TableCell>{componentAPILocale.propType}</TableCell>\r\n                        <TableCell>{componentAPILocale.propDefault}</TableCell>\r\n                        <TableCell>{componentAPILocale.propDescription}</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {locale.props.map(prop => (\r\n                        <TableRow key={prop.name}>\r\n                            <TableCell className={classes.code}>{prop.name}</TableCell>\r\n                            <TableCell className={clsx(classes.datatype, classes.code)}>{prop.type}</TableCell>\r\n                            <TableCell className={clsx(classes.code, classes.underlined)}>{prop.default}</TableCell>\r\n                            <TableCell>{prop.description}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n            }\r\n            {!locale.enableProps && <Markdown>{locale.noPropsText}</Markdown>}\r\n            {locale.forwardRef && <Markdown>{componentAPILocale.ref}</Markdown>}\r\n            {showCss && <H2>CSS</H2>}\r\n            {locale.enableCss &&\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>{componentAPILocale.ruleName}</TableCell>\r\n                        <TableCell>{componentAPILocale.ruleDescription}</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {Object.keys(locale.css).map(key => (\r\n                        <TableRow key={key}>\r\n                            <TableCell className={classes.code}>{key}</TableCell>\r\n                            <TableCell>{locale.css[key]}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n            }\r\n            {!locale.enableCss && <Markdown>{locale.noCssText}</Markdown>}\r\n            {locale.enableCss &&\r\n            <Markdown>{componentAPILocale.customization}</Markdown>\r\n            }\r\n            {children}\r\n        </DocsPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\n\r\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {DocsPage} from \"@danilandreev/material-docs\";\r\n// or\r\nimport DocsPage from \"@danilandreev/material-docs/components/DocsPage\";\r\n`.trim();\r\n\r\nexport default function DocsPageAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.DocsPageAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"DocsPageAPI\"}\r\n            searchTags={[\"docs\", \"page\", \"api\"]}\r\n            name={\"DocsPageAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Pages</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\n\r\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {DemoWithCode} from \"@danilandreev/material-docs\";\r\n// or\r\nimport DemoWithCode from \"@danilandreev/material-docs/components/DemoWithCode\";\r\n`.trim();\r\n\r\nexport default function DemoWithCodeAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.DemoWithCodeAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"DemoWithCodeAPI\"}\r\n            searchTags={[\"demo\", \"with\", \"code\", \"api\", \"showing\", \"code\"]}\r\n            name={\"DemoWithCodeAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Code showing</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\n\r\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {Code} from \"@danilandreev/material-docs\";\r\n// or\r\nimport Code from \"@danilandreev/material-docs/components/Code\";\r\n`.trim();\r\n\r\nexport default function CodeAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.CodeAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"CodeAPI\"}\r\n            searchTags={[\"code\", \"highlight\", \"language\", \"api\"]}\r\n            name={\"CodeAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Code showing</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\n\r\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {PagesGroup} from \"@danilandreev/material-docs\";\r\n// or\r\nimport PagesGroup from \"@danilandreev/material-docs/components/PagesGroup\";\r\n`.trim();\r\n\r\nexport default function PagesGroupAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.PagesGroupAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"PagesGroupAPI\"}\r\n            searchTags={[\"page\", \"group\", \"gather\", \"container\"]}\r\n            name={\"PagesGroupAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Lists</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n    DocsPage,\r\n    Code,\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    List,\r\n    ListItem,\r\n    useLang,\r\n    H1,\r\n    H2,\r\n    H3\r\n} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {Image} from \"@danilandreev/material-docs\";\r\n// or\r\nimport Image from \"@danilandreev/material-docs/components/Image\";\r\n`.trim();\r\n\r\nexport default function ImageAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.ImageAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"ImageAPI\"}\r\n            searchTags={[\"image\", \"lazy\", \"load\", \"picture\", \"card\", \"banner\", \"logo\"]}\r\n            name={\"ImageAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Images</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\n\r\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {ListItemAPI} from \"@danilandreev/material-docs\";\r\n// or\r\nimport ListItemAPI from \"@danilandreev/material-docs/components/ListItemAPI\";\r\n`.trim();\r\n\r\nexport default function ListItemAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.ListItemAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"ListItemAPI\"}\r\n            searchTags={[\"list\", \"item\", \"api\"]}\r\n            name={\"ListItemAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Lists</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\n\r\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {ExpansionCode} from \"@danilandreev/material-docs\";\r\n// or\r\nimport ExpansionCode from \"@danilandreev/material-docs/components/ExpansionCode\";\r\n`.trim();\r\n\r\nexport default function ExpansionCodeAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.ExpansionCodeAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"ExpansionCodeAPI\"}\r\n            searchTags={[\"demo\", \"with\", \"code\", \"api\"]}\r\n            name={\"ExpansionCodeAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Code showing</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\n\r\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {Block} from \"@danilandreev/material-docs\";\r\n// or\r\nimport Block from \"@danilandreev/material-docs/components/Block\";\r\n`.trim();\r\n\r\nexport default function BlockAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.BlockAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"BlockAPI\"}\r\n            searchTags={[\"block\", \"tip\", \"slided\", \"separated\", \"blockquote\", \"quote\"]}\r\n            name={\"BlockAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Pages</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\n\r\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {CodeSpan} from \"@danilandreev/material-docs\";\r\n// or\r\nimport CodeSpan from \"@danilandreev/material-docs/components/CodeSpan\";\r\n`.trim();\r\n\r\nexport default function CodeSpanAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.CodeSpanAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"CodeSpanAPI\"}\r\n            searchTags={[\"code\", \"span\", \"inline\", \"component\", \"block\"]}\r\n            name={\"CodeSpanAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Code showing</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\n\r\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {Italic} from \"@danilandreev/material-docs\";\r\n// or\r\nimport Italic from \"@danilandreev/material-docs/components/Italic\";\r\n`.trim();\r\n\r\nexport default function ItalicAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.ItalicAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"ItalicAPI\"}\r\n            searchTags={[\"italic\", \"font\", \"text\", \"styling\", \"api\"]}\r\n            name={\"ItalicAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Text styling</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\n\r\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {List} from \"@danilandreev/material-docs\";\r\n// or\r\nimport List from \"@danilandreev/material-docs/components/List\";\r\n`.trim();\r\n\r\nexport default function ListAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.ListAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"ListAPI\"}\r\n            searchTags={[\"list\", \"image\", \"styling\", \"api\"]}\r\n            name={\"ListAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Lists</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\n\r\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {DocsMenuItem} from \"@danilandreev/material-docs\";\r\n// or\r\nimport DocsMenuItem from \"@danilandreev/material-docs/components/DocsMenuItem\";\r\n`.trim();\r\n\r\nexport default function DocsMenuItemAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.DocsMenuItemAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"DocsMenuItemAPI\"}\r\n            searchTags={[\"docs\", \"menu\", \"item\", \"api\", \"layout\"]}\r\n            name={\"DocsMenuItemAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Layout</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n    DocsPage,\r\n    Code,\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    List,\r\n    ListItem,\r\n    useLang,\r\n    H1,\r\n    H2,\r\n    H3\r\n} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {Markdown} from \"@danilandreev/material-docs\";\r\n// or\r\nimport Markdown from \"@danilandreev/material-docs/components/Markdown\";\r\n`.trim();\r\n\r\nexport default function MarkdownAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.MarkdownAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"MarkdownAPI\"}\r\n            searchTags={[\"mark\", \"down\", \"parser\", \"interpret\", \"layout\", \"api\"]}\r\n            name={\"MarkdownAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Markdown</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n    DocsPage,\r\n    Code,\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    List,\r\n    ListItem,\r\n    useLang,\r\n    H1,\r\n    H2,\r\n    H3\r\n} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {Table} from \"@danilandreev/material-docs\";\r\n// or\r\nimport Table from \"@danilandreev/material-docs/components/Table\";\r\n`.trim();\r\n\r\nexport default function TableAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.TableAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"TableAPI\"}\r\n            searchTags={[\"table\", \"cell\", \"row\", \"header\", \"api\"]}\r\n            name={\"TableAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Tables</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n    DocsPage,\r\n    Code,\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    List,\r\n    ListItem,\r\n    useLang,\r\n    H1,\r\n    H2,\r\n    H3\r\n} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {TableRow} from \"@danilandreev/material-docs\";\r\n// or\r\nimport TableRow from \"@danilandreev/material-docs/components/TableRow\";\r\n`.trim();\r\n\r\nexport default function TableRowAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.TableRowAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"TableRowAPI\"}\r\n            searchTags={[\"table\", \"cell\", \"row\", \"header\", \"api\"]}\r\n            name={\"TableRowAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Tables</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n    DocsPage,\r\n    Code,\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    List,\r\n    ListItem,\r\n    useLang,\r\n    H1,\r\n    H2,\r\n    H3\r\n} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {TableCell} from \"@danilandreev/material-docs\";\r\n// or\r\nimport TableCell from \"@danilandreev/material-docs/components/TableCell\";\r\n`.trim();\r\n\r\nexport default function TableCellAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.TableCellAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"TableCellAPI\"}\r\n            searchTags={[\"table\", \"cell\", \"row\", \"header\", \"api\"]}\r\n            name={\"TableCellAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Tables</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n    DocsPage,\r\n    Code,\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    List,\r\n    ListItem,\r\n    useLang,\r\n    H1,\r\n    H2,\r\n    H3\r\n} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {TableBody} from \"@danilandreev/material-docs\";\r\n// or\r\nimport TableBody from \"@danilandreev/material-docs/components/TableBody\";\r\n`.trim();\r\n\r\nexport default function TableBodyAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.TableBodyAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"TableBodyAPI\"}\r\n            searchTags={[\"table\", \"cell\", \"row\", \"header\", \"api\", \"body\"]}\r\n            name={\"TableBodyAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Tables</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n    DocsPage,\r\n    Code,\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    List,\r\n    ListItem,\r\n    useLang,\r\n    H1,\r\n    H2,\r\n    H3\r\n} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {TableHead} from \"@danilandreev/material-docs\";\r\n// or\r\nimport TableHead from \"@danilandreev/material-docs/components/TableHead\";\r\n`.trim();\r\n\r\nexport default function TableHeadAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.TableHeadAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"TableHeadAPI\"}\r\n            searchTags={[\"table\", \"cell\", \"row\", \"header\", \"api\", \"head\"]}\r\n            name={\"TableHeadAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Tables</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n    DocsPage,\r\n    Code,\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    List,\r\n    ListItem,\r\n    useLang,\r\n    H1,\r\n    H2,\r\n    H3\r\n} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {Bold} from \"@danilandreev/material-docs\";\r\n// or\r\nimport Bold from \"@danilandreev/material-docs/components/Bold\";\r\n`.trim();\r\n\r\nexport default function BoldAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.BoldAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"BoldAPI\"}\r\n            searchTags={[\"bold\", \"font\", \"text\", \"styling\", \"api\"]}\r\n            name={\"BoldAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Text styling</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n    DocsPage,\r\n    Code,\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    List,\r\n    ListItem,\r\n    useLang,\r\n    H1,\r\n    H2,\r\n    H3\r\n} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {ListItemContained} from \"@danilandreev/material-docs\";\r\n// or\r\nimport ListItemContained from \"@danilandreev/material-docs/components/ListItemContained\";\r\n`.trim();\r\n\r\nexport default function ListItemContainedAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.ListItemContainedAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"ListItemContainedAPI\"}\r\n            searchTags={[\"list\", \"item\", \"contain\", \"api\"]}\r\n            name={\"ListItemContainedAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Lists</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n    DocsPage,\r\n    Code,\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    List,\r\n    ListItem,\r\n    useLang,\r\n    H1,\r\n    H2,\r\n    H3\r\n} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {DocsPages} from \"@danilandreev/material-docs\";\r\n// or\r\nimport DocsPages from \"@danilandreev/material-docs/components/DocsPages\";\r\n`.trim();\r\n\r\nexport default function DocsPagesAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.DocsPagesAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"DocsPagesAPI\"}\r\n            searchTags={[\"docs\", \"pages\", \"container\", \"api\"]}\r\n            name={\"DocsPagesAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Layout</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n    DocsPage,\r\n    Code,\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    List,\r\n    ListItem,\r\n    useLang,\r\n    H1,\r\n    H2,\r\n    H3\r\n} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {DocsMenu} from \"@danilandreev/material-docs\";\r\n// or\r\nimport DocsMenu from \"@danilandreev/material-docs/components/DocsMenu\";\r\n`.trim();\r\n\r\nexport default function DocsMenuAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.DocsMenuAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"DocsMenuAPI\"}\r\n            searchTags={[\"docs\", \"menu\", \"container\", \"api\"]}\r\n            name={\"DocsMenuAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Layout</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n    DocsPage,\r\n    Code,\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    List,\r\n    ListItem,\r\n    useLang,\r\n    H1,\r\n    H2,\r\n    H3\r\n} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {DocsLayout} from \"@danilandreev/material-docs\";\r\n// or\r\nimport DocsLayout from \"@danilandreev/material-docs/components/DocsLayout\";\r\n`.trim();\r\n\r\nexport default function DocsLayoutAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.DocsLayoutAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"DocsLayoutAPI\"}\r\n            searchTags={[\"docs\", \"layout\", \"main\", \"component\", \"api\"]}\r\n            name={\"DocsLayoutAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Layout</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\n\r\nimport {H2, List, ListItem, useLang} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {AutoDocsMenu} from \"@danilandreev/material-docs\";\r\n// or\r\nimport AutoDocsMenu from \"@danilandreev/material-docs/components/AutoDocsMenu\";\r\n`.trim();\r\n\r\nexport default function AutoDocsMenuAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.AutoDocsMenuAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"AutoDocsMenuAPI\"}\r\n            searchTags={[\"auto\", \"menu\", \"docs\", \"system\", \"api\"]}\r\n            name={\"AutoDocsMenuAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Auto menu</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n    DocsPage,\r\n    Code,\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    List,\r\n    ListItem,\r\n    useLang,\r\n    H1,\r\n    H2,\r\n    H3\r\n} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {LanguageSelector} from \"@danilandreev/material-docs\";\r\n// or\r\nimport LanguageSelector from \"@danilandreev/material-docs/components/LanguageSelector\";\r\n`.trim();\r\n\r\nexport default function LanguageSelectorAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.LanguageSelectorAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"LanguageSelectorAPI\"}\r\n            searchTags={[\"language\", \"locale\", \"select\", \"api\"]}\r\n            name={\"LanguageSelectorAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Locales</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport {Link} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n    DocsPage,\r\n    Code,\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    List,\r\n    ListItem,\r\n    useLang,\r\n    H1,\r\n    H2,\r\n    H3\r\n} from \"@danilandreev/material-docs\";\r\nimport ApiPage from \"../../../components/ApiPage\";\r\n\r\nconst importCode = `\r\nimport {SearchField} from \"@danilandreev/material-docs\";\r\n// or\r\nimport SearchField from \"@danilandreev/material-docs/components/SearchField\";\r\n`.trim();\r\n\r\nexport default function SearchFieldAPI() {\r\n    const {lang} = useLang();\r\n    const locale = lang.locale.pages.SearchFieldAPI;\r\n    const localeSpells = lang.locale.common.spells;\r\n    const componentAPILocale = lang.locale.common.ComponentAPI;\r\n\r\n    return (\r\n        <ApiPage\r\n            lang={lang}\r\n            localeName={\"SearchFieldAPI\"}\r\n            searchTags={[\"search\", \"engine\", \"selector\", \"results\", \"api\"]}\r\n            name={\"SearchFieldAPI\"}\r\n            importCode={importCode}\r\n        >\r\n            <H2>Demos</H2>\r\n            <List>\r\n                <ListItem><Link>Search</Link></ListItem>\r\n            </List>\r\n        </ApiPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport List from \"@danilandreev/material-docs/components/List\";\r\nimport ListItem from \"@danilandreev/material-docs/components/ListItem\";\r\nimport {H4} from \"@danilandreev/material-docs/components/Headers\";\r\n\r\nexport default function SimpleList() {\r\n    return (\r\n        <React.Fragment>\r\n            <H4 noTag>Buy</H4>\r\n            <List>\r\n                <ListItem>Carrot x3</ListItem>\r\n                <ListItem>Potato 3kg</ListItem>\r\n                <ListItem>Apples 1kg</ListItem>\r\n                <ListItem>Strawberry 1kg</ListItem>\r\n            </List>\r\n        </React.Fragment>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport List from \"@danilandreev/material-docs/components/List\";\r\nimport ListItem from \"@danilandreev/material-docs/components/ListItem\";\r\nimport ListItemContained from \"@danilandreev/material-docs/components/ListItemContained/ListItemContained\";\r\n\r\nexport default function ListWithNestedItems() {\r\n    return (\r\n        <React.Fragment>\r\n            <List>\r\n                <ListItem>\r\n                    Web\r\n                    <ListItemContained>\r\n                        <ListItem>Front-end</ListItem>\r\n                        <ListItem>Back-end</ListItem>\r\n                    </ListItemContained>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemContained>\r\n                        <ListItem>Engine programmer</ListItem>\r\n                        <ListItem>Level designer</ListItem>\r\n                        <ListItem>Character artist</ListItem>\r\n                    </ListItemContained>\r\n                    Gamedev\r\n                </ListItem>\r\n                <ListItem>Data science</ListItem>\r\n            </List>\r\n        </React.Fragment>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport List from \"@danilandreev/material-docs/components/List\";\r\nimport ListItem from \"@danilandreev/material-docs/components/ListItem\";\r\n\r\nexport default function DecoratedList() {\r\n    return (\r\n        <React.Fragment>\r\n            <List>\r\n                <ListItem type={\"circle\"}>I am list item with circle styling</ListItem>\r\n                <ListItem type={\"square\"}>I am list item with square styling</ListItem>\r\n                <ListItem type={\"upper-roman\"}>I am list item with upper-roman styling</ListItem>\r\n                <ListItem type={\"lower-alpha\"}>I am list item with lower-alpha styling</ListItem>\r\n                <ListItem type={\"none\"}>I am list item without styling</ListItem>\r\n            </List>\r\n        </React.Fragment>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport DocsPage from \"@danilandreev/material-docs/components/DocsPage/DocsPage\";\r\nimport {H1, H2, H3, H4, H5, H6} from \"@danilandreev/material-docs/components/Headers\";\r\nimport DemoWithCode from \"@danilandreev/material-docs/components/DemoWithCode/DemoWithCode\";\r\nimport SimpleList from \"../../../examples/Lists/SimpleList\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ListWithNestedItems from \"../../../examples/Lists/ListWithNestedItems\";\r\nimport DecoratedList from \"../../../examples/Lists/DecoratedList\";\r\nimport List from \"@danilandreev/material-docs/components/List/List\";\r\nimport ListItem from \"@danilandreev/material-docs/components/ListItem/ListItem\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Markdown from \"@danilandreev/material-docs/components/Markdown/Markdown\";\r\n\r\nconst SimpleListCode = `\r\nimport React from \"react\";\r\nimport List from \"@danilandreev/material-docs/components/List\";\r\nimport ListItem from \"@danilandreev/material-docs/components/ListItem\";\r\nimport {H4} from \"@danilandreev/material-docs/components/Headers\";\r\n\r\nexport default function SimpleList() {\r\n    return (\r\n        <React.Fragment>\r\n            <H4 noTag>Buy</H4>\r\n            <List>\r\n                <ListItem>Carrot x3</ListItem>\r\n                <ListItem>Potato 3kg</ListItem>\r\n                <ListItem>Apples 1kg</ListItem>\r\n                <ListItem>Strawberry 1kg</ListItem>\r\n            </List>\r\n        </React.Fragment>\r\n    );\r\n}\r\n`.trim();\r\n\r\nconst ListWithNestedItemsCode = `\r\nimport React from \"react\";\r\nimport List from \"@danilandreev/material-docs/components/List\";\r\nimport ListItem from \"@danilandreev/material-docs/components/ListItem\";\r\nimport ListItemContained from \"@danilandreev/material-docs/components/ListItemContained/ListItemContained\";\r\n\r\nexport default function ListWithNestedItems() {\r\n    return (\r\n        <React.Fragment>\r\n            <List>\r\n                <ListItem>\r\n                    Web\r\n                    <ListItemContained>\r\n                        <ListItem>Front-end</ListItem>\r\n                        <ListItem>Back-end</ListItem>\r\n                    </ListItemContained>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemContained>\r\n                        <ListItem>Engine programmer</ListItem>\r\n                        <ListItem>Level designer</ListItem>\r\n                        <ListItem>Character artist</ListItem>\r\n                    </ListItemContained>\r\n                    Gamedev\r\n                </ListItem>\r\n                <ListItem>Data science</ListItem>\r\n            </List>\r\n        </React.Fragment>\r\n    );\r\n}\r\n`.trim();\r\n\r\nconst DecoratedListCode = `\r\nimport React from \"react\";\r\nimport List from \"@danilandreev/material-docs/components/List\";\r\nimport ListItem from \"@danilandreev/material-docs/components/ListItem\";\r\n\r\nexport default function DecoratedList() {\r\n    return (\r\n        <React.Fragment>\r\n            <List>\r\n                <ListItem type={\"circle\"}>I am list item with circle styling</ListItem>\r\n                <ListItem type={\"square\"}>I am list item with square styling</ListItem>\r\n                <ListItem type={\"upper-roman\"}>I am list item with upper-roman styling</ListItem>\r\n                <ListItem type={\"lower-alpha\"}>I am list item with lower-alpha styling</ListItem>\r\n                <ListItem type={\"none\"}>I am list item without styling</ListItem>\r\n            </List>\r\n        </React.Fragment>\r\n    );\r\n}\r\n`.trim();\r\n\r\nexport default function ListsDemo() {\r\n    return (\r\n        <DocsPage\r\n            name={\"Lists\"}\r\n            searchDescription={\"Demonstration page of lists functional.\"}\r\n            searchLabel={\"Lists\"}\r\n            searchTags={[\"lists\", \"demo\", \"tutorial\"]}\r\n        >\r\n            <H1>Lists</H1>\r\n            <H3 noTag noDivider>Lists can be used to show structured information with list items.</H3>\r\n            <Markdown>\r\n                For example, you want to show people your TO DO list or list of programs you use. Each ```ListItem``` can contain\r\n                its content and nested list items inside ```ListItemContained``` component.\r\n            </Markdown>\r\n            <DemoWithCode code={SimpleListCode} paperContainer theme={\"darcula\"} name={\"Simple list\"} defaultExpanded>\r\n                <Box p={2}>\r\n                    <SimpleList/>\r\n                </Box>\r\n            </DemoWithCode>\r\n\r\n            <Markdown>\r\n                You can create __nested lists__ inside ```ListItem``` component. Just place __nested items__ inside ```ListItemContained``` component in ```ListItem```.\r\n            </Markdown>\r\n            <DemoWithCode code={ListWithNestedItemsCode} paperContainer theme={\"darcula\"} name={\"List with nested items\"}>\r\n                <Box p={2}>\r\n                    <ListWithNestedItems/>\r\n                </Box>\r\n            </DemoWithCode>\r\n\r\n            <Markdown>Lists can be __decorated__ with several points type.</Markdown>\r\n            <DemoWithCode code={DecoratedListCode} paperContainer theme={\"darcula\"} name={\"List with items decoration\"}>\r\n                <Box p={2}>\r\n                    <DecoratedList/>\r\n                </Box>\r\n            </DemoWithCode>\r\n\r\n            <H2>API</H2>\r\n            <List>\r\n                <ListItem><Link>ListItem</Link></ListItem>\r\n                <ListItem><Link>List</Link></ListItem>\r\n                <ListItem><Link>ListItemContained</Link></ListItem>\r\n            </List>\r\n\r\n        </DocsPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport DocsPage from \"@danilandreev/material-docs/components/DocsPage/DocsPage\";\r\nimport {H1, H2, H3, H4, H5, H6} from \"@danilandreev/material-docs/components/Headers\";\r\nimport DemoWithCode from \"@danilandreev/material-docs/components/DemoWithCode/DemoWithCode\";\r\nimport SimpleList from \"../../../examples/Lists/SimpleList\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ListWithNestedItems from \"../../../examples/Lists/ListWithNestedItems\";\r\nimport DecoratedList from \"../../../examples/Lists/DecoratedList\";\r\nimport List from \"@danilandreev/material-docs/components/List/List\";\r\nimport ListItem from \"@danilandreev/material-docs/components/ListItem/ListItem\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Markdown from \"@danilandreev/material-docs/components/Markdown/Markdown\";\r\nimport Code from \"@danilandreev/material-docs/components/Code/Code\";\r\nimport Bold from \"@danilandreev/material-docs/components/Bold/Bold\";\r\n\r\nconst installCode = `\r\n// with npm\r\nnpm install @danilandreev/material-docs\r\n\r\n// with yarn\r\nyarn add @danilandreev/material-docs\r\n`.trim();\r\n\r\nconst MUIInstallationCode = `\r\n// with npm\r\nnpm install @material-ui/core\r\n\r\n// with yarn\r\nyarn add @material-ui/core\r\n`.trim();\r\n\r\nconst MUIIconsInstallationCode = `\r\n// with npm\r\nnpm install @material-ui/icons\r\n\r\n// with yarn\r\nyarn add @material-ui/icons\r\n`.trim();\r\n\r\nexport default function Installation() {\r\n    return (\r\n        <DocsPage\r\n            name={\"Installation\"}\r\n            searchDescription={\"Installation page for MaterialDocs.\"}\r\n            searchLabel={\"Installation\"}\r\n            searchTags={[\"installation\", \"getting\", \"started\"]}\r\n        >\r\n            <H1>Installation</H1>\r\n            <H3 noTag noDivider>Install MaterialDocs - framework for creating documentation.</H3>\r\n            <Markdown>MaterialDocs is available as an [nmp package]()</Markdown>\r\n            <H2>npm</H2>\r\n            <Markdown>To install and save in your ```package.json``` dependencies, run:</Markdown>\r\n            <Code theme={\"darcula\"}>{installCode}</Code>\r\n            <H2>Material-UI</H2>\r\n            <Markdown>Note, that __MaterialDocs__ based on [__Material-UI__]() framework. If you want to deeply customize UI, install:</Markdown>\r\n            <Code theme={\"darcula\"}>{MUIInstallationCode}</Code>\r\n            <H3>Material-UI Icons</H3>\r\n            <Markdown>You can access [__Material-UI__]() svg icons by adding to your ```package.json``` next ___package___:</Markdown>\r\n            <Code theme={\"darcula\"}>{MUIIconsInstallationCode}</Code>\r\n            <H2>Info</H2>\r\n            <Markdown>You can start using MaterialDocs with minimal front-end infrastructure. Package providing a lot of components to create great documentation site.</Markdown>\r\n            <H4>Some steps tu get started</H4>\r\n            <List>\r\n                <ListItem>Read <Bold>Components</Bold> tab and get access to demonstration source code.</ListItem>\r\n                <ListItem>Read <Bold>Component APIs</Bold> tab and get to know how to manipulate with components.</ListItem>\r\n                <ListItem>Read <Bold>Tutorials</Bold> tab to get instructions on different topics.</ListItem>\r\n                <ListItem>Check <Link><Bold>source code on GitHub</Bold></Link> for best code understanding.</ListItem>\r\n            </List>\r\n        </DocsPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\nimport DocsPage from \"@danilandreev/material-docs/components/DocsPage/DocsPage\";\r\nimport {H1, H2, H3, H4, H5, H6} from \"@danilandreev/material-docs/components/Headers\";\r\nimport DemoWithCode from \"@danilandreev/material-docs/components/DemoWithCode/DemoWithCode\";\r\nimport SimpleList from \"../../../examples/Lists/SimpleList\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ListWithNestedItems from \"../../../examples/Lists/ListWithNestedItems\";\r\nimport DecoratedList from \"../../../examples/Lists/DecoratedList\";\r\nimport List from \"@danilandreev/material-docs/components/List/List\";\r\nimport ListItem from \"@danilandreev/material-docs/components/ListItem/ListItem\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Markdown from \"@danilandreev/material-docs/components/Markdown/Markdown\";\r\nimport Code from \"@danilandreev/material-docs/components/Code/Code\";\r\n\r\nconst SimpleLayout = `\r\nimport React from \"react\";\r\nimport {DocsLayout, DocsPages, DocsPage, DocsMenu, DocsMenuItem} from \"@danilandreev/material-docs\";\r\n\r\nexport default function Documentation() {\r\n    return (\r\n        <DocsLayout>\r\n            <DocsMenu>\r\n                <DocsMenuItem textPrimary=\"First Page\" name=\"My first page\"/>\r\n                <DocsMenuItem textPrimary=\"Second Page\" name=\"This page is cooler than first.\"/>\r\n            </DocsMenu>\r\n            <DocsPages>\r\n                <DocsPage name=\"My first page\">Page content...</DocsPage>\r\n                <DocsPage name=\"This page is cooler than first.\">Page content...</DocsPage>\r\n            </DocsPages>\r\n        </DocsLayout>\r\n    );\r\n}\r\n`.trim();\r\n\r\nconst LayoutWithAutoMenu = `\r\nimport React from \"react\";\r\nimport {DocsLayout, DocsPages, DocsPage, DocsMenu, DocsMenuItem, PagesGroup} from \"@danilandreev/material-docs\";\r\n\r\nexport default function Documentation() {\r\n    return (\r\n        <DocsLayout autoMenu>\r\n            <DocsPages>\r\n                <PagesGroup name=\"My page group\">\r\n                    <DocsPage name=\"My first page\">Page content...</DocsPage>\r\n                    <DocsPage name=\"This page is cooler than first.\">Page content...</DocsPage>                \r\n                </PagesGroup>\r\n                <PagesGroup name=\"Another page group\">\r\n                    <DocsPage name=\"Here we are\">Page content...</DocsPage>\r\n                    <DocsPage name=\"Riding the sky\">Page content...</DocsPage>                \r\n                </PagesGroup>\r\n                <DocsPage name=\"I am in the root group\">Page content...</DocsPage>                \r\n            </DocsPages>\r\n        </DocsLayout>\r\n    );\r\n}\r\n`.trim();\r\n\r\nexport default function LayoutDemo() {\r\n    return (\r\n        <DocsPage\r\n            name={\"Layout\"}\r\n            searchDescription={\"Demonstration page of layout functional.\"}\r\n            searchLabel={\"Layout\"}\r\n            searchTags={[\"docs\", \"layout\", \"tutorial\", \"page\", \"menu\", \"search\", \"locale\", \"lang\"]}\r\n        >\r\n            <H1>Layout</H1>\r\n            <H3 noTag noDivider>Layout - is a core of MaterialDocs.</H3>\r\n            <Markdown>\r\n                ```DocsLayout``` component contains _locale_ information, _search_ context and lot of technical data. __Material Docs__ starts here.\r\n            </Markdown>\r\n            <H3 noDivider>Simple layout</H3>\r\n            <Code theme={\"darcula\"}>{SimpleLayout}</Code>\r\n            <Markdown>\r\n                This code shows how to create simple layout. __Page names__ will be automatically converted to __routes__, so give normal name for pages.\r\n                ```DocsMenuItem``` prop ___name___ is a page identifier.\r\n            </Markdown>\r\n            <H3 noDivider>Layout with auto menu</H3>\r\n            <Code theme={\"darcula\"}>{LayoutWithAutoMenu}</Code>\r\n            <Markdown>\r\n                Here is ```DocsLayout``` with automated menu. You can add __pages__ and __groups__ in other __groups__ to create\r\n                hierarchical menu structure.\r\n            </Markdown>\r\n\r\n\r\n\r\n        </DocsPage>\r\n    );\r\n}","/*\r\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\r\n * Copyright (C) 2020.\r\n */\r\n\r\nimport React from \"react\";\r\n\r\nimport DocsPageDemo from \"./pages/Components/DocsPageDemo\";\r\n\r\n// API pages\r\nimport DocsPageAPI from \"./pages/APIs/DocsPageAPI\";\r\nimport DemoWithCodeAPI from \"./pages/APIs/DemoWithCodeAPI\";\r\nimport CodeAPI from \"./pages/APIs/CodeAPI\";\r\nimport PagesGroupAPI from \"./pages/APIs/PagesGroupAPI\";\r\nimport ImageAPI from \"./pages/APIs/ImageAPI\";\r\nimport ListItemAPI from \"./pages/APIs/ListItemAPI\";\r\nimport ExpansionCodeAPI from \"./pages/APIs/ExpansionCodeAPI\";\r\nimport BlockAPI from \"./pages/APIs/BlockAPI\";\r\nimport CodeSpanAPI from \"./pages/APIs/CodeSpanAPI\";\r\nimport ItalicAPI from \"./pages/APIs/ItalicAPI\";\r\nimport ListAPI from \"./pages/APIs/ListAPI\";\r\nimport DocsMenuItemAPI from \"./pages/APIs/DocsMenuItemAPI\";\r\nimport MarkdownAPI from \"./pages/APIs/MarkdownAPI\";\r\nimport TableAPI from \"./pages/APIs/TableAPI\";\r\nimport TableRowAPI from \"./pages/APIs/TableRowAPI\";\r\nimport TableCellAPI from \"./pages/APIs/TableCellAPI\";\r\nimport TableBodyAPI from \"./pages/APIs/TableBodyAPI\";\r\nimport TableHeadAPI from \"./pages/APIs/TableHeadAPI\";\r\nimport BoldAPI from \"./pages/APIs/BoldAPI\";\r\nimport ListItemContainedAPI from \"./pages/APIs/ListItemContainedAPI\";\r\nimport DocsPagesAPI from \"./pages/APIs/DocsPagesAPI\";\r\nimport DocsMenuAPI from \"./pages/APIs/DocsMenuAPI\";\r\nimport DocsLayoutAPI from \"./pages/APIs/DocsLayoutAPI\";\r\n\r\nimport AutoDocsMenuAPI from \"./pages/APIs/AutoDocsMenuAPI\";\r\nimport LanguageSelectorAPI from \"./pages/APIs/LanguageSelectorAPI\";\r\nimport SearchFieldAPI from \"./pages/APIs/SearchFieldAPI\";\r\n\r\n\r\nimport {DocsLayout, DocsPages, PagesGroup} from \"@danilandreev/material-docs\";\r\n\r\nimport RU from \"./locale/RU.json\";\r\nimport EN from \"./locale/EN.json\";\r\nimport ListsDemo from \"./pages/Components/ListsDemo\";\r\nimport Installation from \"./pages/GettingStarted/Installation\";\r\nimport LayoutDemo from \"./pages/Components/LayoutDemo\";\r\n\r\n\r\nexport default function Documentation() {\r\n    return (\r\n        <DocsLayout autoMenu defaultLang={EN} langs={[EN, RU]} basename={process.env.PUBLIC_URL} autoMenuDense>\r\n            <DocsPages>\r\n                <PagesGroup name={\"Getting started\"}>\r\n                    <Installation/>\r\n                </PagesGroup>\r\n                <PagesGroup name={\"Components\"}>\r\n                    <DocsPageDemo/>\r\n                    <ListsDemo/>\r\n                    <LayoutDemo/>\r\n                </PagesGroup>\r\n                <PagesGroup name={\"Component APIs\"}>\r\n                    <DocsLayoutAPI/>\r\n                    <DocsPageAPI/>\r\n                    <DemoWithCodeAPI/>\r\n                    <CodeAPI />\r\n                    <PagesGroupAPI/>\r\n                    <ImageAPI/>\r\n                    <ListItemAPI/>\r\n                    <ExpansionCodeAPI/>\r\n                    <BlockAPI/>\r\n                    <CodeSpanAPI/>\r\n                    <ItalicAPI/>\r\n                    <BoldAPI/>\r\n                    <ListAPI/>\r\n                    <DocsMenuItemAPI/>\r\n                    <MarkdownAPI/>\r\n                    <TableAPI/>\r\n                    <TableRowAPI/>\r\n                    <TableCellAPI/>\r\n                    <TableBodyAPI/>\r\n                    <TableHeadAPI/>\r\n                    <ListItemContainedAPI/>\r\n                    <DocsPagesAPI/>\r\n                    <DocsMenuAPI/>\r\n                    <PagesGroup name={\"System components\"}>\r\n                        <AutoDocsMenuAPI/>\r\n                        <LanguageSelectorAPI/>\r\n                        <SearchFieldAPI/>\r\n                    </PagesGroup>\r\n                </PagesGroup>\r\n                <PagesGroup name={\"Tutorials\"}>\r\n\r\n                </PagesGroup>\r\n            </DocsPages>\r\n        </DocsLayout>\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Documentation from \"./docs-app/Documentation\";\r\n// import ExampleDocumentation from \"./example/ExampleDocumentation\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      {/*<ExampleDocumentation/>*/}\r\n      <Documentation/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}