{"version":3,"sources":["serviceWorker.js","docs-app/pages/Components/DocsPageDemo/index.js","docs-app/pages/APIs/DocsPageAPI/index.js","docs-app/pages/APIs/DemoWithCodeAPI/index.js","docs-app/pages/APIs/CodeAPI/index.js","docs-app/pages/APIs/PagesGroupAPI/index.js","docs-app/pages/APIs/ImageAPI/index.js","docs-app/pages/APIs/ListItemAPI/index.js","docs-app/pages/APIs/ExpansionCodeAPI/index.js","docs-app/Documentation.js","index.js"],"names":["Boolean","window","location","hostname","match","DocsPageDemo","name","searchDescription","noDivider","importCode","trim","DocsPageAPI","lang","useLang","locale","pages","localeSpells","common","spells","componentAPILocale","ComponentAPI","searchTags","pageSearchDescription","noTag","pageAbout","Import","language","theme","Typography","importDifferenceText","text1","Link","href","link1","text2","ComponentNameHeader","ComponentNameText","propName","propType","propDefault","propDescription","props","searchLabel","noGenerateAutoSearch","noAutoMenu","ruleName","ruleDescription","css","root","contentItem","contentItemActive","contentLink","copyright","customizationText","customizationRule","customizationClass","customizationTheme","customizationFooterText","DemoWithCodeAPI","code","defaultExpanded","paperContainer","actions","collapse","toolbar","menuButtonLink","CodeAPI","children","highlighterContainer","PagesGroupAPI","getData","noCssText","ImageAPI","src","alt","fullWidth","ListItemAPI","type","dense","typeCircle","typeSquare","typeRoman","typeAlpha","typeNone","list","ExpansionCodeAPI","demoCode","collapsedCode","codeName","Documentation","autoMenu","defaultLang","EN","langs","RU","basename","process","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.77ab649f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {DocsPage, H1, H2, H3, Markdown} from \"@danilandreev/material-docs\";\n\nconst pageMarkdown = `\n# Hello, i ___italic text___ am header 1\n## And me is header 2\n# heading no 1\n##### heading no 5\n> tip field  \n> sdfsf  \n> sdafaf  \n\nI am a simple text \n\n* list lol1 \\`\\`\\`import lol from lol\\`\\`\\` hello darkness\n* list lol2\n  * list nested1\n  * list nested2\n  \n\\`\\`\\`javascript\n//I am the code\nexport default function Lol(1) {\n    return null;\n}\n\n\\`\\`\\`\n\n\\`\\`\\` I am inline code \\`\\`\\`\n\n[I am link __sdfsf__](https://sdfsf.com.ua)  \n[I am an another link](https://sdfsf.com.ua)\n\n__bold text__  \n___bold italic___  \n_italic_\n\n![I am picture](https://static01.nyt.com/images/2018/10/04/magazine/04blackhole1/04blackhole1-articleLarge-v3.jpg?quality=75&auto=webp&disable=upscale)\n\n---\n\n| Name          | Type     | Default | Description                             |\n|---------------|----------|---------|-----------------------------------------|\n| button        | boolean  |         | if __true__, row will be clickable.     |\n| onClick       | function |         | callback, called on click event.        |\n| onDoubleClick | function |         | callback, called on double click event. |\n| children      | node     |         | The content of element                  |\n\n`;\n\nconst pageMarkdown2 = `\n# FlexibleTable API\n### The API documentation of the FlexibleTable React component. Learn more about the props and the CSS customization points.\n\n## Import\n\\`\\`\\`jsx\nimport {FlexibleTable} from \"@danilandreev/mui-table-flexible\";\n//or \nimport FlexibleTable from \"@danilandreev/mui-table-flexible/dist/organizms/FlexibleTable\";\n\\`\\`\\`\nYou can learn more about the difference by [reading this guide](https://material-ui.com/guides/minimizing-bundle-size/).\n## Props\n| Name          | Type     | Default | Description                             |\n|---------------|----------|---------|-----------------------------------------|\n| button        | boolean  |         | if true, row will be clickable.         |\n| onClick       | function |         | callback, called on click event.        |\n| onDoubleClick | function |         | callback, called on double click event. |\n| children      | node     |         | The content of element                  |\n\n\nThe __ref__ is forwarded to the root element.\n\nAny other props supplied will be provided to the root element (native element).\n\n## CSS\n| Rule name      | Description                                  |\n|----------------|----------------------------------------------|\n| root           | Styles applied to the root element.          |\n| tableContainer | Styles applied to the inner table container. |\n| head           | Styles applied to the table head element.    |\n| body           | Styles applied to the table body element.    |\n\nYou can override the style of the component thanks to one of these customization points:\n* With a rule name of the [__classes__ object prop](https://material-ui.com/customization/components/#overriding-styles-with-classes).\n* With a [global class name](https://material-ui.com/customization/components/#overriding-styles-with-global-class-names).\n\nIf that's not sufficient, you can check the [implementation of the component](https://github.com/DanilAndreev/mui-table-flexible/blob/master/src/lib/organizms/FlexibleTable/FlexibleTable.tsx) for more detail.\n## Demos\n* [FlexibleTable](/DanilAndreev/mui-table-flexible/wiki/FlexibleTable)\n`;\n\nexport default function DocsPageDemo() {\n    return(\n        <DocsPage name={\"DocsPages\"} searchDescription={\"Docs pages sdfsfs\"}>\n            <H1 noDivider>DocsPages</H1>\n            <H3>DocsPages description</H3>\n            <Markdown>{pageMarkdown2}</Markdown>\n\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\n\nconst importCode = `\nimport {DocsPage} from \"@danilandreev/material-docs\";\n// or\nimport DocsPage from \"@danilandreev/material-docs/components/DocsPage\";\n`.trim();\n\nexport default function DocsPageAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.DocsPageAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n    return (\n        <DocsPage\n            name={\"DocsPage API\"}\n            searchTags={[\"docs\", \"page\", \"api\"]}\n            searchDescription={locale.pageSearchDescription}\n        >\n            <H1 noDivider>DocsPage API</H1>\n            <H3 noDivider noTag>{locale.pageAbout}</H3>\n            <H2>{localeSpells.Import}</H2>\n            <Code language={\"javascript\"} theme={\"darcula\"}>\n                {importCode}\n            </Code>\n            <Typography>\n                {componentAPILocale.importDifferenceText.text1}&nbsp;\n                <Link href={\"https://material-ui.com/guides/minimizing-bundle-size/\"}>\n                    {componentAPILocale.importDifferenceText.link1}\n                </Link>\n                {componentAPILocale.importDifferenceText.text2}\n            </Typography>\n            <H2>{componentAPILocale.ComponentNameHeader}</H2>\n            {locale.ComponentNameText}\n            <H2>Props</H2>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{componentAPILocale.propName}</TableCell>\n                        <TableCell>{componentAPILocale.propType}</TableCell>\n                        <TableCell>{componentAPILocale.propDefault}</TableCell>\n                        <TableCell>{componentAPILocale.propDescription}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>name</TableCell>\n                        <TableCell>string</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>searchTags</TableCell>\n                        <TableCell>string[]</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.searchTags}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>searchLabel</TableCell>\n                        <TableCell>string</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.searchLabel}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>searchDescription</TableCell>\n                        <TableCell>string</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.searchDescription}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>noGenerateAutoSearch</TableCell>\n                        <TableCell>boolean</TableCell>\n                        <TableCell>false</TableCell>\n                        <TableCell>{locale.props.noGenerateAutoSearch}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>noAutoMenu</TableCell>\n                        <TableCell>boolean</TableCell>\n                        <TableCell>false</TableCell>\n                        <TableCell>{locale.props.noAutoMenu}</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n            <H2>CSS</H2>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{componentAPILocale.ruleName}</TableCell>\n                        <TableCell>{componentAPILocale.ruleDescription}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>root</TableCell>\n                        <TableCell>{locale.css.root}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>contentItem</TableCell>\n                        <TableCell>{locale.css.contentItem}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>contentItemActive</TableCell>\n                        <TableCell>{locale.css.contentItemActive}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>contentLink</TableCell>\n                        <TableCell>{locale.css.contentLink}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>copyright</TableCell>\n                        <TableCell>{locale.css.copyright}</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n            {componentAPILocale.customizationText}\n            <List>\n                <ListItem>\n                    {componentAPILocale.customizationRule}&nbsp;\n                    <Link href={\"https://material-ui.com/customization/components/#overriding-styles-with-classes\"}>\n                        classes object prop\n                    </Link>\n                    .\n                </ListItem>\n                <ListItem>\n                    {componentAPILocale.customizationClass}&nbsp;\n                    <Link\n                        href={\"https://material-ui.com/customization/components/#overriding-styles-with-global-class-names\"}>\n                        global class name\n                    </Link>\n                    .\n                </ListItem>\n                <ListItem>\n                    {componentAPILocale.customizationTheme}&nbsp;\n                    <Link href={\"https://material-ui.com/customization/globals/#css\"}>\n                        overrides property\n                    </Link>\n                    .\n                </ListItem>\n            </List>\n            {componentAPILocale.customizationFooterText}\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>DocsPages</Link></ListItem>\n            </List>\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\n\nconst importCode = `\nimport {DemoWithCode} from \"@danilandreev/material-docs\";\n// or\nimport DemoWithCode from \"@danilandreev/material-docs/components/DemoWithCode\";\n`.trim();\n\nexport default function DemoWithCodeAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.DemoWithCodeAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n    return (\n        <DocsPage\n            name={\"DemoWithCode API\"}\n            searchTags={[\"demo\", \"with\", \"code\", \"api\"]}\n            searchDescription={locale.pageSearchDescription}\n        >\n            <H1 noDivider>DemoWithCode API</H1>\n            <H3 noDivider noTag>{locale.pageAbout}</H3>\n            <H2>{localeSpells.Import}</H2>\n            <Code language={\"javascript\"} theme={\"darcula\"}>\n                {importCode}\n            </Code>\n            <Typography>\n                {componentAPILocale.importDifferenceText.text1}&nbsp;\n                <Link href={\"https://material-ui.com/guides/minimizing-bundle-size/\"}>\n                    {componentAPILocale.importDifferenceText.link1}\n                </Link>\n                {componentAPILocale.importDifferenceText.text2}\n            </Typography>\n            <H2>{componentAPILocale.ComponentNameHeader}</H2>\n            {locale.ComponentNameText}\n            <H2>Props</H2>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{componentAPILocale.propName}</TableCell>\n                        <TableCell>{componentAPILocale.propType}</TableCell>\n                        <TableCell>{componentAPILocale.propDefault}</TableCell>\n                        <TableCell>{componentAPILocale.propDescription}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>name</TableCell>\n                        <TableCell>string</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>code</TableCell>\n                        <TableCell>string</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>defaultExpanded</TableCell>\n                        <TableCell>boolean</TableCell>\n                        <TableCell>false</TableCell>\n                        <TableCell>{locale.props.defaultExpanded}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>noTag</TableCell>\n                        <TableCell>boolean</TableCell>\n                        <TableCell>false</TableCell>\n                        <TableCell>{locale.props.noTag}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>paperContainer</TableCell>\n                        <TableCell>boolean</TableCell>\n                        <TableCell>false</TableCell>\n                        <TableCell>{locale.props.paperContainer}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>actions</TableCell>\n                        <TableCell>DemoCodeAction[]</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.actions}</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n            <H2>CSS</H2>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{componentAPILocale.ruleName}</TableCell>\n                        <TableCell>{componentAPILocale.ruleDescription}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>root</TableCell>\n                        <TableCell>{locale.css.root}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>collapse</TableCell>\n                        <TableCell>{locale.css.collapse}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>toolbar</TableCell>\n                        <TableCell>{locale.css.toolbar}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>paperContainer</TableCell>\n                        <TableCell>{locale.css.paperContainer}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>menuButtonLink</TableCell>\n                        <TableCell>{locale.css.menuButtonLink}</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n            {componentAPILocale.customizationText}\n            <List>\n                <ListItem>\n                    {componentAPILocale.customizationRule}&nbsp;\n                    <Link href={\"https://material-ui.com/customization/components/#overriding-styles-with-classes\"}>\n                        classes object prop\n                    </Link>\n                    .\n                </ListItem>\n                <ListItem>\n                    {componentAPILocale.customizationClass}&nbsp;\n                    <Link\n                        href={\"https://material-ui.com/customization/components/#overriding-styles-with-global-class-names\"}>\n                        global class name\n                    </Link>\n                    .\n                </ListItem>\n                <ListItem>\n                    {componentAPILocale.customizationTheme}&nbsp;\n                    <Link href={\"https://material-ui.com/customization/globals/#css\"}>\n                        overrides property\n                    </Link>\n                    .\n                </ListItem>\n            </List>\n            {componentAPILocale.customizationFooterText}\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Code showers</Link></ListItem>\n            </List>\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\n\nconst importCode = `\nimport {Code} from \"@danilandreev/material-docs\";\n// or\nimport Code from \"@danilandreev/material-docs/components/Code\";\n`.trim();\n\nexport default function CodeAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.CodeAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n    return (\n        <DocsPage\n            name={\"Code API\"}\n            searchTags={[\"code\", \"highlight\", \"language\", \"api\"]}\n            searchDescription={locale.pageSearchDescription}\n        >\n            <H1 noDivider>Code API</H1>\n            <H3 noDivider noTag>{locale.pageAbout}</H3>\n            <H2>{localeSpells.Import}</H2>\n            <Code language={\"javascript\"} theme={\"darcula\"}>\n                {importCode}\n            </Code>\n            <Typography>\n                {componentAPILocale.importDifferenceText.text1}&nbsp;\n                <Link href={\"https://material-ui.com/guides/minimizing-bundle-size/\"}>\n                    {componentAPILocale.importDifferenceText.link1}\n                </Link>\n                {componentAPILocale.importDifferenceText.text2}\n            </Typography>\n            <H2>{componentAPILocale.ComponentNameHeader}</H2>\n            {locale.ComponentNameText}\n            <H2>Props</H2>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{componentAPILocale.propName}</TableCell>\n                        <TableCell>{componentAPILocale.propType}</TableCell>\n                        <TableCell>{componentAPILocale.propDefault}</TableCell>\n                        <TableCell>{componentAPILocale.propDescription}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>language</TableCell>\n                        <TableCell>string</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.language}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>theme</TableCell>\n                        <TableCell>string</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.theme}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>children</TableCell>\n                        <TableCell>string</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.children}</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n            <H2>CSS</H2>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{componentAPILocale.ruleName}</TableCell>\n                        <TableCell>{componentAPILocale.ruleDescription}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>root</TableCell>\n                        <TableCell>{locale.css.root}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>highlighterContainer</TableCell>\n                        <TableCell>{locale.css.highlighterContainer}</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n            {componentAPILocale.customizationText}\n            <List>\n                <ListItem>\n                    {componentAPILocale.customizationRule}&nbsp;\n                    <Link href={\"https://material-ui.com/customization/components/#overriding-styles-with-classes\"}>\n                        classes object prop\n                    </Link>\n                    .\n                </ListItem>\n                <ListItem>\n                    {componentAPILocale.customizationClass}&nbsp;\n                    <Link\n                        href={\"https://material-ui.com/customization/components/#overriding-styles-with-global-class-names\"}>\n                        global class name\n                    </Link>\n                    .\n                </ListItem>\n                <ListItem>\n                    {componentAPILocale.customizationTheme}&nbsp;\n                    <Link href={\"https://material-ui.com/customization/globals/#css\"}>\n                        overrides property\n                    </Link>\n                    .\n                </ListItem>\n            </List>\n            {componentAPILocale.customizationFooterText}\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Code showers</Link></ListItem>\n            </List>\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\n\nconst importCode = `\nimport {PagesGroup} from \"@danilandreev/material-docs\";\n// or\nimport PagesGroup from \"@danilandreev/material-docs/components/PagesGroup\";\n`.trim();\n\nexport default function PagesGroupAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.PagesGroupAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n    return (\n        <DocsPage\n            name={\"PagesGroup API\"}\n            searchTags={[\"page\", \"group\", \"gather\", \"container\"]}\n            searchDescription={locale.pageSearchDescription}\n        >\n            <H1 noDivider>PagesGroup API</H1>\n            <H3 noDivider noTag>{locale.pageAbout}</H3>\n            <H2>{localeSpells.Import}</H2>\n            <Code language={\"javascript\"} theme={\"darcula\"}>\n                {importCode}\n            </Code>\n            <Typography>\n                {componentAPILocale.importDifferenceText.text1}&nbsp;\n                <Link href={\"https://material-ui.com/guides/minimizing-bundle-size/\"}>\n                    {componentAPILocale.importDifferenceText.link1}\n                </Link>\n                {componentAPILocale.importDifferenceText.text2}\n            </Typography>\n            <H2>{componentAPILocale.ComponentNameHeader}</H2>\n            {locale.ComponentNameText}\n            <H2>Props</H2>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{componentAPILocale.propName}</TableCell>\n                        <TableCell>{componentAPILocale.propType}</TableCell>\n                        <TableCell>{componentAPILocale.propDefault}</TableCell>\n                        <TableCell>{componentAPILocale.propDescription}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>name</TableCell>\n                        <TableCell>string</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>getData</TableCell>\n                        <TableCell>(data: PagesGroupData): void</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.getData}</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n            <H2>CSS</H2>\n            {locale.noCssText}\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Code showers</Link></ListItem>\n            </List>\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\n\nconst importCode = `\nimport {DemoWithCode} from \"@danilandreev/material-docs\";\n// or\nimport DemoWithCode from \"@danilandreev/material-docs/components/DemoWithCode\";\n`.trim();\n\nexport default function ImageAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.ImageAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n    return (\n        <DocsPage\n            name={\"Image API\"}\n            searchTags={[\"demo\", \"with\", \"code\", \"api\"]}\n            searchDescription={locale.pageSearchDescription}\n        >\n            <H1 noDivider>Image API</H1>\n            <H3 noDivider noTag>{locale.pageAbout}</H3>\n            <H2>{localeSpells.Import}</H2>\n            <Code language={\"javascript\"} theme={\"darcula\"}>\n                {importCode}\n            </Code>\n            <Typography>\n                {componentAPILocale.importDifferenceText.text1}&nbsp;\n                <Link href={\"https://material-ui.com/guides/minimizing-bundle-size/\"}>\n                    {componentAPILocale.importDifferenceText.link1}\n                </Link>\n                {componentAPILocale.importDifferenceText.text2}\n            </Typography>\n            <H2>{componentAPILocale.ComponentNameHeader}</H2>\n            {locale.ComponentNameText}\n            <H2>Props</H2>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{componentAPILocale.propName}</TableCell>\n                        <TableCell>{componentAPILocale.propType}</TableCell>\n                        <TableCell>{componentAPILocale.propDefault}</TableCell>\n                        <TableCell>{componentAPILocale.propDescription}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>src</TableCell>\n                        <TableCell>string</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.src}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>alt</TableCell>\n                        <TableCell>string</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.alt}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>fullWidth</TableCell>\n                        <TableCell>boolean</TableCell>\n                        <TableCell>false</TableCell>\n                        <TableCell>{locale.props.fullWidth}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>children</TableCell>\n                        <TableCell>node</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.children}</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n            <H2>CSS</H2>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{componentAPILocale.ruleName}</TableCell>\n                        <TableCell>{componentAPILocale.ruleDescription}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>root</TableCell>\n                        <TableCell>{locale.css.root}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>fullWidth</TableCell>\n                        <TableCell>{locale.css.fullWidth}</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n            {componentAPILocale.customizationText}\n            <List>\n                <ListItem>\n                    {componentAPILocale.customizationRule}&nbsp;\n                    <Link href={\"https://material-ui.com/customization/components/#overriding-styles-with-classes\"}>\n                        classes object prop\n                    </Link>\n                    .\n                </ListItem>\n                <ListItem>\n                    {componentAPILocale.customizationClass}&nbsp;\n                    <Link\n                        href={\"https://material-ui.com/customization/components/#overriding-styles-with-global-class-names\"}>\n                        global class name\n                    </Link>\n                    .\n                </ListItem>\n                <ListItem>\n                    {componentAPILocale.customizationTheme}&nbsp;\n                    <Link href={\"https://material-ui.com/customization/globals/#css\"}>\n                        overrides property\n                    </Link>\n                    .\n                </ListItem>\n            </List>\n            {componentAPILocale.customizationFooterText}\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Images</Link></ListItem>\n            </List>\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\n\nconst importCode = `\nimport {DemoWithCode} from \"@danilandreev/material-docs\";\n// or\nimport DemoWithCode from \"@danilandreev/material-docs/components/DemoWithCode\";\n`.trim();\n\nexport default function ListItemAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.ListItemAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n    return (\n        <DocsPage\n            name={\"ListItem API\"}\n            searchTags={[\"demo\", \"with\", \"code\", \"api\"]}\n            searchDescription={locale.pageSearchDescription}\n        >\n            <H1 noDivider>ListItem API</H1>\n            <H3 noDivider noTag>{locale.pageAbout}</H3>\n            <H2>{localeSpells.Import}</H2>\n            <Code language={\"javascript\"} theme={\"darcula\"}>\n                {importCode}\n            </Code>\n            <Typography>\n                {componentAPILocale.importDifferenceText.text1}&nbsp;\n                <Link href={\"https://material-ui.com/guides/minimizing-bundle-size/\"}>\n                    {componentAPILocale.importDifferenceText.link1}\n                </Link>\n                {componentAPILocale.importDifferenceText.text2}\n            </Typography>\n            <H2>{componentAPILocale.ComponentNameHeader}</H2>\n            {locale.ComponentNameText}\n            <H2>Props</H2>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{componentAPILocale.propName}</TableCell>\n                        <TableCell>{componentAPILocale.propType}</TableCell>\n                        <TableCell>{componentAPILocale.propDefault}</TableCell>\n                        <TableCell>{componentAPILocale.propDescription}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>type</TableCell>\n                        <TableCell>\"circle\" | \"square\" | \"upper-roman\" | \"lower-alpha\" | \"none\"</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.type}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>dense</TableCell>\n                        <TableCell>boolean</TableCell>\n                        <TableCell>false</TableCell>\n                        <TableCell>{locale.props.dense}</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n            <H2>CSS</H2>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{componentAPILocale.ruleName}</TableCell>\n                        <TableCell>{componentAPILocale.ruleDescription}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>root</TableCell>\n                        <TableCell>{locale.css.root}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>typeCircle</TableCell>\n                        <TableCell>{locale.css.typeCircle}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>typeSquare</TableCell>\n                        <TableCell>{locale.css.typeSquare}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>typeRoman</TableCell>\n                        <TableCell>{locale.css.typeRoman}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>typeAlpha</TableCell>\n                        <TableCell>{locale.css.typeAlpha}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>typeNone</TableCell>\n                        <TableCell>{locale.css.typeNone}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>list</TableCell>\n                        <TableCell>{locale.css.list}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>dense</TableCell>\n                        <TableCell>{locale.css.dense}</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n            {componentAPILocale.customizationText}\n            <List>\n                <ListItem>\n                    {componentAPILocale.customizationRule}&nbsp;\n                    <Link href={\"https://material-ui.com/customization/components/#overriding-styles-with-classes\"}>\n                        classes object prop\n                    </Link>\n                    .\n                </ListItem>\n                <ListItem>\n                    {componentAPILocale.customizationClass}&nbsp;\n                    <Link\n                        href={\"https://material-ui.com/customization/components/#overriding-styles-with-global-class-names\"}>\n                        global class name\n                    </Link>\n                    .\n                </ListItem>\n                <ListItem>\n                    {componentAPILocale.customizationTheme}&nbsp;\n                    <Link href={\"https://material-ui.com/customization/globals/#css\"}>\n                        overrides property\n                    </Link>\n                    .\n                </ListItem>\n            </List>\n            {componentAPILocale.customizationFooterText}\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Lists</Link></ListItem>\n            </List>\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n    DocsPage,\n    Code,\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    List,\n    ListItem,\n    useLang,\n    H1,\n    H2,\n    H3\n} from \"@danilandreev/material-docs\";\n\nconst importCode = `\nimport {ExpansionCode} from \"@danilandreev/material-docs\";\n// or\nimport ExpansionCode from \"@danilandreev/material-docs/components/ExpansionCode\";\n`.trim();\n\nexport default function ExpansionCodeAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.ExpansionCodeAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n    return (\n        <DocsPage\n            name={\"ExpansionCode API\"}\n            searchTags={[\"demo\", \"with\", \"code\", \"api\"]}\n            searchDescription={locale.pageSearchDescription}\n        >\n            <H1 noDivider>ExpansionCode API</H1>\n            <H3 noDivider noTag>{locale.pageAbout}</H3>\n            <H2>{localeSpells.Import}</H2>\n            <Code language={\"javascript\"} theme={\"darcula\"}>\n                {importCode}\n            </Code>\n            <Typography>\n                {componentAPILocale.importDifferenceText.text1}&nbsp;\n                <Link href={\"https://material-ui.com/guides/minimizing-bundle-size/\"}>\n                    {componentAPILocale.importDifferenceText.link1}\n                </Link>\n                {componentAPILocale.importDifferenceText.text2}\n            </Typography>\n            <H2>{componentAPILocale.ComponentNameHeader}</H2>\n            {locale.ComponentNameText}\n            <H2>Props</H2>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{componentAPILocale.propName}</TableCell>\n                        <TableCell>{componentAPILocale.propType}</TableCell>\n                        <TableCell>{componentAPILocale.propDefault}</TableCell>\n                        <TableCell>{componentAPILocale.propDescription}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>name</TableCell>\n                        <TableCell>string</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>noTag</TableCell>\n                        <TableCell>boolean</TableCell>\n                        <TableCell>false</TableCell>\n                        <TableCell>{locale.props.noTag}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>demoCode</TableCell>\n                        <TableCell>string</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.demoCode}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>actions</TableCell>\n                        <TableCell>DemoCodeAction[]</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.actions}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>theme</TableCell>\n                        <TableCell>\"light\" | \"dark\" | \"darcula\"</TableCell>\n                        <TableCell>\"light\"</TableCell>\n                        <TableCell>{locale.props.theme}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>language</TableCell>\n                        <TableCell>string</TableCell>\n                        <TableCell>\"javascript\"</TableCell>\n                        <TableCell>{locale.props.language}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>children</TableCell>\n                        <TableCell>string</TableCell>\n                        <TableCell></TableCell>\n                        <TableCell>{locale.props.children}</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n            <H2>CSS</H2>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{componentAPILocale.ruleName}</TableCell>\n                        <TableCell>{componentAPILocale.ruleDescription}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>root</TableCell>\n                        <TableCell>{locale.css.root}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>collapsedCode</TableCell>\n                        <TableCell>{locale.css.collapsedCode}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>collapse</TableCell>\n                        <TableCell>{locale.css.collapse}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>toolbar</TableCell>\n                        <TableCell>{locale.css.toolbar}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>codeName</TableCell>\n                        <TableCell>{locale.css.codeName}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>menuButtonLink</TableCell>\n                        <TableCell>{locale.css.menuButtonLink}</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n            {componentAPILocale.customizationText}\n            <List>\n                <ListItem>\n                    {componentAPILocale.customizationRule}&nbsp;\n                    <Link href={\"https://material-ui.com/customization/components/#overriding-styles-with-classes\"}>\n                        classes object prop\n                    </Link>\n                    .\n                </ListItem>\n                <ListItem>\n                    {componentAPILocale.customizationClass}&nbsp;\n                    <Link\n                        href={\"https://material-ui.com/customization/components/#overriding-styles-with-global-class-names\"}>\n                        global class name\n                    </Link>\n                    .\n                </ListItem>\n                <ListItem>\n                    {componentAPILocale.customizationTheme}&nbsp;\n                    <Link href={\"https://material-ui.com/customization/globals/#css\"}>\n                        overrides property\n                    </Link>\n                    .\n                </ListItem>\n            </List>\n            {componentAPILocale.customizationFooterText}\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Lists</Link></ListItem>\n            </List>\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport DocsPageDemo from \"./pages/Components/DocsPageDemo\";\nimport DocsPageAPI from \"./pages/APIs/DocsPageAPI\";\nimport DemoWithCodeAPI from \"./pages/APIs/DemoWithCodeAPI\";\nimport CodeAPI from \"./pages/APIs/CodeAPI\";\nimport PagesGroupAPI from \"./pages/APIs/PagesGroupAPI\";\nimport ImageAPI from \"./pages/APIs/ImageAPI\";\nimport ListItemAPI from \"./pages/APIs/ListItemAPI\";\n\nimport {DocsLayout, DocsPages, PagesGroup} from \"@danilandreev/material-docs\";\n\nimport RU from \"./locale/RU.json\";\nimport EN from \"./locale/EN.json\";\nimport ExpansionCodeAPI from \"./pages/APIs/ExpansionCodeAPI\";\n\n\nexport default function Documentation() {\n    return (\n        <DocsLayout autoMenu defaultLang={EN} langs={[EN, RU]} basename={process.env.PUBLIC_URL}>\n            <DocsPages>\n                <PagesGroup name={\"Getting started\"}>\n\n                </PagesGroup>\n                <PagesGroup name={\"Components\"}>\n                    <DocsPageDemo/>\n                </PagesGroup>\n                <PagesGroup name={\"APIs\"}>\n                    <DocsPageAPI/>\n                    <DemoWithCodeAPI/>\n                    <CodeAPI />\n                    <PagesGroupAPI/>\n                    <ImageAPI/>\n                    <ListItemAPI/>\n                    <ExpansionCodeAPI/>\n                </PagesGroup>\n            </DocsPages>\n        </DocsLayout>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Documentation from \"./docs-app/Documentation\";\n// import ExampleDocumentation from \"./example/ExampleDocumentation\";\n\nReactDOM.render(\n  <React.StrictMode>\n      {/*<ExampleDocumentation/>*/}\n      <Documentation/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}