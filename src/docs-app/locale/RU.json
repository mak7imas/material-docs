{
  "name": "russian",
  "label": "Русский",
  "locale": {
    "pages": {
      "HeadersDemo": {
        "pageAbout": "Заголовки могут быть использованы для того, чтоб разделять информацию по смыслу.",
        "infoBlock1": "Вы можете использовать 6 видов заголовков: ```H1```, ```H2```, ```H3```, ```H4```, ```H5```. Они отличаются друг от друга размером и тем, что в заголовках размером ниже H3 по умолчанию не рисуется разделительная линия и они не добавляются в автоматически сгенерированный блок содержания страницы. Чем больше цифра в заголовке - тем меньше ег размер. Таким образом, ```H1``` - самый большой заголовок, а ```H6``` - самый маленький.",
        "headersExample": "Пример заголовков",
        "contentAutoGeneration": "Автоматическая генерация содержания страницы",
        "tagsInfo": "Для того, чтобы заголовок не создавал пункты в автоматическом содержании страницы - передайте ему __параметр__ ```noTag```. Если заголовок создаёт присутствует в содержании - при наведении на него мышью - слева будет отображаться кнопка смены якоря для удобного указания места на странице при копировании __url__.",
        "noTagInfo": "> По умолчанию, у заголовков ```H1```, ```H2```, ```H3``` __параметр__ ```noTag = false```",
        "divider": "Разделитель",
        "dividerInfo": "Для того, чтобы заголовок не имел разделительую черту - передайте ему __параметр__ ```noDivider```.",
        "noDividerInfo": "> По умолчанию, у заголовков ```H1```, ```H2```, ```H3``` __параметр__ ```noDivider = false```",
        "customAnchors": "Пользовательские якоря",
        "anchorInfo": "Вы можете задавать якорь для заголовка вручную с помощью параметра ```id```. Если он не указан - заголовок автоматически сгенерирует якорь из своего содержимого."
      },
      "DocsPageAPI": {
        "pageAbout": "The API documentation of the DocsPage React component. Learn more about the props and the CSS customization points.",
        "pageSearchDescription": "DocsPage - react component, designed to provide user with page functional",
        "ComponentNameHeader": "Component name",
        "ComponentNameText": "The DocsPage name can be used for providing default props or style overriders at the theme level.",
        "enableProps": true,
        "props": [
          {
            "name": "name",
            "type": "string",
            "default": "",
            "description": "Название страницы. Route будет сгенерирован автоматически из названия."
          },
          {
            "name": "searchTags",
            "type": "string[]",
            "default": "",
            "description": "Ключевые слова для поиска страницы."
          },
          {
            "name": "searchLabel",
            "type": "string",
            "default": "",
            "description": "Label text, displayed in search result if page match search requirements."
          },
          {
            "name": "searchDescription",
            "type": "string",
            "default": "",
            "description": "Description text, displayed in search result if page match search requirements."
          },
          {
            "name": "noGenerateAutoSearch",
            "type": "boolean",
            "default": "false",
            "description": "If true, page will not generate search items from pages automatically."
          },
          {
            "name": "noAutoMenu",
            "type": "boolean",
            "default": "false",
            "description": "If true, page will not participate in auto menu generation."
          }
        ],
        "enableCss": true,
        "css": {
          "root": "Styles applied to the root element.",
          "contentItem": "Styles applied to the item element of content panel.",
          "contentItemActive": "Styles applied to the item element of content panel if it is active.",
          "contentLink": "Styles applied to the link of item element of content panel.",
          "copyright": "Styles applied to copyright panel if it shown."
        }
      }
    },
    "common": {
      "spells": {
        "Props": "Props",
        "Import": "Импорт"
      },
      "ComponentAPI": {
        "importDifferenceText": {
          "text1": "Вы можете узнать больше о разнице, ",
          "link1": "прочитав этот гайд",
          "text2": "."
        },
        "customizationText": "Вы можете переопределить стиль компонента следующими способами:",
        "customizationRule": "С помощью имени правила в ",
        "customizationClass": "С помощью",
        "customizationTheme": "С помощью темы и",
        "customizationFooterText": "Если этого недостаточно, Вы можете посмотреть реализацию кода для большей инфрмации.",
        "ruleName": "Название правила",
        "ruleDescription": "Описание",
        "propName": "Название",
        "propType": "Тип",
        "propDefault": "По умолчанию",
        "propDescription": "Описание",
        "ComponentNameHeader": "Имя компонента"
      }
    }
  }
}